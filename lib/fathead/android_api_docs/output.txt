android	A										<section class="prog__container">Contains resource classes used by applications included in the platform and defines application permissions for system features.</section>	https://developer.android.com/reference/android/package-summary.html
android.accessibilityservice	A										<section class="prog__container"> The classes in this package are used for development of accessibility service that provide alternative or augmented feedback to the user. </section>	https://developer.android.com/reference/android/accessibilityservice/package-summary.html
android.animation	A										<section class="prog__container"> These classes provide functionality for the property animation system, which allows you to animate object properties of any type. int, float, and hexadecimal color values are supported by default. You can animate any other type by telling the system how to calculate the values for that given type with a custom TypeEvaluator. </section>	https://developer.android.com/reference/android/animation/package-summary.html
android.app	A										<section class="prog__container">Contains high-level classes encapsulating the overall Android application model.</section>	https://developer.android.com/reference/android/app/package-summary.html
android.app.admin	A										<section class="prog__container">Provides device administration features at the system level, allowing you to create security-aware applications that are useful in enterprise settings, in which IT professionals require rich control over employee devices.</section>	https://developer.android.com/reference/android/app/admin/package-summary.html
android.app.backup	A										<section class="prog__container">Contains the backup and restore functionality available to applications. If a user wipes the data on their device or upgrades to a new Android-powered device, all applications that have enabled backup can restore the user's previous data when the application is reinstalled.</section>	https://developer.android.com/reference/android/app/backup/package-summary.html
android.appwidget	A										<section class="prog__container">Contains the components necessary to create "app widgets", which users can embed in other applications (such as the home screen) to quickly access application data and services without launching a new activity.</section>	https://developer.android.com/reference/android/appwidget/package-summary.html
android.bluetooth	A										<section class="prog__container">Provides classes that manage Bluetooth functionality, such as scanning for devices, connecting with devices, and managing data transfer between devices. The Bluetooth API supports both "Classic Bluetooth" and Bluetooth Low Energy.</section>	https://developer.android.com/reference/android/bluetooth/package-summary.html
android.content	A										<section class="prog__container">Contains classes for accessing and publishing data on a device. It includes three main categories of APIs:</section>	https://developer.android.com/reference/android/content/package-summary.html
android.content.pm	A										<section class="prog__container">Contains classes for accessing information about an application package, including information about its activities, permissions, services, signatures, and providers.</section>	https://developer.android.com/reference/android/content/pm/package-summary.html
android.content.res	A										<section class="prog__container">Contains classes for accessing application resources, such as raw asset files, colors, drawables, media or other other files in the package, plus important device configuration details (orientation, input types, etc.) that affect how the application may behave.</section>	https://developer.android.com/reference/android/content/res/package-summary.html
android.database	A										<section class="prog__container"> If you need to manage data in a private database, use the android.database.sqlite classes. These classes are used to manage the Cursor object returned from a content provider query. Databases are usually created and opened with openOrCreateDatabase(String, int, SQLiteDatabase.CursorFactory) To make requests through content providers, you can use the content.ContentResolver class. All databases are stored on the device in /data/data/<package_name>/databases Interfaces CrossProcessCursor A cross process cursor is an extension of a Cursor that also supports usage from remote processes. Cursor This interface provides random read-write access to the result set returned by a database query. DatabaseErrorHandler An interface to let apps define an action to take when database corruption is detected. Classes AbstractCursor This is an abstract cursor class that handles a lot of the common code that all cursors need to deal with and is provided for convenience reasons. AbstractCursor.SelfContentObserver Cursors use this class to track changes others make to their URI. AbstractWindowedCursor A base class for Cursors that store their data in CursorWindows. CharArrayBuffer This is used for copyStringToBuffer(int, CharArrayBuffer) ContentObservable A specialization of Observable for ContentObserver that provides methods for sending notifications to a list of ContentObserver objects. ContentObserver Receives call backs for changes to content. CrossProcessCursorWrapper Cursor wrapper that implements CrossProcessCursor. CursorJoiner Does a join on two cursors using the specified columns. CursorWindow A buffer containing multiple cursor rows. CursorWrapper Wrapper class for Cursor that delegates all calls to the actual cursor object. DatabaseUtils Static utility methods for dealing with databases and Cursors. DatabaseUtils.InsertHelper This class was deprecated in API level 17. Use SQLiteStatement instead. DataSetObservable A specialization of Observable for DataSetObserver that provides methods for sending notifications to a list of DataSetObserver objects. DataSetObserver Receives call backs when a data set has been changed, or made invalid. DefaultDatabaseErrorHandler Default class used to define the action to take when database corruption is reported by sqlite. MatrixCursor A mutable cursor implementation backed by an array of Objects. MatrixCursor.RowBuilder Builds a row of values using either of these approaches: Values can be added with explicit column ordering using add(Object), which starts from the left-most column and adds one column value at a time. MergeCursor A convience class that lets you present an array of Cursors as a single linear Cursor. Observable<T> Provides methods for registering or unregistering arbitrary observers in an ArrayList. Enums CursorJoiner.Result The result of a call to next(). Exceptions CursorIndexOutOfBoundsException An exception indicating that a cursor is out of bounds. SQLException An exception that indicates there was an error with SQL parsing or execution. StaleDataException This exception is thrown when a Cursor contains stale data and must be requeried before being used again. </section>	https://developer.android.com/reference/android/database/package-summary.html
android.database.sqlite	A										<section class="prog__container"> Applications use these classes to manage private databases. If creating a content provider, you will probably have to use these classes to create and manage your own database to store content. See Content Providers to learn the conventions for implementing a content provider. If you are working with data sent to you by a provider, you do not use these SQLite classes, but instead use the generic android.database classes. The Android SDK and Android emulators both include the sqlite3 command-line database tool. On your development machine, run the tool from the platform-tools/ folder of your SDK. On the emulator, run the tool with adb shell, for example, adb -e shell sqlite3. The version of SQLite depends on the version of Android. See the following table: Android APISQLite Version API 243.9 API 213.8 API 113.7 API 83.6 API 33.5 API 13.4 Some device manufacturers include different versions of SQLite on their devices. There are two ways to programmatically determine the version number. If available, use the sqlite3 tool, for example: adb -e shell sqlite3 --version. Create and query an in-memory database as shown in the following code sample: String query = "select sqlite_version() AS sqlite_version"; SQLiteDatabase db = SQLiteDatabase.openOrCreateDatabase(":memory:", null); Cursor cursor = db.rawQuery(query, null); String sqliteVersion = ""; if (cursor.moveToNext()) { sqliteVersion = cursor.getString(0); } Interfaces SQLiteCursorDriver A driver for SQLiteCursors that is used to create them and gets notified by the cursors it creates on significant events in their lifetimes. SQLiteDatabase.CursorFactory Used to allow returning sub-classes of Cursor when calling query. SQLiteTransactionListener A listener for transaction events. Classes SQLiteClosable An object created from a SQLiteDatabase that can be closed. SQLiteCursor A Cursor implementation that exposes results from a query on a SQLiteDatabase. SQLiteDatabase Exposes methods to manage a SQLite database. SQLiteOpenHelper A helper class to manage database creation and version management. SQLiteProgram A base class for compiled SQLite programs. SQLiteQuery Represents a query that reads the resulting rows into a SQLiteQuery. SQLiteQueryBuilder This is a convience class that helps build SQL queries to be sent to SQLiteDatabase objects. SQLiteStatement Represents a statement that can be executed against a database. Exceptions SQLiteAbortException An exception that indicates that the SQLite program was aborted. SQLiteAccessPermException This exception class is used when sqlite can't access the database file due to lack of permissions on the file. SQLiteBindOrColumnIndexOutOfRangeException Thrown if the the bind or column parameter index is out of range SQLiteBlobTooBigException SQLiteCantOpenDatabaseException SQLiteConstraintException An exception that indicates that an integrity constraint was violated. SQLiteDatabaseCorruptException An exception that indicates that the SQLite database file is corrupt. SQLiteDatabaseLockedException Thrown if the database engine was unable to acquire the database locks it needs to do its job. SQLiteDatatypeMismatchException SQLiteDiskIOException An exception that indicates that an IO error occured while accessing the SQLite database file. SQLiteDoneException An exception that indicates that the SQLite program is done. SQLiteException A SQLite exception that indicates there was an error with SQL parsing or execution. SQLiteFullException An exception that indicates that the SQLite database is full. SQLiteMisuseException This error can occur if the application creates a SQLiteStatement object and allows multiple threads in the application use it at the same time. SQLiteOutOfMemoryException SQLiteReadOnlyDatabaseException SQLiteTableLockedException </section>	https://developer.android.com/reference/android/database/sqlite/package-summary.html
android.databinding	A										<section class="prog__container">Contains components used when developing applications with data binding.</section>	https://developer.android.com/reference/android/databinding/package-summary.html
android.drm	A										<section class="prog__container">Provides classes for managing DRM content and determining the capabilities of DRM plugins (agents). Common uses of the DRM API include:</section>	https://developer.android.com/reference/android/drm/package-summary.html
android.graphics.drawable	A										<section class="prog__container">Provides classes to manage a variety of visual elements that are intended for display only, such as bitmaps and gradients. These elements are often used by widgets as background images or simply as indicators (for example, a volume level indicator).</section>	https://developer.android.com/reference/android/graphics/drawable/package-summary.html
android.hardware	A										<section class="prog__container">Provides support for hardware features, such as the camera and other sensors. Be aware that not all Android-powered devices support all hardware features, so you should declare hardware that your application requires using the <uses-feature> manifest element.</section>	https://developer.android.com/reference/android/hardware/package-summary.html
android.hardware.camera2	A										<section class="prog__container">The android.hardware.camera2 package provides an interface to individual camera devices connected to an Android device. It replaces the deprecated Camera class.</section>	https://developer.android.com/reference/android/hardware/camera2/package-summary.html
android.hardware.usb	A										<section class="prog__container">Provides support to communicate with USB hardware peripherals that are connected to Android-powered devices.</section>	https://developer.android.com/reference/android/hardware/usb/package-summary.html
android.location	A										<section class="prog__container">Contains the framework API classes that define Android location-based and related services.</section>	https://developer.android.com/reference/android/location/package-summary.html
android.media	A										<section class="prog__container">The Media APIs are used to play and, in some cases, record media files. This includes audio (e.g., play MP3s or other music files, ringtones, game sound effects, or DTMF tones) and video (e.g., play a video streamed over the web or from local storage). </section>	https://developer.android.com/reference/android/media/package-summary.html
android.media.effect	A										<section class="prog__container">Provides classes that allow you to apply a variety of visual effects to images and videos. For example, you can easily fix red-eye, convert an image to grayscale, adjust brightness, adjust saturation, rotate an image, apply a fisheye effect, and much more. The system performs all effects processing on the GPU to obtain maximum performance.</section>	https://developer.android.com/reference/android/media/effect/package-summary.html
