Manifest	A										<section class="prog__container"><pre><code>public final class Manifest</code></pre></section>	https://developer.android.com/reference/android/Manifest.html
Manifest.permission	A										<section class="prog__container"><pre><code>public static final class Manifest.permission</code></pre></section>	https://developer.android.com/reference/android/Manifest.permission.html
Manifest.permission_group	A										<section class="prog__container"><pre><code>public static final class Manifest.permission_group</code></pre></section>	https://developer.android.com/reference/android/Manifest.permission_group.html
android	A										<section class="prog__container">Contains resource classes used by applications included in the platform and defines application permissions for system features.</section>	https://developer.android.com/reference/android/package-summary.html
R.anim	A										<section class="prog__container"><pre><code>public static final class R.anim</code></pre></section>	https://developer.android.com/reference/android/R.anim.html
R.animator	A										<section class="prog__container"><pre><code>public static final class R.animator</code></pre></section>	https://developer.android.com/reference/android/R.animator.html
R.array	A										<section class="prog__container"><pre><code>public static final class R.array</code></pre></section>	https://developer.android.com/reference/android/R.array.html
R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/R.attr.html
R.bool	A										<section class="prog__container"><pre><code>public static final class R.bool</code></pre></section>	https://developer.android.com/reference/android/R.bool.html
R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/R.color.html
R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/R.dimen.html
R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/R.drawable.html
R.fraction	A										<section class="prog__container"><pre><code>public static final class R.fraction</code></pre></section>	https://developer.android.com/reference/android/R.fraction.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/R.html
R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/R.id.html
R.integer	A										<section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>	https://developer.android.com/reference/android/R.integer.html
R.interpolator	A										<section class="prog__container"><pre><code>public static final class R.interpolator</code></pre></section>	https://developer.android.com/reference/android/R.interpolator.html
R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/R.layout.html
R.menu	A										<section class="prog__container"><pre><code>public static final class R.menu</code></pre></section>	https://developer.android.com/reference/android/R.menu.html
R.mipmap	A										<section class="prog__container"><pre><code>public static final class R.mipmap</code></pre></section>	https://developer.android.com/reference/android/R.mipmap.html
R.plurals	A										<section class="prog__container"><pre><code>public static final class R.plurals</code></pre></section>	https://developer.android.com/reference/android/R.plurals.html
R.raw	A										<section class="prog__container"><pre><code>public static final class R.raw</code></pre></section>	https://developer.android.com/reference/android/R.raw.html
R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/R.string.html
R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/R.style.html
R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/R.styleable.html
R.transition	A										<section class="prog__container"><pre><code>public static final class R.transition</code></pre></section>	https://developer.android.com/reference/android/R.transition.html
R.xml	A										<section class="prog__container"><pre><code>public static final class R.xml</code></pre></section>	https://developer.android.com/reference/android/R.xml.html
AccessibilityService.GestureResultCallback	A										<section class="prog__container">Class used to report status of dispatched gestures<pre><code>public static abstract class AccessibilityService.GestureResultCallback</code></pre></section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.GestureResultCallback.html
AccessibilityService	A										<section class="prog__container">Accessibility services should only be used to assist users with disabilities in using Android devices and apps. They run in the background and receive callbacks by the system when <pre><code>AccessibilityEvent</code></pre>s are fired. Such events denote some state transition in the user interface, for example, the focus has changed, a button has been clicked, etc. Such a service can optionally request the capability for querying the content of the active window. Development of an accessibility service requires extending this class and implementing its abstract methods. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public abstract class AccessibilityService</code></pre></section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.html
AccessibilityService.MagnificationController	A										<section class="prog__container">Used to control and query the state of display magnification.<pre><code>public static final class AccessibilityService.MagnificationController</code></pre></section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.MagnificationController.html
AccessibilityService.MagnificationController.OnMagnificationChangedListener	A										<section class="prog__container">Listener for changes in the state of magnification.<pre><code>public static interface AccessibilityService.MagnificationController.OnMagnificationChangedListener</code></pre></section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.MagnificationController.OnMagnificationChangedListener.html
AccessibilityService.SoftKeyboardController	A										<section class="prog__container">Used to control and query the soft keyboard show mode.<pre><code>public static final class AccessibilityService.SoftKeyboardController</code></pre></section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.SoftKeyboardController.html
AccessibilityService.SoftKeyboardController.OnShowModeChangedListener	A										<section class="prog__container">Listener for changes in the soft keyboard show mode.<pre><code>public static interface AccessibilityService.SoftKeyboardController.OnShowModeChangedListener</code></pre></section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.SoftKeyboardController.OnShowModeChangedListener.html
AccessibilityServiceInfo	A										<section class="prog__container">This class describes an <pre><code>AccessibilityService</code></pre>. The system notifies an <pre><code>AccessibilityService</code></pre> for <pre><code>AccessibilityEvent</code></pre>s according to the information encapsulated in this class. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class AccessibilityServiceInfo</code></pre></section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityServiceInfo.html
GestureDescription.Builder	A										<section class="prog__container">Builder for a <pre><code>GestureDescription</code></pre><pre><code>public static class GestureDescription.Builder</code></pre></section>	https://developer.android.com/reference/android/accessibilityservice/GestureDescription.Builder.html
GestureDescription	A										<section class="prog__container">Accessibility services with the <pre><code>AccessibilityService_canPerformGestures</code></pre> property can dispatch gestures. This class describes those gestures. Gestures are made up of one or more strokes. Gestures are immutable once built.<pre><code>public final class GestureDescription</code></pre></section>	https://developer.android.com/reference/android/accessibilityservice/GestureDescription.html
GestureDescription.StrokeDescription	A										<section class="prog__container">Immutable description of stroke that can be part of a gesture.<pre><code>public static class GestureDescription.StrokeDescription</code></pre></section>	https://developer.android.com/reference/android/accessibilityservice/GestureDescription.StrokeDescription.html
android.accessibilityservice	A										<section class="prog__container"> The classes in this package are used for development of accessibility service that provide alternative or augmented feedback to the user. </section>	https://developer.android.com/reference/android/accessibilityservice/package-summary.html
AbstractAccountAuthenticator	A										<section class="prog__container">Abstract base class for creating AccountAuthenticators. In order to be an authenticator one must extend this class, provider implementations for the abstract methods and write a service that returns the result of <pre><code>getIBinder()</code></pre> in the service's <pre><code>onBind(android.content.Intent)</code></pre> when invoked with an intent with action <pre><code>ACTION_AUTHENTICATOR_INTENT</code></pre>. This service must specify the following intent filter and metadata tags in its AndroidManifest.xml file <pre> &lt;intent-filter&gt; &lt;action android:name="android.accounts.AccountAuthenticator" /&gt; &lt;/intent-filter&gt; &lt;meta-data android:name="android.accounts.AccountAuthenticator" android:resource="@xml/authenticator" /&gt; </pre> The <pre><code>android:resource</code></pre> attribute must point to a resource that looks like: <pre> &lt;account-authenticator xmlns:android="http://schemas.android.com/apk/res/android" android:accountType="typeOfAuthenticator" android:icon="@drawable/icon" android:smallIcon="@drawable/miniIcon" android:label="@string/label" android:accountPreferences="@xml/account_preferences" /&gt; </pre> Replace the icons and labels with your own resources. The <pre><code>android:accountType</code></pre> attribute must be a string that uniquely identifies your authenticator and will be the same string that user will use when making calls on the <pre><code>AccountManager</code></pre> and it also corresponds to <pre><code>type</code></pre> for your accounts. One user of the android:icon is the "Account &amp; Sync" settings page and one user of the android:smallIcon is the Contact Application's tab panels.<pre><code>public abstract class AbstractAccountAuthenticator</code></pre></section>	https://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html
Account	A										<section class="prog__container">Value type that represents an Account in the <pre><code>AccountManager</code></pre>. This object is <pre><code>Parcelable</code></pre> and also overrides <pre><code>equals(Object)</code></pre> and <pre><code>hashCode()</code></pre>, making it suitable for use as the key of a <pre><code>Map</code></pre><pre><code>public class Account</code></pre></section>	https://developer.android.com/reference/android/accounts/Account.html
AccountAuthenticatorActivity	A										<section class="prog__container">Base class for implementing an Activity that is used to help implement an AbstractAccountAuthenticator. If the AbstractAccountAuthenticator needs to use an activity to handle the request then it can have the activity extend AccountAuthenticatorActivity. The AbstractAccountAuthenticator passes in the response to the intent using the following: <pre> intent.putExtra(<pre><code>KEY_ACCOUNT_AUTHENTICATOR_RESPONSE</code></pre>, response); </pre> The activity then sets the result that is to be handed to the response via <pre><code>setAccountAuthenticatorResult(android.os.Bundle)</code></pre>. This result will be sent as the result of the request when the activity finishes. If this is never set or if it is set to null then error <pre><code>ERROR_CODE_CANCELED</code></pre> will be called on the response.<pre><code>public class AccountAuthenticatorActivity</code></pre></section>	https://developer.android.com/reference/android/accounts/AccountAuthenticatorActivity.html
AccountAuthenticatorResponse	A										<section class="prog__container">Object used to communicate responses back to the AccountManager<pre><code>public class AccountAuthenticatorResponse</code></pre></section>	https://developer.android.com/reference/android/accounts/AccountAuthenticatorResponse.html
AccountManager	A										<section class="prog__container">This class provides access to a centralized registry of the user's online accounts. The user enters credentials (username and password) once per account, granting applications access to online resources with "one-click" approval.<pre><code>public class AccountManager</code></pre></section>	https://developer.android.com/reference/android/accounts/AccountManager.html
AccountManagerCallback	A										<section class="prog__container"><pre><code>public interface AccountManagerCallback</code></pre></section>	https://developer.android.com/reference/android/accounts/AccountManagerCallback.html
AccountManagerFuture	A										<section class="prog__container">A <tt>AccountManagerFuture</tt> represents the result of an asynchronous <pre><code>AccountManager</code></pre> call. Methods are provided to check if the computation is complete, to wait for its completion, and to retrieve the result of the computation. The result can only be retrieved using method <tt>get</tt> when the computation has completed, blocking if necessary until it is ready. Cancellation is performed by the <tt>cancel</tt> method. Additional methods are provided to determine if the task completed normally or was cancelled. Once a computation has completed, the computation cannot be cancelled. If you would like to use a <tt>Future</tt> for the sake of cancellability but not provide a usable result, you can declare types of the form <tt>Future&lt;?&gt;</tt> and return <tt>null</tt> as a result of the underlying task.<pre><code>public interface AccountManagerFuture</code></pre></section>	https://developer.android.com/reference/android/accounts/AccountManagerFuture.html
AccountsException	A										<section class="prog__container"><pre><code>public class AccountsException</code></pre></section>	https://developer.android.com/reference/android/accounts/AccountsException.html
AuthenticatorDescription	A										<section class="prog__container">A <pre><code>Parcelable</code></pre> value type that contains information about an account authenticator.<pre><code>public class AuthenticatorDescription</code></pre></section>	https://developer.android.com/reference/android/accounts/AuthenticatorDescription.html
AuthenticatorException	A										<section class="prog__container"><pre><code>public class AuthenticatorException</code></pre></section>	https://developer.android.com/reference/android/accounts/AuthenticatorException.html
NetworkErrorException	A										<section class="prog__container"><pre><code>public class NetworkErrorException</code></pre></section>	https://developer.android.com/reference/android/accounts/NetworkErrorException.html
OnAccountsUpdateListener	A										<section class="prog__container">An interface that contains the callback used by the AccountManager<pre><code>public interface OnAccountsUpdateListener</code></pre></section>	https://developer.android.com/reference/android/accounts/OnAccountsUpdateListener.html
OperationCanceledException	A										<section class="prog__container"><pre><code>public class OperationCanceledException</code></pre></section>	https://developer.android.com/reference/android/accounts/OperationCanceledException.html
Animator.AnimatorListener	A										<section class="prog__container"><pre><code>public static interface Animator.AnimatorListener</code></pre></section>	https://developer.android.com/reference/android/animation/Animator.AnimatorListener.html
Animator.AnimatorPauseListener	A										<section class="prog__container">A pause listener receives notifications from an animation when the animation is <pre><code>paused</code></pre> or <pre><code>resumed</code></pre>.<pre><code>public static interface Animator.AnimatorPauseListener</code></pre></section>	https://developer.android.com/reference/android/animation/Animator.AnimatorPauseListener.html
Animator	A										<section class="prog__container">This is the superclass for classes which provide basic support for animations which can be started, ended, and have <pre><code>AnimatorListeners</code></pre> added to them.<pre><code>public abstract class Animator</code></pre></section>	https://developer.android.com/reference/android/animation/Animator.html
AnimatorInflater	A										<section class="prog__container">This class is used to instantiate animator XML files into Animator objects.<pre><code>public class AnimatorInflater</code></pre></section>	https://developer.android.com/reference/android/animation/AnimatorInflater.html
AnimatorListenerAdapter	A										<section class="prog__container">This adapter class provides empty implementations of the methods from <pre><code>Animator.AnimatorListener</code></pre>. Any custom listener that cares only about a subset of the methods of this listener can simply subclass this adapter class instead of implementing the interface directly.<pre><code>public abstract class AnimatorListenerAdapter</code></pre></section>	https://developer.android.com/reference/android/animation/AnimatorListenerAdapter.html
AnimatorSet.Builder	A										<section class="prog__container">The <pre><code>Builder</code></pre> object is a utility class to facilitate adding animations to a <pre><code>AnimatorSet</code></pre> along with the relationships between the various animations. The intention of the <pre><code>Builder</code></pre> methods, along with the <pre><code>play()</code></pre> method of <pre><code>AnimatorSet</code></pre> is to make it possible to express the dependency relationships of animations in a natural way. Developers can also use the <pre><code>playTogether()</code></pre> and <pre><code>playSequentially()</code></pre> methods if these suit the need, but it might be easier in some situations to express the AnimatorSet of animations in pairs.<pre><code>public class AnimatorSet.Builder</code></pre></section>	https://developer.android.com/reference/android/animation/AnimatorSet.Builder.html
AnimatorSet	A										<section class="prog__container">This class plays a set of <pre><code>Animator</code></pre> objects in the specified order. Animations can be set up to play together, in sequence, or after a specified delay.<pre><code>public final class AnimatorSet</code></pre></section>	https://developer.android.com/reference/android/animation/AnimatorSet.html
ArgbEvaluator	A										<section class="prog__container">This evaluator can be used to perform type interpolation between integer values that represent ARGB colors.<pre><code>public class ArgbEvaluator</code></pre></section>	https://developer.android.com/reference/android/animation/ArgbEvaluator.html
BidirectionalTypeConverter	A										<section class="prog__container">Abstract base class used convert type T to another type V and back again. This is necessary when the value types of in animation are different from the property type. BidirectionalTypeConverter is needed when only the final value for the animation is supplied to animators.<pre><code>public abstract class BidirectionalTypeConverter</code></pre></section>	https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html
FloatArrayEvaluator	A										<section class="prog__container">This evaluator can be used to perform type interpolation between <pre><code>float[]</code></pre> values. Each index into the array is treated as a separate value to interpolate. For example, evaluating <pre><code>{100, 200}</code></pre> and <pre><code>{300, 400}</code></pre> will interpolate the value at the first index between 100 and 300 and the value at the second index value between 200 and 400.<pre><code>public class FloatArrayEvaluator</code></pre></section>	https://developer.android.com/reference/android/animation/FloatArrayEvaluator.html
FloatEvaluator	A										<section class="prog__container">This evaluator can be used to perform type interpolation between <pre><code>float</code></pre> values.<pre><code>public class FloatEvaluator</code></pre></section>	https://developer.android.com/reference/android/animation/FloatEvaluator.html
IntArrayEvaluator	A										<section class="prog__container">This evaluator can be used to perform type interpolation between <pre><code>int[]</code></pre> values. Each index into the array is treated as a separate value to interpolate. For example, evaluating <pre><code>{100, 200}</code></pre> and <pre><code>{300, 400}</code></pre> will interpolate the value at the first index between 100 and 300 and the value at the second index value between 200 and 400.<pre><code>public class IntArrayEvaluator</code></pre></section>	https://developer.android.com/reference/android/animation/IntArrayEvaluator.html
IntEvaluator	A										<section class="prog__container">This evaluator can be used to perform type interpolation between <pre><code>int</code></pre> values.<pre><code>public class IntEvaluator</code></pre></section>	https://developer.android.com/reference/android/animation/IntEvaluator.html
Keyframe	A										<section class="prog__container">This class holds a time/value pair for an animation. The Keyframe class is used by <pre><code>ValueAnimator</code></pre> to define the values that the animation target will have over the course of the animation. As the time proceeds from one keyframe to the other, the value of the target object will animate between the value at the previous keyframe and the value at the next keyframe. Each keyframe also holds an optional <pre><code>TimeInterpolator</code></pre> object, which defines the time interpolation over the intervalue preceding the keyframe.<pre><code>public abstract class Keyframe</code></pre></section>	https://developer.android.com/reference/android/animation/Keyframe.html
LayoutTransition	A										<section class="prog__container">This class enables automatic animations on layout changes in ViewGroup objects. To enable transitions for a layout container, create a LayoutTransition object and set it on any ViewGroup by calling <pre><code>setLayoutTransition(LayoutTransition)</code></pre>. This will cause default animations to run whenever items are added to or removed from that container. To specify custom animations, use the <pre><code>setAnimator()</code></pre> method.<pre><code>public class LayoutTransition</code></pre></section>	https://developer.android.com/reference/android/animation/LayoutTransition.html
LayoutTransition.TransitionListener	A										<section class="prog__container">This interface is used for listening to starting and ending events for transitions.<pre><code>public static interface LayoutTransition.TransitionListener</code></pre></section>	https://developer.android.com/reference/android/animation/LayoutTransition.TransitionListener.html
ObjectAnimator	A										<section class="prog__container">This subclass of <pre><code>ValueAnimator</code></pre> provides support for animating properties on target objects. The constructors of this class take parameters to define the target object that will be animated as well as the name of the property that will be animated. Appropriate set/get functions are then determined internally and the animation will call these functions as necessary to animate the property.<pre><code>public final class ObjectAnimator</code></pre></section>	https://developer.android.com/reference/android/animation/ObjectAnimator.html
android.animation	A										<section class="prog__container"> These classes provide functionality for the property animation system, which allows you to animate object properties of any type. int, float, and hexadecimal color values are supported by default. You can animate any other type by telling the system how to calculate the values for that given type with a custom TypeEvaluator. </section>	https://developer.android.com/reference/android/animation/package-summary.html
PointFEvaluator	A										<section class="prog__container">This evaluator can be used to perform type interpolation between <pre><code>PointF</code></pre> values.<pre><code>public class PointFEvaluator</code></pre></section>	https://developer.android.com/reference/android/animation/PointFEvaluator.html
PropertyValuesHolder	A										<section class="prog__container">This class holds information about a property and the values that that property should take on during an animation. PropertyValuesHolder objects can be used to create animations with ValueAnimator or ObjectAnimator that operate on several different properties in parallel.<pre><code>public class PropertyValuesHolder</code></pre></section>	https://developer.android.com/reference/android/animation/PropertyValuesHolder.html
RectEvaluator	A										<section class="prog__container">This evaluator can be used to perform type interpolation between <pre><code>Rect</code></pre> values.<pre><code>public class RectEvaluator</code></pre></section>	https://developer.android.com/reference/android/animation/RectEvaluator.html
StateListAnimator	A										<section class="prog__container">Lets you define a number of Animators that will run on the attached View depending on the View's drawable state.<pre><code>public class StateListAnimator</code></pre></section>	https://developer.android.com/reference/android/animation/StateListAnimator.html
TimeAnimator	A										<section class="prog__container">This class provides a simple callback mechanism to listeners that is synchronized with all other animators in the system. There is no duration, interpolation, or object value-setting with this Animator. Instead, it is simply started, after which it proceeds to send out events on every animation frame to its TimeListener (if set), with information about this animator, the total elapsed time, and the elapsed time since the previous animation frame.<pre><code>public class TimeAnimator</code></pre></section>	https://developer.android.com/reference/android/animation/TimeAnimator.html
TimeAnimator.TimeListener	A										<section class="prog__container">Implementors of this interface can set themselves as update listeners to a <pre><code>TimeAnimator</code></pre> instance to receive callbacks on every animation frame to receive the total time since the animator started and the delta time since the last frame. The first time the listener is called, deltaTime will be zero. The same is true for totalTime, unless the animator was set to a specific <pre><code>currentPlayTime</code></pre> prior to starting.<pre><code>public static interface TimeAnimator.TimeListener</code></pre></section>	https://developer.android.com/reference/android/animation/TimeAnimator.TimeListener.html
TimeInterpolator	A										<section class="prog__container">A time interpolator defines the rate of change of an animation. This allows animations to have non-linear motion, such as acceleration and deceleration.<pre><code>public interface TimeInterpolator</code></pre></section>	https://developer.android.com/reference/android/animation/TimeInterpolator.html
TypeConverter	A										<section class="prog__container">Abstract base class used convert type T to another type V. This is necessary when the value types of in animation are different from the property type.<pre><code>public abstract class TypeConverter</code></pre></section>	https://developer.android.com/reference/android/animation/TypeConverter.html
TypeEvaluator	A										<section class="prog__container">Interface for use with the <pre><code>setEvaluator(TypeEvaluator)</code></pre> function. Evaluators allow developers to create animations on arbitrary property types, by allowing them to supply custom evaluators for types that are not automatically understood and used by the animation system.<pre><code>public interface TypeEvaluator</code></pre></section>	https://developer.android.com/reference/android/animation/TypeEvaluator.html
ValueAnimator.AnimatorUpdateListener	A										<section class="prog__container">Implementors of this interface can add themselves as update listeners to an <pre><code>ValueAnimator</code></pre> instance to receive callbacks on every animation frame, after the current frame's values have been calculated for that <pre><code>ValueAnimator</code></pre>.<pre><code>public static interface ValueAnimator.AnimatorUpdateListener</code></pre></section>	https://developer.android.com/reference/android/animation/ValueAnimator.AnimatorUpdateListener.html
ValueAnimator	A										<section class="prog__container">This class provides a simple timing engine for running animations which calculate animated values and set them on target objects.<pre><code>public class ValueAnimator</code></pre></section>	https://developer.android.com/reference/android/animation/ValueAnimator.html
SuppressLint	A										<section class="prog__container">Indicates that Lint should ignore the specified warnings for the annotated element.<pre><code>public abstract @interface SuppressLint</code></pre></section>	https://developer.android.com/reference/android/annotation/SuppressLint.html
TargetApi	A										<section class="prog__container">Indicates that Lint should treat this type as targeting a given API level, no matter what the project target is.<pre><code>public abstract @interface TargetApi</code></pre></section>	https://developer.android.com/reference/android/annotation/TargetApi.html
ActionBar	A										<section class="prog__container">A primary toolbar within the activity that may display the activity title, application-level navigation affordances, and other interactive items.<pre><code>public abstract class ActionBar</code></pre></section>	https://developer.android.com/reference/android/app/ActionBar.html
ActionBar.LayoutParams	A										<section class="prog__container">Per-child layout information associated with action bar custom views.<pre><code>public static class ActionBar.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/app/ActionBar.LayoutParams.html
ActionBar.OnMenuVisibilityListener	A										<section class="prog__container">Listener for receiving events when action bar menus are shown or hidden.<pre><code>public static interface ActionBar.OnMenuVisibilityListener</code></pre></section>	https://developer.android.com/reference/android/app/ActionBar.OnMenuVisibilityListener.html
ActionBar.OnNavigationListener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.<pre><code>public static interface ActionBar.OnNavigationListener</code></pre></section>	https://developer.android.com/reference/android/app/ActionBar.OnNavigationListener.html
ActionBar.Tab	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.<pre><code>public static abstract class ActionBar.Tab</code></pre></section>	https://developer.android.com/reference/android/app/ActionBar.Tab.html
ActionBar.TabListener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.<pre><code>public static interface ActionBar.TabListener</code></pre></section>	https://developer.android.com/reference/android/app/ActionBar.TabListener.html
Activity	A										<section class="prog__container">An activity is a single, focused thing that the user can do. Almost all activities interact with the user, so the Activity class takes care of creating a window for you in which you can place your UI with <pre><code>setContentView(View)</code></pre>. While activities are often presented to the user as full-screen windows, they can also be used in other ways: as floating windows (via a theme with <pre><code>windowIsFloating</code></pre> set) or embedded inside of another activity (using <pre><code>ActivityGroup</code></pre>). There are two methods almost all subclasses of Activity will implement: <ul> <li> <pre><code>onCreate(Bundle)</code></pre> is where you initialize your activity. Most importantly, here you will usually call <pre><code>setContentView(int)</code></pre> with a layout resource defining your UI, and using <pre><code>findViewById(int)</code></pre> to retrieve the widgets in that UI that you need to interact with programmatically. <li> <pre><code>onPause()</code></pre> is where you deal with the user leaving your activity. Most importantly, any changes made by the user should at this point be committed (usually to the <pre><code>ContentProvider</code></pre> holding the data). </li></li></ul><pre><code>public class Activity</code></pre></section>	https://developer.android.com/reference/android/app/Activity.html
ActivityGroup	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 13.</strong><br/> Use the new <pre><code>Fragment</code></pre> and <pre><code>FragmentManager</code></pre> APIs instead; these are also available on older platforms through the Android compatibility package.<pre><code>public class ActivityGroup</code></pre></section>	https://developer.android.com/reference/android/app/ActivityGroup.html
ActivityManager.AppTask	A										<section class="prog__container">The AppTask allows you to manage your own application's tasks. See <pre><code>getAppTasks()</code></pre><pre><code>public static class ActivityManager.AppTask</code></pre></section>	https://developer.android.com/reference/android/app/ActivityManager.AppTask.html
ActivityManager	A										<section class="prog__container"><pre><code>public class ActivityManager</code></pre></section>	https://developer.android.com/reference/android/app/ActivityManager.html
ActivityManager.MemoryInfo	A										<section class="prog__container">Information you can retrieve about the available memory through <pre><code>getMemoryInfo(ActivityManager.MemoryInfo)</code></pre>.<pre><code>public static class ActivityManager.MemoryInfo</code></pre></section>	https://developer.android.com/reference/android/app/ActivityManager.MemoryInfo.html
ActivityManager.ProcessErrorStateInfo	A										<section class="prog__container">Information you can retrieve about any processes that are in an error condition.<pre><code>public static class ActivityManager.ProcessErrorStateInfo</code></pre></section>	https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html
ActivityManager.RecentTaskInfo	A										<section class="prog__container">Information you can retrieve about tasks that the user has most recently started or visited.<pre><code>public static class ActivityManager.RecentTaskInfo</code></pre></section>	https://developer.android.com/reference/android/app/ActivityManager.RecentTaskInfo.html
ActivityManager.RunningAppProcessInfo	A										<section class="prog__container">Information you can retrieve about a running process.<pre><code>public static class ActivityManager.RunningAppProcessInfo</code></pre></section>	https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html
ActivityManager.RunningServiceInfo	A										<section class="prog__container">Information you can retrieve about a particular Service that is currently running in the system.<pre><code>public static class ActivityManager.RunningServiceInfo</code></pre></section>	https://developer.android.com/reference/android/app/ActivityManager.RunningServiceInfo.html
ActivityManager.RunningTaskInfo	A										<section class="prog__container">Information you can retrieve about a particular task that is currently "running" in the system. Note that a running task does not mean the given task actually has a process it is actively running in; it simply means that the user has gone to it and never closed it, but currently the system may have killed its process and is only holding on to its last state in order to restart it when the user returns.<pre><code>public static class ActivityManager.RunningTaskInfo</code></pre></section>	https://developer.android.com/reference/android/app/ActivityManager.RunningTaskInfo.html
ActivityManager.TaskDescription	A										<section class="prog__container">Information you can set and retrieve about the current activity within the recent task list.<pre><code>public static class ActivityManager.TaskDescription</code></pre></section>	https://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html
ActivityOptions	A										<section class="prog__container">Helper class for building an options Bundle that can be used with <pre><code>Context.startActivity(Intent, Bundle)</code></pre> and related methods.<pre><code>public class ActivityOptions</code></pre></section>	https://developer.android.com/reference/android/app/ActivityOptions.html
AlarmManager.AlarmClockInfo	A										<section class="prog__container">An immutable description of a scheduled "alarm clock" event.<pre><code>public static final class AlarmManager.AlarmClockInfo</code></pre></section>	https://developer.android.com/reference/android/app/AlarmManager.AlarmClockInfo.html
AlarmManager	A										<section class="prog__container">This class provides access to the system alarm services. These allow you to schedule your application to be run at some point in the future. When an alarm goes off, the <pre><code>Intent</code></pre> that had been registered for it is broadcast by the system, automatically starting the target application if it is not already running. Registered alarms are retained while the device is asleep (and can optionally wake the device up if they go off during that time), but will be cleared if it is turned off and rebooted.<pre><code>public class AlarmManager</code></pre></section>	https://developer.android.com/reference/android/app/AlarmManager.html
AlarmManager.OnAlarmListener	A										<section class="prog__container">Direct-notification alarms: the requester must be running continuously from the time the alarm is set to the time it is delivered, or delivery will fail. Only one-shot alarms can be set using this mechanism, not repeating alarms.<pre><code>public static interface AlarmManager.OnAlarmListener</code></pre></section>	https://developer.android.com/reference/android/app/AlarmManager.OnAlarmListener.html
AlertDialog.Builder	A										<section class="prog__container"><pre><code>public static class AlertDialog.Builder</code></pre></section>	https://developer.android.com/reference/android/app/AlertDialog.Builder.html
AlertDialog	A										<section class="prog__container">A subclass of Dialog that can display one, two or three buttons. If you only want to display a String in this dialog box, use the setMessage() method. If you want to display a more complex view, look up the FrameLayout called "custom" and add your view to it: <pre> FrameLayout fl = (FrameLayout) findViewById(android.R.id.custom); fl.addView(myView, new LayoutParams(MATCH_PARENT, WRAP_CONTENT)); </pre><pre><code>public class AlertDialog</code></pre></section>	https://developer.android.com/reference/android/app/AlertDialog.html
AliasActivity	A										<section class="prog__container">Stub activity that launches another activity (and then finishes itself) based on information in its component's manifest meta-data. This is a simple way to implement an alias-like mechanism. To use this activity, you should include in the manifest for the associated component an entry named "android.app.alias". It is a reference to an XML resource describing an intent that launches the real application.<pre><code>public class AliasActivity</code></pre></section>	https://developer.android.com/reference/android/app/AliasActivity.html
Application.ActivityLifecycleCallbacks	A										<section class="prog__container"><pre><code>public static interface Application.ActivityLifecycleCallbacks</code></pre></section>	https://developer.android.com/reference/android/app/Application.ActivityLifecycleCallbacks.html
Application	A										<section class="prog__container">Base class for maintaining global application state. You can provide your own implementation by creating a subclass and specifying the fully-qualified name of this subclass as the <pre><code>"android:name"</code></pre> attribute in your AndroidManifest.xml's <pre><code>&lt;application&gt;</code></pre> tag. The Application class, or your subclass of the Application class, is instantiated before any other class when the process for your application/package is created. <p class="note"><strong>Note: </strong>There is normally no need to subclass Application. In most situations, static singletons can provide the same functionality in a more modular way. If your singleton needs a global context (for example to register broadcast receivers), include <pre><code>Context.getApplicationContext()</code></pre> as a <pre><code>Context</code></pre> argument when invoking your singleton's <pre><code>getInstance()</code></pre> method.<pre><code>public class Application</code></pre></section>	https://developer.android.com/reference/android/app/Application.html
Application.OnProvideAssistDataListener	A										<section class="prog__container">Callback interface for use with <pre><code>registerOnProvideAssistDataListener(Application.OnProvideAssistDataListener)</code></pre> and <pre><code>unregisterOnProvideAssistDataListener(Application.OnProvideAssistDataListener)</code></pre>.<pre><code>public static interface Application.OnProvideAssistDataListener</code></pre></section>	https://developer.android.com/reference/android/app/Application.OnProvideAssistDataListener.html
ApplicationErrorReport.AnrInfo	A										<section class="prog__container">Describes an application not responding error.<pre><code>public static class ApplicationErrorReport.AnrInfo</code></pre></section>	https://developer.android.com/reference/android/app/ApplicationErrorReport.AnrInfo.html
ApplicationErrorReport.BatteryInfo	A										<section class="prog__container">Describes a battery usage report.<pre><code>public static class ApplicationErrorReport.BatteryInfo</code></pre></section>	https://developer.android.com/reference/android/app/ApplicationErrorReport.BatteryInfo.html
ApplicationErrorReport.CrashInfo	A										<section class="prog__container">Describes an application crash.<pre><code>public static class ApplicationErrorReport.CrashInfo</code></pre></section>	https://developer.android.com/reference/android/app/ApplicationErrorReport.CrashInfo.html
ApplicationErrorReport	A										<section class="prog__container">Describes an application error. A report has a type, which is one of <ul> <li> <pre><code>TYPE_NONE</code></pre> uninitialized instance of <pre><code>ApplicationErrorReport</code></pre>. <li> <pre><code>TYPE_CRASH</code></pre> application crash. Information about the crash is stored in <pre><code>crashInfo</code></pre>. <li> <pre><code>TYPE_ANR</code></pre> application not responding. Information about the ANR is stored in <pre><code>anrInfo</code></pre>. <li> <pre><code>TYPE_BATTERY</code></pre> user reported application is using too much battery. Information about the battery use is stored in <pre><code>batteryInfo</code></pre>. <li> <pre><code>TYPE_RUNNING_SERVICE</code></pre> user reported application is leaving an unneeded serive running. Information about the battery use is stored in <pre><code>runningServiceInfo</code></pre>. </li></li></li></li></li></ul><pre><code>public class ApplicationErrorReport</code></pre></section>	https://developer.android.com/reference/android/app/ApplicationErrorReport.html
ApplicationErrorReport.RunningServiceInfo	A										<section class="prog__container">Describes a running service report.<pre><code>public static class ApplicationErrorReport.RunningServiceInfo</code></pre></section>	https://developer.android.com/reference/android/app/ApplicationErrorReport.RunningServiceInfo.html
AppOpsManager	A										<section class="prog__container">API for interacting with "application operation" tracking.<pre><code>public class AppOpsManager</code></pre></section>	https://developer.android.com/reference/android/app/AppOpsManager.html
AppOpsManager.OnOpChangedListener	A										<section class="prog__container">Callback for notification of changes to operation state.<pre><code>public static interface AppOpsManager.OnOpChangedListener</code></pre></section>	https://developer.android.com/reference/android/app/AppOpsManager.OnOpChangedListener.html
AutomaticZenRule	A										<section class="prog__container">Rule instance information for zen mode.<pre><code>public final class AutomaticZenRule</code></pre></section>	https://developer.android.com/reference/android/app/AutomaticZenRule.html
DatePickerDialog	A										<section class="prog__container">A simple dialog containing an <pre><code>DatePicker</code></pre>.<pre><code>public class DatePickerDialog</code></pre></section>	https://developer.android.com/reference/android/app/DatePickerDialog.html
DatePickerDialog.OnDateSetListener	A										<section class="prog__container">The listener used to indicate the user has finished selecting a date.<pre><code>public static interface DatePickerDialog.OnDateSetListener</code></pre></section>	https://developer.android.com/reference/android/app/DatePickerDialog.OnDateSetListener.html
Dialog	A										<section class="prog__container">Base class for Dialogs.<pre><code>public class Dialog</code></pre></section>	https://developer.android.com/reference/android/app/Dialog.html
DialogFragment	A										<section class="prog__container">A fragment that displays a dialog window, floating on top of its activity's window. This fragment contains a Dialog object, which it displays as appropriate based on the fragment's state. Control of the dialog (deciding when to show, hide, dismiss it) should be done through the API here, not with direct calls on the dialog.<pre><code>public class DialogFragment</code></pre></section>	https://developer.android.com/reference/android/app/DialogFragment.html
DownloadManager	A										<section class="prog__container">The download manager is a system service that handles long-running HTTP downloads. Clients may request that a URI be downloaded to a particular destination file. The download manager will conduct the download in the background, taking care of HTTP interactions and retrying downloads after failures or across connectivity changes and system reboots. Instances of this class should be obtained through <pre><code>getSystemService(String)</code></pre> by passing <pre><code>DOWNLOAD_SERVICE</code></pre>. Apps that request downloads through this API should register a broadcast receiver for <pre><code>ACTION_NOTIFICATION_CLICKED</code></pre> to appropriately handle when the user clicks on a running download in a notification or from the downloads UI. Note that the application must have the <pre><code>INTERNET</code></pre> permission to use this class.<pre><code>public class DownloadManager</code></pre></section>	https://developer.android.com/reference/android/app/DownloadManager.html
DownloadManager.Query	A										<section class="prog__container">This class may be used to filter download manager queries.<pre><code>public static class DownloadManager.Query</code></pre></section>	https://developer.android.com/reference/android/app/DownloadManager.Query.html
DownloadManager.Request	A										<section class="prog__container">This class contains all the information necessary to request a new download. The URI is the only required parameter. Note that the default download destination is a shared volume where the system might delete your file if it needs to reclaim space for system use. If this is a problem, use a location on external storage (see <pre><code>setDestinationUri(Uri)</code></pre>.<pre><code>public static class DownloadManager.Request</code></pre></section>	https://developer.android.com/reference/android/app/DownloadManager.Request.html
ExpandableListActivity	A										<section class="prog__container">An activity that displays an expandable list of items by binding to a data source implementing the ExpandableListAdapter, and exposes event handlers when the user selects an item.<pre><code>public class ExpandableListActivity</code></pre></section>	https://developer.android.com/reference/android/app/ExpandableListActivity.html
Fragment	A										<section class="prog__container">A Fragment is a piece of an application's user interface or behavior that can be placed in an <pre><code>Activity</code></pre>. Interaction with fragments is done through <pre><code>FragmentManager</code></pre>, which can be obtained via <pre><code>Activity.getFragmentManager()</code></pre> and <pre><code>Fragment.getFragmentManager()</code></pre>.<pre><code>public class Fragment</code></pre></section>	https://developer.android.com/reference/android/app/Fragment.html
Fragment.InstantiationException	A										<section class="prog__container">Thrown by <pre><code>instantiate(Context, String, Bundle)</code></pre> when there is an instantiation failure.<pre><code>public static class Fragment.InstantiationException</code></pre></section>	https://developer.android.com/reference/android/app/Fragment.InstantiationException.html
Fragment.SavedState	A										<section class="prog__container">State information that has been retrieved from a fragment instance through <pre><code>FragmentManager.saveFragmentInstanceState</code></pre>.<pre><code>public static class Fragment.SavedState</code></pre></section>	https://developer.android.com/reference/android/app/Fragment.SavedState.html
FragmentBreadCrumbs	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> This widget is no longer supported.<pre><code>public class FragmentBreadCrumbs</code></pre></section>	https://developer.android.com/reference/android/app/FragmentBreadCrumbs.html
FragmentBreadCrumbs.OnBreadCrumbClickListener	A										<section class="prog__container">Interface to intercept clicks on the bread crumbs.<pre><code>public static interface FragmentBreadCrumbs.OnBreadCrumbClickListener</code></pre></section>	https://developer.android.com/reference/android/app/FragmentBreadCrumbs.OnBreadCrumbClickListener.html
FragmentContainer	A										<section class="prog__container">Callbacks to a <pre><code>Fragment</code></pre>'s container.<pre><code>public abstract class FragmentContainer</code></pre></section>	https://developer.android.com/reference/android/app/FragmentContainer.html
FragmentController	A										<section class="prog__container">Provides integration points with a <pre><code>FragmentManager</code></pre> for a fragment host.<pre><code>public class FragmentController</code></pre></section>	https://developer.android.com/reference/android/app/FragmentController.html
FragmentHostCallback	A										<section class="prog__container">Integration points with the Fragment host.<pre><code>public abstract class FragmentHostCallback</code></pre></section>	https://developer.android.com/reference/android/app/FragmentHostCallback.html
FragmentManager.BackStackEntry	A										<section class="prog__container">Representation of an entry on the fragment back stack, as created with <pre><code>FragmentTransaction.addToBackStack()</code></pre>. Entries can later be retrieved with <pre><code>FragmentManager.getBackStackEntryAt()</code></pre>.<pre><code>public static interface FragmentManager.BackStackEntry</code></pre></section>	https://developer.android.com/reference/android/app/FragmentManager.BackStackEntry.html
FragmentManager	A										<section class="prog__container">Interface for interacting with <pre><code>Fragment</code></pre> objects inside of an <pre><code>Activity</code></pre> <div class="special reference"> <h3>Developer Guides</h3><pre><code>public abstract class FragmentManager</code></pre></section>	https://developer.android.com/reference/android/app/FragmentManager.html
FragmentManager.OnBackStackChangedListener	A										<section class="prog__container">Interface to watch for changes to the back stack.<pre><code>public static interface FragmentManager.OnBackStackChangedListener</code></pre></section>	https://developer.android.com/reference/android/app/FragmentManager.OnBackStackChangedListener.html
FragmentManagerNonConfig	A										<section class="prog__container">FragmentManagerNonConfig stores the retained instance fragments across activity recreation events.<pre><code>public class FragmentManagerNonConfig</code></pre></section>	https://developer.android.com/reference/android/app/FragmentManagerNonConfig.html
FragmentTransaction	A										<section class="prog__container">API for performing a set of Fragment operations. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public abstract class FragmentTransaction</code></pre></section>	https://developer.android.com/reference/android/app/FragmentTransaction.html
Instrumentation.ActivityMonitor	A										<section class="prog__container">Information about a particular kind of Intent that is being monitored. An instance of this class is added to the current instrumentation through <pre><code>addMonitor(Instrumentation.ActivityMonitor)</code></pre>; after being added, when a new activity is being started the monitor will be checked and, if matching, its hit count updated and (optionally) the call stopped and a canned result returned.<pre><code>public static class Instrumentation.ActivityMonitor</code></pre></section>	https://developer.android.com/reference/android/app/Instrumentation.ActivityMonitor.html
Instrumentation.ActivityResult	A										<section class="prog__container">Description of a Activity execution result to return to the original activity.<pre><code>public static final class Instrumentation.ActivityResult</code></pre></section>	https://developer.android.com/reference/android/app/Instrumentation.ActivityResult.html
Instrumentation	A										<section class="prog__container">Base class for implementing application instrumentation code. When running with instrumentation turned on, this class will be instantiated for you before any of the application code, allowing you to monitor all of the interaction the system has with the application. An Instrumentation implementation is described to the system through an AndroidManifest.xml's &lt;instrumentation&gt; tag.<pre><code>public class Instrumentation</code></pre></section>	https://developer.android.com/reference/android/app/Instrumentation.html
IntentService	A										<section class="prog__container">IntentService is a base class for <pre><code>Service</code></pre>s that handle asynchronous requests (expressed as <pre><code>Intent</code></pre>s) on demand. Clients send requests through <pre><code>startService(Intent)</code></pre> calls; the service is started as needed, handles each Intent in turn using a worker thread, and stops itself when it runs out of work.<pre><code>public abstract class IntentService</code></pre></section>	https://developer.android.com/reference/android/app/IntentService.html
KeyguardManager	A										<section class="prog__container">Class that can be used to lock and unlock the keyboard. Get an instance of this class by calling <pre><code>getSystemService(java.lang.String)</code></pre> with argument <pre><code>KEYGUARD_SERVICE</code></pre>. The actual class to control the keyboard locking is <pre><code>KeyguardManager.KeyguardLock</code></pre>.<pre><code>public class KeyguardManager</code></pre></section>	https://developer.android.com/reference/android/app/KeyguardManager.html
KeyguardManager.KeyguardLock	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 13.</strong><br/> Use <pre><code>FLAG_DISMISS_KEYGUARD</code></pre> and/or <pre><code>FLAG_SHOW_WHEN_LOCKED</code></pre> instead; this allows you to seamlessly hide the keyguard as your application moves in and out of the foreground and does not require that any special permissions be requested. Handle returned by <pre><code>newKeyguardLock(String)</code></pre> that allows you to disable / reenable the keyguard.<pre><code>public class KeyguardManager.KeyguardLock</code></pre></section>	https://developer.android.com/reference/android/app/KeyguardManager.KeyguardLock.html
KeyguardManager.OnKeyguardExitResult	A										<section class="prog__container">Callback passed to <pre><code>exitKeyguardSecurely(KeyguardManager.OnKeyguardExitResult)</code></pre> to notify caller of result.<pre><code>public static interface KeyguardManager.OnKeyguardExitResult</code></pre></section>	https://developer.android.com/reference/android/app/KeyguardManager.OnKeyguardExitResult.html
LauncherActivity	A										<section class="prog__container">Displays a list of all activities which can be performed for a given intent. Launches when clicked.<pre><code>public abstract class LauncherActivity</code></pre></section>	https://developer.android.com/reference/android/app/LauncherActivity.html
LauncherActivity.IconResizer	A										<section class="prog__container">Utility class to resize icons to match default icon size.<pre><code>public class LauncherActivity.IconResizer</code></pre></section>	https://developer.android.com/reference/android/app/LauncherActivity.IconResizer.html
LauncherActivity.ListItem	A										<section class="prog__container">An item in the list<pre><code>public static class LauncherActivity.ListItem</code></pre></section>	https://developer.android.com/reference/android/app/LauncherActivity.ListItem.html
ListActivity	A										<section class="prog__container">An activity that displays a list of items by binding to a data source such as an array or Cursor, and exposes event handlers when the user selects an item.<pre><code>public class ListActivity</code></pre></section>	https://developer.android.com/reference/android/app/ListActivity.html
ListFragment	A										<section class="prog__container">A fragment that displays a list of items by binding to a data source such as an array or Cursor, and exposes event handlers when the user selects an item.<pre><code>public class ListFragment</code></pre></section>	https://developer.android.com/reference/android/app/ListFragment.html
LoaderManager	A										<section class="prog__container">Interface associated with an <pre><code>Activity</code></pre> or <pre><code>Fragment</code></pre> for managing one or more <pre><code>Loader</code></pre> instances associated with it. This helps an application manage longer-running operations in conjunction with the Activity or Fragment lifecycle; the most common use of this is with a <pre><code>CursorLoader</code></pre>, however applications are free to write their own loaders for loading other types of data. While the LoaderManager API was introduced in <pre><code>HONEYCOMB</code></pre>, a version of the API at is also available for use on older platforms through <pre><code>FragmentActivity</code></pre>. See the blog post Fragments For All for more details.<pre><code>public abstract class LoaderManager</code></pre></section>	https://developer.android.com/reference/android/app/LoaderManager.html
LoaderManager.LoaderCallbacks	A										<section class="prog__container">Callback interface for a client to interact with the manager.<pre><code>public static interface LoaderManager.LoaderCallbacks</code></pre></section>	https://developer.android.com/reference/android/app/LoaderManager.LoaderCallbacks.html
LocalActivityManager	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 13.</strong><br/> Use the new <pre><code>Fragment</code></pre> and <pre><code>FragmentManager</code></pre> APIs instead; these are also available on older platforms through the Android compatibility package.<pre><code>public class LocalActivityManager</code></pre></section>	https://developer.android.com/reference/android/app/LocalActivityManager.html
MediaRouteActionProvider	A										<section class="prog__container">The media route action provider displays a <pre><code>media route button</code></pre> in the application's <pre><code>ActionBar</code></pre> to allow the user to select routes and to control the currently selected route.<pre><code>public class MediaRouteActionProvider</code></pre></section>	https://developer.android.com/reference/android/app/MediaRouteActionProvider.html
MediaRouteButton	A										<section class="prog__container"><pre><code>public class MediaRouteButton</code></pre></section>	https://developer.android.com/reference/android/app/MediaRouteButton.html
NativeActivity	A										<section class="prog__container">Convenience for implementing an activity that will be implemented purely in native code. That is, a game (or game-like thing). There is no need to derive from this class; you can simply declare it in your manifest, and use the NDK APIs from there.<pre><code>public class NativeActivity</code></pre></section>	https://developer.android.com/reference/android/app/NativeActivity.html
Notification.Action.Builder	A										<section class="prog__container">Builder class for <pre><code>Notification.Action</code></pre> objects.<pre><code>public static final class Notification.Action.Builder</code></pre></section>	https://developer.android.com/reference/android/app/Notification.Action.Builder.html
Notification.Action.Extender	A										<section class="prog__container">Extender interface for use with <pre><code>extend(Notification.Action.Extender)</code></pre>. Extenders may be used to add metadata or change options on an action builder.<pre><code>public static interface Notification.Action.Extender</code></pre></section>	https://developer.android.com/reference/android/app/Notification.Action.Extender.html
Notification.Action	A										<section class="prog__container">Structure to encapsulate a named action that can be shown as part of this notification. It must include an icon, a label, and a <pre><code>PendingIntent</code></pre> to be fired when the action is selected by the user.<pre><code>public static class Notification.Action</code></pre></section>	https://developer.android.com/reference/android/app/Notification.Action.html
Notification.Action.WearableExtender	A										<section class="prog__container">Wearable extender for notification actions. To add extensions to an action, create a new <pre><code>Notification.Action.WearableExtender</code></pre> object using the <pre><code>WearableExtender()</code></pre> constructor and apply it to a <pre><code>Notification.Action.Builder</code></pre> using <pre><code>extend(Notification.Action.Extender)</code></pre>. <pre class="prettyprint"> Notification.Action action = new Notification.Action.Builder( R.drawable.archive_all, "Archive all", actionIntent) .extend(new Notification.Action.WearableExtender() .setAvailableOffline(false)) .build();</pre><pre><code>public static final class Notification.Action.WearableExtender</code></pre></section>	https://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html
Notification.BigPictureStyle	A										<section class="prog__container">Helper class for generating large-format notifications that include a large image attachment. Here's how you'd set the <pre><code>BigPictureStyle</code></pre> on a notification: <pre class="prettyprint"> Notification notif = new Notification.Builder(mContext) .setContentTitle("New photo from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_post) .setLargeIcon(aBitmap) .setStyle(new Notification.BigPictureStyle() .bigPicture(aBigBitmap)) .build(); </pre><pre><code>public static class Notification.BigPictureStyle</code></pre></section>	https://developer.android.com/reference/android/app/Notification.BigPictureStyle.html
Notification.BigTextStyle	A										<section class="prog__container">Helper class for generating large-format notifications that include a lot of text. Here's how you'd set the <pre><code>BigTextStyle</code></pre> on a notification: <pre class="prettyprint"> Notification notif = new Notification.Builder(mContext) .setContentTitle("New mail from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_mail) .setLargeIcon(aBitmap) .setStyle(new Notification.BigTextStyle() .bigText(aVeryLongString)) .build(); </pre><pre><code>public static class Notification.BigTextStyle</code></pre></section>	https://developer.android.com/reference/android/app/Notification.BigTextStyle.html
Notification.Builder	A										<section class="prog__container">Builder class for <pre><code>Notification</code></pre> objects. Provides a convenient way to set the various fields of a <pre><code>Notification</code></pre> and generate content views using the platform's notification layout template. If your app supports versions of Android as old as API level 4, you can instead use <pre><code>NotificationCompat.Builder</code></pre>, available in the Android Support library.<pre><code>public static class Notification.Builder</code></pre></section>	https://developer.android.com/reference/android/app/Notification.Builder.html
Notification.CarExtender.Builder	A										<section class="prog__container">Builder class for <pre><code>Notification.CarExtender.UnreadConversation</code></pre> objects.<pre><code>public static class Notification.CarExtender.Builder</code></pre></section>	https://developer.android.com/reference/android/app/Notification.CarExtender.Builder.html
Notification.CarExtender	A										<section class="prog__container"><pre><code>public static final class Notification.CarExtender</code></pre></section>	https://developer.android.com/reference/android/app/Notification.CarExtender.html
Notification.CarExtender.UnreadConversation	A										<section class="prog__container">A class which holds the unread messages from a conversation.<pre><code>public static class Notification.CarExtender.UnreadConversation</code></pre></section>	https://developer.android.com/reference/android/app/Notification.CarExtender.UnreadConversation.html
Notification.DecoratedCustomViewStyle	A										<section class="prog__container">Notification style for custom views that are decorated by the system<pre><code>public static class Notification.DecoratedCustomViewStyle</code></pre></section>	https://developer.android.com/reference/android/app/Notification.DecoratedCustomViewStyle.html
Notification.DecoratedMediaCustomViewStyle	A										<section class="prog__container">Notification style for media custom views that are decorated by the system<pre><code>public static class Notification.DecoratedMediaCustomViewStyle</code></pre></section>	https://developer.android.com/reference/android/app/Notification.DecoratedMediaCustomViewStyle.html
Notification.Extender	A										<section class="prog__container">Extender interface for use with <pre><code>extend(Notification.Action.Extender)</code></pre>. Extenders may be used to add metadata or change options on a notification builder.<pre><code>public static interface Notification.Extender</code></pre></section>	https://developer.android.com/reference/android/app/Notification.Extender.html
Notification	A										<section class="prog__container">A class that represents how a persistent notification is to be presented to the user using the <pre><code>NotificationManager</code></pre>.<pre><code>public class Notification</code></pre></section>	https://developer.android.com/reference/android/app/Notification.html
Notification.InboxStyle	A										<section class="prog__container">Helper class for generating large-format notifications that include a list of (up to 5) strings. Here's how you'd set the <pre><code>InboxStyle</code></pre> on a notification: <pre class="prettyprint"> Notification notif = new Notification.Builder(mContext) .setContentTitle("5 New mails from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_mail) .setLargeIcon(aBitmap) .setStyle(new Notification.InboxStyle() .addLine(str1) .addLine(str2) .setContentTitle("") .setSummaryText("+3 more")) .build(); </pre><pre><code>public static class Notification.InboxStyle</code></pre></section>	https://developer.android.com/reference/android/app/Notification.InboxStyle.html
Notification.MediaStyle	A										<section class="prog__container">Notification style for media playback notifications. In the expanded form, <pre><code>bigContentView</code></pre>, up to 5 <pre><code>Notification.Action</code></pre>s specified with <pre><code>addAction</code></pre> will be shown as icon-only pushbuttons, suitable for transport controls. The Bitmap given to <pre><code>setLargeIcon()</code></pre> will be treated as album artwork. Unlike the other styles provided here, MediaStyle can also modify the standard-size <pre><code>contentView</code></pre>; by providing action indices to <pre><code>setShowActionsInCompactView(int)</code></pre> you can promote up to 3 actions to be displayed in the standard view alongside the usual content. Notifications created with MediaStyle will have their category set to <pre><code>CATEGORY_TRANSPORT</code></pre> unless you set a different category using <pre><code>setCategory()</code></pre>. Finally, if you attach a <pre><code>MediaSession.Token</code></pre> using <pre><code>setMediaSession(MediaSession.Token)</code></pre>, the System UI can identify this as a notification representing an active media session and respond accordingly (by showing album artwork in the lockscreen, for example). To use this style with your Notification, feed it to <pre><code>setStyle(android.app.Notification.Style)</code></pre> like so: <pre class="prettyprint"> Notification noti = new Notification.Builder() .setSmallIcon(R.drawable.ic_stat_player) .setContentTitle("Track title") .setContentText("Artist - Album") .setLargeIcon(albumArtBitmap)) .setStyle(<b>new Notification.MediaStyle()</b> .setMediaSession(mySession)) .build(); </pre><pre><code>public static class Notification.MediaStyle</code></pre></section>	https://developer.android.com/reference/android/app/Notification.MediaStyle.html
Notification.MessagingStyle	A										<section class="prog__container">Helper class for generating large-format notifications that include multiple back-and-forth messages of varying types between any number of people. <br> If the platform does not provide large-format notifications, this method has no effect. The user will always see the normal notification view. <br> This class is a "rebuilder": It attaches to a Builder object and modifies its behavior, like so: <pre class="prettyprint"> Notification noti = new Notification.Builder() .setContentTitle("2 new messages wtih " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_message) .setLargeIcon(aBitmap) .setStyle(new Notification.MessagingStyle(resources.getString(R.string.reply_name)) .addMessage(messages[0].getText(), messages[0].getTime(), messages[0].getSender()) .addMessage(messages[1].getText(), messages[1].getTime(), messages[1].getSender())) .build(); </pre> </br></br><pre><code>public static class Notification.MessagingStyle</code></pre></section>	https://developer.android.com/reference/android/app/Notification.MessagingStyle.html
Notification.MessagingStyle.Message	A										<section class="prog__container"><pre><code>public static final class Notification.MessagingStyle.Message</code></pre></section>	https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html
Notification.Style	A										<section class="prog__container">An object that can apply a rich notification style to a <pre><code>Notification.Builder</code></pre> object.<pre><code>public static abstract class Notification.Style</code></pre></section>	https://developer.android.com/reference/android/app/Notification.Style.html
Notification.WearableExtender	A										<section class="prog__container">Helper class to add wearable extensions to notifications. <p class="note"> See Creating Notifications for Android Wear for more information on how to use this class.<pre><code>public static final class Notification.WearableExtender</code></pre></section>	https://developer.android.com/reference/android/app/Notification.WearableExtender.html
NotificationManager	A										<section class="prog__container">Class to notify the user of events that happen. This is how you tell the user that something has happened in the background.<pre><code>public class NotificationManager</code></pre></section>	https://developer.android.com/reference/android/app/NotificationManager.html
NotificationManager.Policy	A										<section class="prog__container">Notification policy configuration. Represents user-preferences for notification filtering.<pre><code>public static class NotificationManager.Policy</code></pre></section>	https://developer.android.com/reference/android/app/NotificationManager.Policy.html
android.app	A										<section class="prog__container">Contains high-level classes encapsulating the overall Android application model.</section>	https://developer.android.com/reference/android/app/package-summary.html
PendingIntent.CanceledException	A										<section class="prog__container">Exception thrown when trying to send through a PendingIntent that has been canceled or is otherwise no longer able to execute the request.<pre><code>public static class PendingIntent.CanceledException</code></pre></section>	https://developer.android.com/reference/android/app/PendingIntent.CanceledException.html
PendingIntent	A										<section class="prog__container">A description of an Intent and target action to perform with it. Instances of this class are created with <pre><code>getActivity(Context, int, Intent, int)</code></pre>, <pre><code>getActivities(Context, int, Intent[], int)</code></pre>, <pre><code>getBroadcast(Context, int, Intent, int)</code></pre>, and <pre><code>getService(Context, int, Intent, int)</code></pre>; the returned object can be handed to other applications so that they can perform the action you described on your behalf at a later time.<pre><code>public final class PendingIntent</code></pre></section>	https://developer.android.com/reference/android/app/PendingIntent.html
PendingIntent.OnFinished	A										<section class="prog__container">Callback interface for discovering when a send operation has completed. Primarily for use with a PendingIntent that is performing a broadcast, this provides the same information as calling <pre><code>Context.sendBroadcast()</code></pre> with a final BroadcastReceiver.<pre><code>public static interface PendingIntent.OnFinished</code></pre></section>	https://developer.android.com/reference/android/app/PendingIntent.OnFinished.html
Presentation	A										<section class="prog__container">Base class for presentations.<pre><code>public class Presentation</code></pre></section>	https://developer.android.com/reference/android/app/Presentation.html
ProgressDialog	A										<section class="prog__container"><pre><code>public class ProgressDialog</code></pre></section>	https://developer.android.com/reference/android/app/ProgressDialog.html
RemoteInput.Builder	A										<section class="prog__container">Builder class for <pre><code>RemoteInput</code></pre> objects.<pre><code>public static final class RemoteInput.Builder</code></pre></section>	https://developer.android.com/reference/android/app/RemoteInput.Builder.html
RemoteInput	A										<section class="prog__container">A <pre><code>RemoteInput</code></pre> object specifies input to be collected from a user to be passed along with an intent inside a <pre><code>PendingIntent</code></pre> that is sent. Always use <pre><code>RemoteInput.Builder</code></pre> to create instances of this class. <p class="note"> See Receiving Voice Input from a Notification for more information on how to use this class.<pre><code>public final class RemoteInput</code></pre></section>	https://developer.android.com/reference/android/app/RemoteInput.html
SearchableInfo	A										<section class="prog__container">Searchability meta-data for an activity. Only applications that search other applications should need to use this class. See Searchable Configuration for more information about declaring searchability meta-data for your application.<pre><code>public final class SearchableInfo</code></pre></section>	https://developer.android.com/reference/android/app/SearchableInfo.html
SearchManager	A										<section class="prog__container">This class provides access to the system search services.<pre><code>public class SearchManager</code></pre></section>	https://developer.android.com/reference/android/app/SearchManager.html
SearchManager.OnCancelListener	A										<section class="prog__container">See <pre><code>setOnCancelListener(SearchManager.OnCancelListener)</code></pre> for configuring your activity to monitor search UI state.<pre><code>public static interface SearchManager.OnCancelListener</code></pre></section>	https://developer.android.com/reference/android/app/SearchManager.OnCancelListener.html
SearchManager.OnDismissListener	A										<section class="prog__container">See <pre><code>setOnDismissListener(SearchManager.OnDismissListener)</code></pre> for configuring your activity to monitor search UI state.<pre><code>public static interface SearchManager.OnDismissListener</code></pre></section>	https://developer.android.com/reference/android/app/SearchManager.OnDismissListener.html
Service	A										<section class="prog__container">A Service is an application component representing either an application's desire to perform a longer-running operation while not interacting with the user or to supply functionality for other applications to use. Each service class must have a corresponding <pre><code>&lt;service&gt;</code></pre> declaration in its package's <pre><code>AndroidManifest.xml</code></pre>. Services can be started with <pre><code>Context.startService()</code></pre> and <pre><code>Context.bindService()</code></pre>.<pre><code>public abstract class Service</code></pre></section>	https://developer.android.com/reference/android/app/Service.html
SharedElementCallback	A										<section class="prog__container">Listener provided in <pre><code>setEnterSharedElementCallback(SharedElementCallback)</code></pre> and <pre><code>setExitSharedElementCallback(SharedElementCallback)</code></pre> as well as <pre><code>setEnterSharedElementCallback(SharedElementCallback)</code></pre> and <pre><code>setExitSharedElementCallback(SharedElementCallback)</code></pre> to monitor the Shared element transitions. The events can be used to customize Activity and Fragment Transition behavior.<pre><code>public abstract class SharedElementCallback</code></pre></section>	https://developer.android.com/reference/android/app/SharedElementCallback.html
SharedElementCallback.OnSharedElementsReadyListener	A										<section class="prog__container">Listener to be called after <pre><code>onSharedElementsArrived(List, List, OnSharedElementsReadyListener)</code></pre> when the shared elements are ready to be hidden in the source Activity and shown in the destination Activity.<pre><code>public static interface SharedElementCallback.OnSharedElementsReadyListener</code></pre></section>	https://developer.android.com/reference/android/app/SharedElementCallback.OnSharedElementsReadyListener.html
TabActivity	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 13.</strong><br/> New applications should use Fragments instead of this class; to continue to run on older devices, you can use the v4 support library which provides a version of the Fragment API that is compatible down to <pre><code>DONUT</code></pre>.<pre><code>public class TabActivity</code></pre></section>	https://developer.android.com/reference/android/app/TabActivity.html
TaskStackBuilder	A										<section class="prog__container">Utility class for constructing synthetic back stacks for cross-task navigation on Android 3.0 and newer.<pre><code>public class TaskStackBuilder</code></pre></section>	https://developer.android.com/reference/android/app/TaskStackBuilder.html
TimePickerDialog	A										<section class="prog__container">A dialog that prompts the user for the time of day using a <pre><code>TimePicker</code></pre>.<pre><code>public class TimePickerDialog</code></pre></section>	https://developer.android.com/reference/android/app/TimePickerDialog.html
TimePickerDialog.OnTimeSetListener	A										<section class="prog__container">The callback interface used to indicate the user is done filling in the time (e.g. they clicked on the 'OK' button).<pre><code>public static interface TimePickerDialog.OnTimeSetListener</code></pre></section>	https://developer.android.com/reference/android/app/TimePickerDialog.OnTimeSetListener.html
UiAutomation.AccessibilityEventFilter	A										<section class="prog__container">Listener for filtering accessibility events.<pre><code>public static interface UiAutomation.AccessibilityEventFilter</code></pre></section>	https://developer.android.com/reference/android/app/UiAutomation.AccessibilityEventFilter.html
UiAutomation	A										<section class="prog__container">Class for interacting with the device's UI by simulation user actions and introspection of the screen content. It relies on the platform accessibility APIs to introspect the screen and to perform some actions on the remote view tree. It also allows injecting of arbitrary raw input events simulating user interaction with keyboards and touch devices. One can think of a UiAutomation as a special type of <pre><code>AccessibilityService</code></pre> which does not provide hooks for the service life cycle and exposes other APIs that are useful for UI test automation.<pre><code>public final class UiAutomation</code></pre></section>	https://developer.android.com/reference/android/app/UiAutomation.html
UiAutomation.OnAccessibilityEventListener	A										<section class="prog__container">Listener for observing the <pre><code>AccessibilityEvent</code></pre> stream.<pre><code>public static interface UiAutomation.OnAccessibilityEventListener</code></pre></section>	https://developer.android.com/reference/android/app/UiAutomation.OnAccessibilityEventListener.html
UiModeManager	A										<section class="prog__container">This class provides access to the system uimode services. These services allow applications to control UI modes of the device. It provides functionality to disable the car mode and it gives access to the night mode settings.<pre><code>public class UiModeManager</code></pre></section>	https://developer.android.com/reference/android/app/UiModeManager.html
VoiceInteractor.AbortVoiceRequest	A										<section class="prog__container">Reports that the current interaction can not be complete with voice, so the application will need to switch to a traditional input UI. Applications should only use this when they need to completely bail out of the voice interaction and switch to a traditional UI. When the response comes back, the voice system has handled the request and is ready to switch; at that point the application can start a new non-voice activity. Be sure when starting the new activity to use <pre><code>Intent.FLAG_ACTIVITY_NEW_TASK</code></pre> to keep the new activity out of the current voice interaction task.<pre><code>public static class VoiceInteractor.AbortVoiceRequest</code></pre></section>	https://developer.android.com/reference/android/app/VoiceInteractor.AbortVoiceRequest.html
VoiceInteractor.CommandRequest	A										<section class="prog__container">Execute a vendor-specific command using the trusted system VoiceInteractionService. This allows an Activity to request additional information from the user needed to complete an action (e.g. booking a table might have several possible times that the user could select from or an app might need the user to agree to a terms of service). The result of the confirmation will be returned through an asynchronous call to either <pre><code>onCommandResult(boolean, android.os.Bundle)</code></pre> or <pre><code>onCancel()</code></pre>.<pre><code>public static class VoiceInteractor.CommandRequest</code></pre></section>	https://developer.android.com/reference/android/app/VoiceInteractor.CommandRequest.html
VoiceInteractor.CompleteVoiceRequest	A										<section class="prog__container">Reports that the current interaction was successfully completed with voice, so the application can report the final status to the user. When the response comes back, the voice system has handled the request and is ready to switch; at that point the application can start a new non-voice activity or finish. Be sure when starting the new activity to use <pre><code>Intent.FLAG_ACTIVITY_NEW_TASK</code></pre> to keep the new activity out of the current voice interaction task.<pre><code>public static class VoiceInteractor.CompleteVoiceRequest</code></pre></section>	https://developer.android.com/reference/android/app/VoiceInteractor.CompleteVoiceRequest.html
VoiceInteractor.ConfirmationRequest	A										<section class="prog__container">Confirms an operation with the user via the trusted system VoiceInteractionService. This allows an Activity to complete an unsafe operation that would require the user to touch the screen when voice interaction mode is not enabled. The result of the confirmation will be returned through an asynchronous call to either <pre><code>onConfirmationResult(boolean, android.os.Bundle)</code></pre> or <pre><code>onCancel()</code></pre> - these methods should be overridden to define the application specific behavior.<pre><code>public static class VoiceInteractor.ConfirmationRequest</code></pre></section>	https://developer.android.com/reference/android/app/VoiceInteractor.ConfirmationRequest.html
VoiceInteractor	A										<section class="prog__container">Interface for an <pre><code>Activity</code></pre> to interact with the user through voice. Use <pre><code>Activity.getVoiceInteractor</code></pre> to retrieve the interface, if the activity is currently involved in a voice interaction.<pre><code>public final class VoiceInteractor</code></pre></section>	https://developer.android.com/reference/android/app/VoiceInteractor.html
VoiceInteractor.PickOptionRequest	A										<section class="prog__container">Select a single option from multiple potential options with the user via the trusted system VoiceInteractionService. Typically, the application would present this visually as a list view to allow selecting the option by touch. The result of the confirmation will be returned through an asynchronous call to either <pre><code>onPickOptionResult(boolean, VoiceInteractor.PickOptionRequest.Option[], Bundle)</code></pre> or <pre><code>onCancel()</code></pre> - these methods should be overridden to define the application specific behavior.<pre><code>public static class VoiceInteractor.PickOptionRequest</code></pre></section>	https://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.html
VoiceInteractor.PickOptionRequest.Option	A										<section class="prog__container">Represents a single option that the user may select using their voice. The <pre><code>getIndex()</code></pre> method should be used as a unique ID to identify the option when it is returned from the voice interactor.<pre><code>public static final class VoiceInteractor.PickOptionRequest.Option</code></pre></section>	https://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html
VoiceInteractor.Prompt	A										<section class="prog__container">A set of voice prompts to use with the voice interaction system to confirm an action, select an option, or do similar operations. Multiple voice prompts may be provided for variety. A visual prompt must be provided, which might not match the spoken version. For example, the confirmation "Are you sure you want to purchase this item?" might use a visual label like "Purchase item".<pre><code>public static class VoiceInteractor.Prompt</code></pre></section>	https://developer.android.com/reference/android/app/VoiceInteractor.Prompt.html
VoiceInteractor.Request	A										<section class="prog__container">Base class for voice interaction requests that can be submitted to the interactor. Do not instantiate this directly -- instead, use the appropriate subclass.<pre><code>public static abstract class VoiceInteractor.Request</code></pre></section>	https://developer.android.com/reference/android/app/VoiceInteractor.Request.html
WallpaperInfo	A										<section class="prog__container">This class is used to specify meta information of a wallpaper service.<pre><code>public final class WallpaperInfo</code></pre></section>	https://developer.android.com/reference/android/app/WallpaperInfo.html
WallpaperManager	A										<section class="prog__container">Provides access to the system wallpaper. With WallpaperManager, you can get the current wallpaper, get the desired dimensions for the wallpaper, set the wallpaper, and more. Get an instance of WallpaperManager with <pre><code>getInstance()</code></pre>.<pre><code>public class WallpaperManager</code></pre></section>	https://developer.android.com/reference/android/app/WallpaperManager.html
DeviceAdminInfo	A										<section class="prog__container">This class is used to specify meta information of a device administrator component.<pre><code>public final class DeviceAdminInfo</code></pre></section>	https://developer.android.com/reference/android/app/admin/DeviceAdminInfo.html
DeviceAdminReceiver	A										<section class="prog__container">Base class for implementing a device administration component. This class provides a convenience for interpreting the raw intent actions that are sent by the system.<pre><code>public class DeviceAdminReceiver</code></pre></section>	https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver.html
DevicePolicyManager	A										<section class="prog__container">Public interface for managing policies enforced on a device. Most clients of this class must be registered with the system as a device administrator. Additionally, a device administrator may be registered as either a profile or device owner. A given method is accessible to all device administrators unless the documentation for that method specifies that it is restricted to either device or profile owners. Any application calling an api may only pass as an argument a device administrator component it owns. Otherwise, a <pre><code>SecurityException</code></pre> will be thrown. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class DevicePolicyManager</code></pre></section>	https://developer.android.com/reference/android/app/admin/DevicePolicyManager.html
android.app.admin	A										<section class="prog__container">Provides device administration features at the system level, allowing you to create security-aware applications that are useful in enterprise settings, in which IT professionals require rich control over employee devices.</section>	https://developer.android.com/reference/android/app/admin/package-summary.html
SecurityLog	A										<section class="prog__container"><pre><code>public class SecurityLog</code></pre></section>	https://developer.android.com/reference/android/app/admin/SecurityLog.html
SecurityLog.SecurityEvent	A										<section class="prog__container">A class representing a security event log entry.<pre><code>public static final class SecurityLog.SecurityEvent</code></pre></section>	https://developer.android.com/reference/android/app/admin/SecurityLog.SecurityEvent.html
SystemUpdatePolicy	A										<section class="prog__container">A class that represents a local system update policy set by the device owner.<pre><code>public class SystemUpdatePolicy</code></pre></section>	https://developer.android.com/reference/android/app/admin/SystemUpdatePolicy.html
AssistContent	A										<section class="prog__container">Holds information about the content an application is viewing, to hand to an assistant at the user's request. This is filled in by <pre><code>Activity.onProvideAssistContent</code></pre>.<pre><code>public class AssistContent</code></pre></section>	https://developer.android.com/reference/android/app/assist/AssistContent.html
AssistStructure	A										<section class="prog__container">Assist data automatically created by the platform's implementation of <pre><code>onProvideAssistData(Bundle)</code></pre>.<pre><code>public class AssistStructure</code></pre></section>	https://developer.android.com/reference/android/app/assist/AssistStructure.html
AssistStructure.ViewNode	A										<section class="prog__container">Describes a single view in the assist data.<pre><code>public static class AssistStructure.ViewNode</code></pre></section>	https://developer.android.com/reference/android/app/assist/AssistStructure.ViewNode.html
AssistStructure.WindowNode	A										<section class="prog__container">Describes a window in the assist data.<pre><code>public static class AssistStructure.WindowNode</code></pre></section>	https://developer.android.com/reference/android/app/assist/AssistStructure.WindowNode.html
BackupAgent	A										<section class="prog__container">Provides the central interface between an application and Android's data backup infrastructure. An application that wishes to participate in the backup and restore mechanism will declare a subclass of <pre><code>BackupAgent</code></pre>, implement the <pre><code>onBackup()</code></pre> and <pre><code>onRestore()</code></pre> methods, and provide the name of its backup agent class in its <pre><code>AndroidManifest.xml</code></pre> file via the <pre><code> &lt;application&gt;</code></pre> tag's <pre><code>android:backupAgent</code></pre> attribute. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public abstract class BackupAgent</code></pre></section>	https://developer.android.com/reference/android/app/backup/BackupAgent.html
BackupAgentHelper	A										<section class="prog__container">A convenient <pre><code>BackupAgent</code></pre> wrapper class that automatically manages heterogeneous data sets within the backup data, each identified by a unique key prefix. When processing a backup or restore operation, the BackupAgentHelper dispatches to one or more installed <pre><code>BackupHelper</code></pre> objects, each of which is responsible for a defined subset of the data being processed.<pre><code>public class BackupAgentHelper</code></pre></section>	https://developer.android.com/reference/android/app/backup/BackupAgentHelper.html
BackupDataInput	A										<section class="prog__container">Provides the structured interface through which a <pre><code>BackupAgent</code></pre> reads information from the backup data set, via its <pre><code>onRestore()</code></pre> method. The data is presented as a set of "entities," each representing one named record as previously stored by the agent's <pre><code>onBackup()</code></pre> implementation. An entity is composed of a descriptive header plus a byte array that holds the raw data saved in the remote backup.<pre><code>public class BackupDataInput</code></pre></section>	https://developer.android.com/reference/android/app/backup/BackupDataInput.html
BackupDataInputStream	A										<section class="prog__container">Provides an <pre><code>InputStream</code></pre>-like interface for accessing an entity's data during a restore operation. Used by <pre><code>BackupHelper</code></pre> classes within the <pre><code>BackupAgentHelper</code></pre> mechanism.<pre><code>public class BackupDataInputStream</code></pre></section>	https://developer.android.com/reference/android/app/backup/BackupDataInputStream.html
BackupDataOutput	A										<section class="prog__container">Provides the structured interface through which a <pre><code>BackupAgent</code></pre> commits information to the backup data set, via its <pre><code>onBackup()</code></pre> method. Data written for backup is presented as a set of "entities," key/value pairs in which each binary data record "value" is named with a string "key."<pre><code>public class BackupDataOutput</code></pre></section>	https://developer.android.com/reference/android/app/backup/BackupDataOutput.html
BackupHelper	A										<section class="prog__container">Defines the calling interface that <pre><code>BackupAgentHelper</code></pre> uses when dispatching backup and restore operations to the installed helpers. Applications can define and install their own helpers as well as using those provided as part of the Android framework.<pre><code>public interface BackupHelper</code></pre></section>	https://developer.android.com/reference/android/app/backup/BackupHelper.html
BackupManager	A										<section class="prog__container">The interface through which an application interacts with the Android backup service to request backup and restore operations. Applications instantiate it using the constructor and issue calls through that instance.<pre><code>public class BackupManager</code></pre></section>	https://developer.android.com/reference/android/app/backup/BackupManager.html
FileBackupHelper	A										<section class="prog__container">A helper class that can be used in conjunction with <pre><code>BackupAgentHelper</code></pre> to manage the backup of a set of files. Whenever backup is performed, all files changed since the last backup will be saved in their entirety. When backup first occurs, every file in the list provided to <pre><code>FileBackupHelper(Context, String...)</code></pre> will be backed up.<pre><code>public class FileBackupHelper</code></pre></section>	https://developer.android.com/reference/android/app/backup/FileBackupHelper.html
FullBackupDataOutput	A										<section class="prog__container">Provides the interface through which a <pre><code>BackupAgent</code></pre> writes entire files to a full backup data set, via its <pre><code>onFullBackup(FullBackupDataOutput)</code></pre> method.<pre><code>public class FullBackupDataOutput</code></pre></section>	https://developer.android.com/reference/android/app/backup/FullBackupDataOutput.html
android.app.backup	A										<section class="prog__container">Contains the backup and restore functionality available to applications. If a user wipes the data on their device or upgrades to a new Android-powered device, all applications that have enabled backup can restore the user's previous data when the application is reinstalled.</section>	https://developer.android.com/reference/android/app/backup/package-summary.html
RestoreObserver	A										<section class="prog__container">Callback class for receiving progress reports during a restore operation. These methods will all be called on your application's main thread.<pre><code>public abstract class RestoreObserver</code></pre></section>	https://developer.android.com/reference/android/app/backup/RestoreObserver.html
SharedPreferencesBackupHelper	A										<section class="prog__container">A helper class that can be used in conjunction with <pre><code>BackupAgentHelper</code></pre> to manage the backup of <pre><code>SharedPreferences</code></pre>. Whenever a backup is performed, it will back up all named shared preferences that have changed since the last backup operation.<pre><code>public class SharedPreferencesBackupHelper</code></pre></section>	https://developer.android.com/reference/android/app/backup/SharedPreferencesBackupHelper.html
JobInfo.Builder	A										<section class="prog__container">Builder class for constructing <pre><code>JobInfo</code></pre> objects.<pre><code>public static final class JobInfo.Builder</code></pre></section>	https://developer.android.com/reference/android/app/job/JobInfo.Builder.html
JobInfo	A										<section class="prog__container">Container of data passed to the <pre><code>JobScheduler</code></pre> fully encapsulating the parameters required to schedule work against the calling application. These are constructed using the <pre><code>JobInfo.Builder</code></pre>. You must specify at least one sort of constraint on the JobInfo object that you are creating. The goal here is to provide the scheduler with high-level semantics about the work you want to accomplish. Doing otherwise with throw an exception in your app.<pre><code>public class JobInfo</code></pre></section>	https://developer.android.com/reference/android/app/job/JobInfo.html
JobInfo.TriggerContentUri	A										<section class="prog__container">Information about a content URI modification that a job would like to trigger on.<pre><code>public static final class JobInfo.TriggerContentUri</code></pre></section>	https://developer.android.com/reference/android/app/job/JobInfo.TriggerContentUri.html
JobParameters	A										<section class="prog__container">Contains the parameters used to configure/identify your job. You do not create this object yourself, instead it is handed in to your application by the System.<pre><code>public class JobParameters</code></pre></section>	https://developer.android.com/reference/android/app/job/JobParameters.html
JobScheduler	A										<section class="prog__container">This is an API for scheduling various types of jobs against the framework that will be executed in your application's own process.<pre><code>public abstract class JobScheduler</code></pre></section>	https://developer.android.com/reference/android/app/job/JobScheduler.html
JobService	A										<section class="prog__container"><pre><code>public abstract class JobService</code></pre></section>	https://developer.android.com/reference/android/app/job/JobService.html
ConfigurationStats	A										<section class="prog__container">Represents the usage statistics of a device <pre><code>Configuration</code></pre> for a specific time range.<pre><code>public final class ConfigurationStats</code></pre></section>	https://developer.android.com/reference/android/app/usage/ConfigurationStats.html
NetworkStats.Bucket	A										<section class="prog__container">Buckets are the smallest elements of a query result. As some dimensions of a result may be aggregated (e.g. time or state) some values may be equal across all buckets.<pre><code>public static class NetworkStats.Bucket</code></pre></section>	https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html
NetworkStats	A										<section class="prog__container">Class providing enumeration over buckets of network usage statistics. <pre><code>NetworkStats</code></pre> objects are returned as results to various queries in <pre><code>NetworkStatsManager</code></pre>.<pre><code>public final class NetworkStats</code></pre></section>	https://developer.android.com/reference/android/app/usage/NetworkStats.html
NetworkStatsManager	A										<section class="prog__container">Provides access to network usage history and statistics. Usage data is collected in discrete bins of time called 'Buckets'. See <pre><code>NetworkStats.Bucket</code></pre> for details.<pre><code>public class NetworkStatsManager</code></pre></section>	https://developer.android.com/reference/android/app/usage/NetworkStatsManager.html
NetworkStatsManager.UsageCallback	A										<section class="prog__container">Base class for usage callbacks. Should be extended by applications wanting notifications.<pre><code>public static abstract class NetworkStatsManager.UsageCallback</code></pre></section>	https://developer.android.com/reference/android/app/usage/NetworkStatsManager.UsageCallback.html
UsageEvents.Event	A										<section class="prog__container">An event representing a state change for a component.<pre><code>public static final class UsageEvents.Event</code></pre></section>	https://developer.android.com/reference/android/app/usage/UsageEvents.Event.html
UsageEvents	A										<section class="prog__container">A result returned from <pre><code>queryEvents(long, long)</code></pre> from which to read <pre><code>UsageEvents.Event</code></pre> objects.<pre><code>public final class UsageEvents</code></pre></section>	https://developer.android.com/reference/android/app/usage/UsageEvents.html
UsageStats	A										<section class="prog__container">Contains usage statistics for an app package for a specific time range.<pre><code>public final class UsageStats</code></pre></section>	https://developer.android.com/reference/android/app/usage/UsageStats.html
UsageStatsManager	A										<section class="prog__container">Provides access to device usage history and statistics. Usage data is aggregated into time intervals: days, weeks, months, and years.<pre><code>public final class UsageStatsManager</code></pre></section>	https://developer.android.com/reference/android/app/usage/UsageStatsManager.html
AppWidgetHost	A										<section class="prog__container">AppWidgetHost provides the interaction with the AppWidget service for apps, like the home screen, that want to embed AppWidgets in their UI.<pre><code>public class AppWidgetHost</code></pre></section>	https://developer.android.com/reference/android/appwidget/AppWidgetHost.html
AppWidgetHostView	A										<section class="prog__container">Provides the glue to show AppWidget views. This class offers automatic animation between updates, and will try recycling old views for each incoming <pre><code>RemoteViews</code></pre>.<pre><code>public class AppWidgetHostView</code></pre></section>	https://developer.android.com/reference/android/appwidget/AppWidgetHostView.html
AppWidgetManager	A										<section class="prog__container">Updates AppWidget state; gets information about installed AppWidget providers and other AppWidget related state. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class AppWidgetManager</code></pre></section>	https://developer.android.com/reference/android/appwidget/AppWidgetManager.html
AppWidgetProvider	A										<section class="prog__container">A convenience class to aid in implementing an AppWidget provider. Everything you can do with AppWidgetProvider, you can do with a regular <pre><code>BroadcastReceiver</code></pre>. AppWidgetProvider merely parses the relevant fields out of the Intent that is received in <pre><code>onReceive(Context,Intent)</code></pre>, and calls hook methods with the received extras.<pre><code>public class AppWidgetProvider</code></pre></section>	https://developer.android.com/reference/android/appwidget/AppWidgetProvider.html
AppWidgetProviderInfo	A										<section class="prog__container">Describes the meta data for an installed AppWidget provider. The fields in this class correspond to the fields in the <pre><code>&lt;appwidget-provider&gt;</code></pre> xml tag.<pre><code>public class AppWidgetProviderInfo</code></pre></section>	https://developer.android.com/reference/android/appwidget/AppWidgetProviderInfo.html
android.appwidget	A										<section class="prog__container">Contains the components necessary to create "app widgets", which users can embed in other applications (such as the home screen) to quickly access application data and services without launching a new activity.</section>	https://developer.android.com/reference/android/appwidget/package-summary.html
BluetoothA2dp	A										<section class="prog__container">This class provides the public APIs to control the Bluetooth A2DP profile.<pre><code>public final class BluetoothA2dp</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothA2dp.html
BluetoothAdapter	A										<section class="prog__container">Represents the local device Bluetooth adapter. The <pre><code>BluetoothAdapter</code></pre> lets you perform fundamental Bluetooth tasks, such as initiate device discovery, query a list of bonded (paired) devices, instantiate a <pre><code>BluetoothDevice</code></pre> using a known MAC address, and create a <pre><code>BluetoothServerSocket</code></pre> to listen for connection requests from other devices, and start a scan for Bluetooth LE devices.<pre><code>public final class BluetoothAdapter</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothAdapter.html
BluetoothAdapter.LeScanCallback	A										<section class="prog__container">Callback interface used to deliver LE scan results.<pre><code>public static interface BluetoothAdapter.LeScanCallback</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothAdapter.LeScanCallback.html
BluetoothAssignedNumbers	A										<section class="prog__container">Bluetooth Assigned Numbers.<pre><code>public class BluetoothAssignedNumbers</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html
BluetoothClass.Device	A										<section class="prog__container">Defines all device class constants.<pre><code>public static class BluetoothClass.Device</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html
BluetoothClass.Device.Major	A										<section class="prog__container">Defines all major device class constants.<pre><code>public static class BluetoothClass.Device.Major</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html
BluetoothClass	A										<section class="prog__container">Represents a Bluetooth class, which describes general characteristics and capabilities of a device. For example, a Bluetooth class will specify the general device type such as a phone, a computer, or headset, and whether it's capable of services such as audio or telephony.<pre><code>public final class BluetoothClass</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothClass.html
BluetoothClass.Service	A										<section class="prog__container">Defines all service class constants.<pre><code>public static final class BluetoothClass.Service</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html
BluetoothDevice	A										<section class="prog__container">Represents a remote Bluetooth device. A <pre><code>BluetoothDevice</code></pre> lets you create a connection with the respective device or query information about it, such as the name, address, class, and bonding state.<pre><code>public final class BluetoothDevice</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothDevice.html
BluetoothGatt	A										<section class="prog__container">Public API for the Bluetooth GATT Profile.<pre><code>public final class BluetoothGatt</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothGatt.html
BluetoothGattCallback	A										<section class="prog__container">This abstract class is used to implement <pre><code>BluetoothGatt</code></pre> callbacks.<pre><code>public abstract class BluetoothGattCallback</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html
BluetoothGattCharacteristic	A										<section class="prog__container">Represents a Bluetooth GATT Characteristic<pre><code>public class BluetoothGattCharacteristic</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattCharacteristic.html
BluetoothGattDescriptor	A										<section class="prog__container">Represents a Bluetooth GATT Descriptor<pre><code>public class BluetoothGattDescriptor</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html
BluetoothGattServer	A										<section class="prog__container">Public API for the Bluetooth GATT Profile server role.<pre><code>public final class BluetoothGattServer</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattServer.html
BluetoothGattServerCallback	A										<section class="prog__container">This abstract class is used to implement <pre><code>BluetoothGattServer</code></pre> callbacks.<pre><code>public abstract class BluetoothGattServerCallback</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattServerCallback.html
BluetoothGattService	A										<section class="prog__container">Represents a Bluetooth GATT Service<pre><code>public class BluetoothGattService</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html
BluetoothHeadset	A										<section class="prog__container">Public API for controlling the Bluetooth Headset Service. This includes both Bluetooth Headset and Handsfree (v1.5) profiles.<pre><code>public final class BluetoothHeadset</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothHeadset.html
BluetoothHealth	A										<section class="prog__container">Public API for Bluetooth Health Profile.<pre><code>public final class BluetoothHealth</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothHealth.html
BluetoothHealthAppConfiguration	A										<section class="prog__container">The Bluetooth Health Application Configuration that is used in conjunction with the <pre><code>BluetoothHealth</code></pre> class. This class represents an application configuration that the Bluetooth Health third party application will register to communicate with the remote Bluetooth health device.<pre><code>public final class BluetoothHealthAppConfiguration</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothHealthAppConfiguration.html
BluetoothHealthCallback	A										<section class="prog__container">This abstract class is used to implement <pre><code>BluetoothHealth</code></pre> callbacks.<pre><code>public abstract class BluetoothHealthCallback</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothHealthCallback.html
BluetoothManager	A										<section class="prog__container">High level manager used to obtain an instance of an <pre><code>BluetoothAdapter</code></pre> and to conduct overall Bluetooth Management.<pre><code>public final class BluetoothManager</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothManager.html
BluetoothProfile	A										<section class="prog__container">Public APIs for the Bluetooth Profiles.<pre><code>public interface BluetoothProfile</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothProfile.html
BluetoothProfile.ServiceListener	A										<section class="prog__container">An interface for notifying BluetoothProfile IPC clients when they have been connected or disconnected to the service.<pre><code>public static interface BluetoothProfile.ServiceListener</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothProfile.ServiceListener.html
BluetoothServerSocket	A										<section class="prog__container">A listening Bluetooth socket.<pre><code>public final class BluetoothServerSocket</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothServerSocket.html
BluetoothSocket	A										<section class="prog__container">A connected or connecting Bluetooth socket.<pre><code>public final class BluetoothSocket</code></pre></section>	https://developer.android.com/reference/android/bluetooth/BluetoothSocket.html
android.bluetooth	A										<section class="prog__container">Provides classes that manage Bluetooth functionality, such as scanning for devices, connecting with devices, and managing data transfer between devices. The Bluetooth API supports both "Classic Bluetooth" and Bluetooth Low Energy.</section>	https://developer.android.com/reference/android/bluetooth/package-summary.html
AdvertiseCallback	A										<section class="prog__container">Bluetooth LE advertising callbacks, used to deliver advertising operation status.<pre><code>public abstract class AdvertiseCallback</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/AdvertiseCallback.html
AdvertiseData.Builder	A										<section class="prog__container">Builder for <pre><code>AdvertiseData</code></pre>.<pre><code>public static final class AdvertiseData.Builder</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.Builder.html
AdvertiseData	A										<section class="prog__container">Advertise data packet container for Bluetooth LE advertising. This represents the data to be advertised as well as the scan response data for active scans.<pre><code>public final class AdvertiseData</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.html
AdvertiseSettings.Builder	A										<section class="prog__container">Builder class for <pre><code>AdvertiseSettings</code></pre>.<pre><code>public static final class AdvertiseSettings.Builder</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/AdvertiseSettings.Builder.html
AdvertiseSettings	A										<section class="prog__container">The <pre><code>AdvertiseSettings</code></pre> provide a way to adjust advertising preferences for each Bluetooth LE advertisement instance. Use <pre><code>AdvertiseSettings.Builder</code></pre> to create an instance of this class.<pre><code>public final class AdvertiseSettings</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/AdvertiseSettings.html
BluetoothLeAdvertiser	A										<section class="prog__container">This class provides a way to perform Bluetooth LE advertise operations, such as starting and stopping advertising. An advertiser can broadcast up to 31 bytes of advertisement data represented by <pre><code>AdvertiseData</code></pre>.<pre><code>public final class BluetoothLeAdvertiser</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/BluetoothLeAdvertiser.html
BluetoothLeScanner	A										<section class="prog__container">This class provides methods to perform scan related operations for Bluetooth LE devices. An application can scan for a particular type of Bluetooth LE devices using <pre><code>ScanFilter</code></pre>. It can also request different types of callbacks for delivering the result.<pre><code>public final class BluetoothLeScanner</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner.html
ScanCallback	A										<section class="prog__container">Bluetooth LE scan callbacks. Scan results are reported using these callbacks.<pre><code>public abstract class ScanCallback</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/ScanCallback.html
ScanFilter.Builder	A										<section class="prog__container">Builder class for <pre><code>ScanFilter</code></pre>.<pre><code>public static final class ScanFilter.Builder</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/ScanFilter.Builder.html
ScanFilter	A										<section class="prog__container">Criteria for filtering result from Bluetooth LE scans. A <pre><code>ScanFilter</code></pre> allows clients to restrict scan results to only those that are of interest to them.<pre><code>public final class ScanFilter</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/ScanFilter.html
ScanRecord	A										<section class="prog__container">Represents a scan record from Bluetooth LE scan.<pre><code>public final class ScanRecord</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/ScanRecord.html
ScanResult	A										<section class="prog__container">ScanResult for Bluetooth LE scan.<pre><code>public final class ScanResult</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/ScanResult.html
ScanSettings.Builder	A										<section class="prog__container">Builder for <pre><code>ScanSettings</code></pre>.<pre><code>public static final class ScanSettings.Builder</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/ScanSettings.Builder.html
ScanSettings	A										<section class="prog__container">Bluetooth LE scan settings are passed to <pre><code>startScan(ScanCallback)</code></pre> to define the parameters for the scan.<pre><code>public final class ScanSettings</code></pre></section>	https://developer.android.com/reference/android/bluetooth/le/ScanSettings.html
AbstractThreadedSyncAdapter	A										<section class="prog__container">An abstract implementation of a SyncAdapter that spawns a thread to invoke a sync operation. If a sync operation is already in progress when a sync request is received, an error will be returned to the new request and the existing request will be allowed to continue. However if there is no sync in progress then a thread will be spawned and <pre><code>onPerformSync(Account, Bundle, String, ContentProviderClient, SyncResult)</code></pre> will be invoked on that thread.<pre><code>public abstract class AbstractThreadedSyncAdapter</code></pre></section>	https://developer.android.com/reference/android/content/AbstractThreadedSyncAdapter.html
ActivityNotFoundException	A										<section class="prog__container">This exception is thrown when a call to <pre><code>startActivity(Intent)</code></pre> or one of its variants fails because an Activity can not be found to execute the given Intent.<pre><code>public class ActivityNotFoundException</code></pre></section>	https://developer.android.com/reference/android/content/ActivityNotFoundException.html
AsyncQueryHandler	A										<section class="prog__container">A helper class to help make handling asynchronous <pre><code>ContentResolver</code></pre> queries easier.<pre><code>public abstract class AsyncQueryHandler</code></pre></section>	https://developer.android.com/reference/android/content/AsyncQueryHandler.html
AsyncQueryHandler.WorkerArgs	A										<section class="prog__container"><pre><code>protected static final class AsyncQueryHandler.WorkerArgs</code></pre></section>	https://developer.android.com/reference/android/content/AsyncQueryHandler.WorkerArgs.html
AsyncQueryHandler.WorkerHandler	A										<section class="prog__container"><pre><code>protected class AsyncQueryHandler.WorkerHandler</code></pre></section>	https://developer.android.com/reference/android/content/AsyncQueryHandler.WorkerHandler.html
AsyncTaskLoader	A										<section class="prog__container">Abstract Loader that provides an <pre><code>AsyncTask</code></pre> to do the work. See <pre><code>Loader</code></pre> and <pre><code>LoaderManager</code></pre> for more details.<pre><code>public abstract class AsyncTaskLoader</code></pre></section>	https://developer.android.com/reference/android/content/AsyncTaskLoader.html
BroadcastReceiver	A										<section class="prog__container">Base class for code that receives and handles broadcast intents sent by <pre><code>sendBroadcast(Intent)</code></pre>.<pre><code>public abstract class BroadcastReceiver</code></pre></section>	https://developer.android.com/reference/android/content/BroadcastReceiver.html
BroadcastReceiver.PendingResult	A										<section class="prog__container">State for a result that is pending for a broadcast receiver. Returned by <pre><code>goAsync()</code></pre> while in <pre><code>BroadcastReceiver.onReceive()</code></pre>. This allows you to return from onReceive() without having the broadcast terminate; you must call <pre><code>finish()</code></pre> once you are done with the broadcast. This allows you to process the broadcast off of the main thread of your app.<pre><code>public static class BroadcastReceiver.PendingResult</code></pre></section>	https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html
ClipboardManager	A										<section class="prog__container">Interface to the clipboard service, for placing and retrieving text in the global clipboard.<pre><code>public class ClipboardManager</code></pre></section>	https://developer.android.com/reference/android/content/ClipboardManager.html
ClipboardManager.OnPrimaryClipChangedListener	A										<section class="prog__container">Defines a listener callback that is invoked when the primary clip on the clipboard changes. Objects that want to register a listener call <pre><code>addPrimaryClipChangedListener()</code></pre> with an object that implements OnPrimaryClipChangedListener.<pre><code>public static interface ClipboardManager.OnPrimaryClipChangedListener</code></pre></section>	https://developer.android.com/reference/android/content/ClipboardManager.OnPrimaryClipChangedListener.html
ClipData	A										<section class="prog__container">Representation of a clipped data on the clipboard.<pre><code>public class ClipData</code></pre></section>	https://developer.android.com/reference/android/content/ClipData.html
ClipData.Item	A										<section class="prog__container">Description of a single item in a ClipData.<pre><code>public static class ClipData.Item</code></pre></section>	https://developer.android.com/reference/android/content/ClipData.Item.html
ClipDescription	A										<section class="prog__container">Meta-data describing the contents of a <pre><code>ClipData</code></pre>. Provides enough information to know if you can handle the ClipData, but not the data itself. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class ClipDescription</code></pre></section>	https://developer.android.com/reference/android/content/ClipDescription.html
ComponentCallbacks	A										<section class="prog__container">The set of callback APIs that are common to all application components (<pre><code>Activity</code></pre>, <pre><code>Service</code></pre>, <pre><code>ContentProvider</code></pre>, and <pre><code>Application</code></pre>). <p class="note"><strong>Note:</strong> You should also implement the <pre><code>ComponentCallbacks2</code></pre> interface, which provides the <pre><code>onTrimMemory(int)</code></pre> callback to help your app manage its memory usage more effectively.<pre><code>public interface ComponentCallbacks</code></pre></section>	https://developer.android.com/reference/android/content/ComponentCallbacks.html
ComponentCallbacks2	A										<section class="prog__container">Extended <pre><code>ComponentCallbacks</code></pre> interface with a new callback for finer-grained memory management. This interface is available in all application components (<pre><code>Activity</code></pre>, <pre><code>Service</code></pre>, <pre><code>ContentProvider</code></pre>, and <pre><code>Application</code></pre>).<pre><code>public interface ComponentCallbacks2</code></pre></section>	https://developer.android.com/reference/android/content/ComponentCallbacks2.html
ComponentName	A										<section class="prog__container">Identifier for a specific application component (<pre><code>Activity</code></pre>, <pre><code>Service</code></pre>, <pre><code>BroadcastReceiver</code></pre>, or <pre><code>ContentProvider</code></pre>) that is available. Two pieces of information, encapsulated here, are required to identify a component: the package (a String) it exists in, and the class (a String) name inside of that package.<pre><code>public final class ComponentName</code></pre></section>	https://developer.android.com/reference/android/content/ComponentName.html
ContentProvider	A										<section class="prog__container">Content providers are one of the primary building blocks of Android applications, providing content to applications. They encapsulate data and provide it to applications through the single <pre><code>ContentResolver</code></pre> interface. A content provider is only required if you need to share data between multiple applications. For example, the contacts data is used by multiple applications and must be stored in a content provider. If you don't need to share data amongst multiple applications you can use a database directly via <pre><code>SQLiteDatabase</code></pre>.<pre><code>public abstract class ContentProvider</code></pre></section>	https://developer.android.com/reference/android/content/ContentProvider.html
ContentProvider.PipeDataWriter	A										<section class="prog__container">Interface to write a stream of data to a pipe. Use with <pre><code>openPipeHelper(Uri, String, Bundle, T, ContentProvider.PipeDataWriter<t>)</t></code></pre>.<pre><code>public static interface ContentProvider.PipeDataWriter</code></pre></section>	https://developer.android.com/reference/android/content/ContentProvider.PipeDataWriter.html
ContentProviderClient	A										<section class="prog__container">The public interface object used to interact with a specific <pre><code>ContentProvider</code></pre>.<pre><code>public class ContentProviderClient</code></pre></section>	https://developer.android.com/reference/android/content/ContentProviderClient.html
ContentProviderOperation.Builder	A										<section class="prog__container">Used to add parameters to a <pre><code>ContentProviderOperation</code></pre>. The <pre><code>ContentProviderOperation.Builder</code></pre> is first created by calling <pre><code>newInsert(android.net.Uri)</code></pre>, <pre><code>newUpdate(android.net.Uri)</code></pre>, <pre><code>newDelete(android.net.Uri)</code></pre> or <pre><code>newAssertQuery(Uri)</code></pre>. The withXXX methods can then be used to add parameters to the builder. See the specific methods to find for which <pre><code>ContentProviderOperation.Builder</code></pre> type each is allowed. Call <pre><code>build()</code></pre> to create the <pre><code>ContentProviderOperation</code></pre> once all the parameters have been supplied.<pre><code>public static class ContentProviderOperation.Builder</code></pre></section>	https://developer.android.com/reference/android/content/ContentProviderOperation.Builder.html
ContentProviderOperation	A										<section class="prog__container">Represents a single operation to be performed as part of a batch of operations.<pre><code>public class ContentProviderOperation</code></pre></section>	https://developer.android.com/reference/android/content/ContentProviderOperation.html
ContentProviderResult	A										<section class="prog__container">Contains the result of the application of a <pre><code>ContentProviderOperation</code></pre>. It is guaranteed to have exactly one of <pre><code>uri</code></pre> or <pre><code>count</code></pre> set.<pre><code>public class ContentProviderResult</code></pre></section>	https://developer.android.com/reference/android/content/ContentProviderResult.html
ContentQueryMap	A										<section class="prog__container">Caches the contents of a cursor into a Map of String-&gt;ContentValues and optionally keeps the cache fresh by registering for updates on the content backing the cursor. The column of the database that is to be used as the key of the map is user-configurable, and the ContentValues contains all columns other than the one that is designated the key.<pre><code>public class ContentQueryMap</code></pre></section>	https://developer.android.com/reference/android/content/ContentQueryMap.html
ContentResolver	A										<section class="prog__container">This class provides applications access to the content model. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public abstract class ContentResolver</code></pre></section>	https://developer.android.com/reference/android/content/ContentResolver.html
ContentUris	A										<section class="prog__container">Utility methods useful for working with <pre><code>Uri</code></pre> objects that use the "content" (content://) scheme.<pre><code>public class ContentUris</code></pre></section>	https://developer.android.com/reference/android/content/ContentUris.html
ContentValues	A										<section class="prog__container">This class is used to store a set of values that the <pre><code>ContentResolver</code></pre> can process.<pre><code>public final class ContentValues</code></pre></section>	https://developer.android.com/reference/android/content/ContentValues.html
Context	A										<section class="prog__container">Interface to global information about an application environment. This is an abstract class whose implementation is provided by the Android system. It allows access to application-specific resources and classes, as well as up-calls for application-level operations such as launching activities, broadcasting and receiving intents, etc.<pre><code>public abstract class Context</code></pre></section>	https://developer.android.com/reference/android/content/Context.html
ContextWrapper	A										<section class="prog__container">Proxying implementation of Context that simply delegates all of its calls to another Context. Can be subclassed to modify behavior without changing the original Context.<pre><code>public class ContextWrapper</code></pre></section>	https://developer.android.com/reference/android/content/ContextWrapper.html
CursorLoader	A										<section class="prog__container">A loader that queries the <pre><code>ContentResolver</code></pre> and returns a <pre><code>Cursor</code></pre>. This class implements the <pre><code>Loader</code></pre> protocol in a standard way for querying cursors, building on <pre><code>AsyncTaskLoader</code></pre> to perform the cursor query on a background thread so that it does not block the application's UI.<pre><code>public class CursorLoader</code></pre></section>	https://developer.android.com/reference/android/content/CursorLoader.html
DialogInterface	A										<section class="prog__container"><pre><code>public interface DialogInterface</code></pre></section>	https://developer.android.com/reference/android/content/DialogInterface.html
DialogInterface.OnCancelListener	A										<section class="prog__container">Interface used to allow the creator of a dialog to run some code when the dialog is canceled.<pre><code>public static interface DialogInterface.OnCancelListener</code></pre></section>	https://developer.android.com/reference/android/content/DialogInterface.OnCancelListener.html
DialogInterface.OnClickListener	A										<section class="prog__container">Interface used to allow the creator of a dialog to run some code when an item on the dialog is clicked..<pre><code>public static interface DialogInterface.OnClickListener</code></pre></section>	https://developer.android.com/reference/android/content/DialogInterface.OnClickListener.html
DialogInterface.OnDismissListener	A										<section class="prog__container">Interface used to allow the creator of a dialog to run some code when the dialog is dismissed.<pre><code>public static interface DialogInterface.OnDismissListener</code></pre></section>	https://developer.android.com/reference/android/content/DialogInterface.OnDismissListener.html
DialogInterface.OnKeyListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a key event is dispatched to this dialog. The callback will be invoked before the key event is given to the dialog.<pre><code>public static interface DialogInterface.OnKeyListener</code></pre></section>	https://developer.android.com/reference/android/content/DialogInterface.OnKeyListener.html
DialogInterface.OnMultiChoiceClickListener	A										<section class="prog__container">Interface used to allow the creator of a dialog to run some code when an item in a multi-choice dialog is clicked.<pre><code>public static interface DialogInterface.OnMultiChoiceClickListener</code></pre></section>	https://developer.android.com/reference/android/content/DialogInterface.OnMultiChoiceClickListener.html
DialogInterface.OnShowListener	A										<section class="prog__container">Interface used to allow the creator of a dialog to run some code when the dialog is shown.<pre><code>public static interface DialogInterface.OnShowListener</code></pre></section>	https://developer.android.com/reference/android/content/DialogInterface.OnShowListener.html
Entity	A										<section class="prog__container">A representation of a item using ContentValues. It contains one top level ContentValue plus a collection of Uri, ContentValues tuples as subvalues. One example of its use is in Contacts, where the top level ContentValue contains the columns from the RawContacts table and the subvalues contain a ContentValues object for each row from the Data table that corresponds to that RawContact. The uri refers to the Data table uri for each row.<pre><code>public final class Entity</code></pre></section>	https://developer.android.com/reference/android/content/Entity.html
Entity.NamedContentValues	A										<section class="prog__container"><pre><code>public static class Entity.NamedContentValues</code></pre></section>	https://developer.android.com/reference/android/content/Entity.NamedContentValues.html
EntityIterator	A										<section class="prog__container">A specialization of <pre><code>Iterator</code></pre> that allows iterating over a collection of <pre><code>Entity</code></pre> objects. In addition to the iteration functionality it also allows resetting the iterator back to the beginning and provides for an explicit <pre><code>close()</code></pre> method to indicate that the iterator is no longer needed and that its resources can be released.<pre><code>public interface EntityIterator</code></pre></section>	https://developer.android.com/reference/android/content/EntityIterator.html
Intent.FilterComparison	A										<section class="prog__container">Wrapper class holding an Intent and implementing comparisons on it for the purpose of filtering. The class implements its <pre><code>equals()</code></pre> and <pre><code>hashCode()</code></pre> methods as simple calls to <pre><code>filterEquals(Intent)</code></pre> filterEquals()} and <pre><code>filterHashCode()</code></pre> filterHashCode()} on the wrapped Intent.<pre><code>public static final class Intent.FilterComparison</code></pre></section>	https://developer.android.com/reference/android/content/Intent.FilterComparison.html
Intent	A										<section class="prog__container">An intent is an abstract description of an operation to be performed. It can be used with <pre><code>startActivity</code></pre> to launch an <pre><code>Activity</code></pre>, <pre><code>broadcastIntent</code></pre> to send it to any interested <pre><code>BroadcastReceiver</code></pre> components, and <pre><code>startService(Intent)</code></pre> or <pre><code>bindService(Intent, ServiceConnection, int)</code></pre> to communicate with a background <pre><code>Service</code></pre>.<pre><code>public class Intent</code></pre></section>	https://developer.android.com/reference/android/content/Intent.html
Intent.ShortcutIconResource	A										<section class="prog__container">Represents a shortcut/live folder icon resource.<pre><code>public static class Intent.ShortcutIconResource</code></pre></section>	https://developer.android.com/reference/android/content/Intent.ShortcutIconResource.html
IntentFilter.AuthorityEntry	A										<section class="prog__container">This is an entry for a single authority in the Iterator returned by <pre><code>authoritiesIterator()</code></pre>.<pre><code>public static final class IntentFilter.AuthorityEntry</code></pre></section>	https://developer.android.com/reference/android/content/IntentFilter.AuthorityEntry.html
IntentFilter	A										<section class="prog__container">Structured description of Intent values to be matched. An IntentFilter can match against actions, categories, and data (either via its type, scheme, and/or path) in an Intent. It also includes a "priority" value which is used to order multiple matching filters.<pre><code>public class IntentFilter</code></pre></section>	https://developer.android.com/reference/android/content/IntentFilter.html
IntentFilter.MalformedMimeTypeException	A										<section class="prog__container">This exception is thrown when a given MIME type does not have a valid syntax.<pre><code>public static class IntentFilter.MalformedMimeTypeException</code></pre></section>	https://developer.android.com/reference/android/content/IntentFilter.MalformedMimeTypeException.html
IntentSender	A										<section class="prog__container">A description of an Intent and target action to perform with it. The returned object can be handed to other applications so that they can perform the action you described on your behalf at a later time.<pre><code>public class IntentSender</code></pre></section>	https://developer.android.com/reference/android/content/IntentSender.html
IntentSender.OnFinished	A										<section class="prog__container">Callback interface for discovering when a send operation has completed. Primarily for use with a IntentSender that is performing a broadcast, this provides the same information as calling <pre><code>Context.sendBroadcast()</code></pre> with a final BroadcastReceiver.<pre><code>public static interface IntentSender.OnFinished</code></pre></section>	https://developer.android.com/reference/android/content/IntentSender.OnFinished.html
IntentSender.SendIntentException	A										<section class="prog__container">Exception thrown when trying to send through a PendingIntent that has been canceled or is otherwise no longer able to execute the request.<pre><code>public static class IntentSender.SendIntentException</code></pre></section>	https://developer.android.com/reference/android/content/IntentSender.SendIntentException.html
Loader.ForceLoadContentObserver	A										<section class="prog__container">An implementation of a ContentObserver that takes care of connecting it to the Loader to have the loader re-load its data when the observer is told it has changed. You do not normally need to use this yourself; it is used for you by <pre><code>CursorLoader</code></pre> to take care of executing an update when the cursor's backing data changes.<pre><code>public final class Loader.ForceLoadContentObserver</code></pre></section>	https://developer.android.com/reference/android/content/Loader.ForceLoadContentObserver.html
Loader	A										<section class="prog__container">A class that performs asynchronous loading of data. While Loaders are active they should monitor the source of their data and deliver new results when the contents change. See <pre><code>LoaderManager</code></pre> for more detail.<pre><code>public class Loader</code></pre></section>	https://developer.android.com/reference/android/content/Loader.html
Loader.OnLoadCanceledListener	A										<section class="prog__container">Interface that is implemented to discover when a Loader has been canceled before it finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <pre><code>LoaderManager</code></pre> to find out when a Loader it is managing has been canceled so that it can schedule the next Loader. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.<pre><code>public static interface Loader.OnLoadCanceledListener</code></pre></section>	https://developer.android.com/reference/android/content/Loader.OnLoadCanceledListener.html
Loader.OnLoadCompleteListener	A										<section class="prog__container">Interface that is implemented to discover when a Loader has finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <pre><code>LoaderManager</code></pre> to find out when a Loader it is managing has completed so that this can be reported to its client. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.<pre><code>public static interface Loader.OnLoadCompleteListener</code></pre></section>	https://developer.android.com/reference/android/content/Loader.OnLoadCompleteListener.html
MutableContextWrapper	A										<section class="prog__container">Special version of <pre><code>ContextWrapper</code></pre> that allows the base context to be modified after it is initially set.<pre><code>public class MutableContextWrapper</code></pre></section>	https://developer.android.com/reference/android/content/MutableContextWrapper.html
OperationApplicationException	A										<section class="prog__container">Thrown when an application of a <pre><code>ContentProviderOperation</code></pre> fails due the specified constraints.<pre><code>public class OperationApplicationException</code></pre></section>	https://developer.android.com/reference/android/content/OperationApplicationException.html
android.content	A										<section class="prog__container">Contains classes for accessing and publishing data on a device. It includes three main categories of APIs:</section>	https://developer.android.com/reference/android/content/package-summary.html
PeriodicSync	A										<section class="prog__container">Value type that contains information about a periodic sync.<pre><code>public class PeriodicSync</code></pre></section>	https://developer.android.com/reference/android/content/PeriodicSync.html
ReceiverCallNotAllowedException	A										<section class="prog__container">This exception is thrown from <pre><code>registerReceiver(BroadcastReceiver, IntentFilter)</code></pre> and <pre><code>bindService(Intent, ServiceConnection, int)</code></pre> when these methods are being used from an <pre><code>BroadcastReceiver</code></pre> component. In this case, the component will no longer be active upon returning from receiving the Intent, so it is not valid to use asynchronous APIs.<pre><code>public class ReceiverCallNotAllowedException</code></pre></section>	https://developer.android.com/reference/android/content/ReceiverCallNotAllowedException.html
RestrictionEntry	A										<section class="prog__container">Applications can expose restrictions for a restricted user on a multiuser device. The administrator can configure these restrictions that will then be applied to the restricted user. Each RestrictionsEntry is one configurable restriction.<pre><code>public class RestrictionEntry</code></pre></section>	https://developer.android.com/reference/android/content/RestrictionEntry.html
RestrictionsManager	A										<section class="prog__container">Provides a mechanism for apps to query restrictions imposed by an entity that manages the user. Apps can also send permission requests to a local or remote device administrator to override default app-specific restrictions or any other operation that needs explicit authorization from the administrator.<pre><code>public class RestrictionsManager</code></pre></section>	https://developer.android.com/reference/android/content/RestrictionsManager.html
SearchRecentSuggestionsProvider	A										<section class="prog__container">This superclass can be used to create a simple search suggestions provider for your application. It creates suggestions (as the user types) based on recent queries and/or recent views.<pre><code>public class SearchRecentSuggestionsProvider</code></pre></section>	https://developer.android.com/reference/android/content/SearchRecentSuggestionsProvider.html
ServiceConnection	A										<section class="prog__container">Interface for monitoring the state of an application service. See <pre><code>Service</code></pre> and <pre><code>Context.bindService()</code></pre> for more information.<pre><code>public interface ServiceConnection</code></pre></section>	https://developer.android.com/reference/android/content/ServiceConnection.html
SharedPreferences.Editor	A										<section class="prog__container">Interface used for modifying values in a <pre><code>SharedPreferences</code></pre> object. All changes you make in an editor are batched, and not copied back to the original <pre><code>SharedPreferences</code></pre> until you call <pre><code>commit()</code></pre> or <pre><code>apply()</code></pre><pre><code>public static interface SharedPreferences.Editor</code></pre></section>	https://developer.android.com/reference/android/content/SharedPreferences.Editor.html
SharedPreferences	A										<section class="prog__container">Interface for accessing and modifying preference data returned by <pre><code>getSharedPreferences(String, int)</code></pre>. For any particular set of preferences, there is a single instance of this class that all clients share. Modifications to the preferences must go through an <pre><code>SharedPreferences.Editor</code></pre> object to ensure the preference values remain in a consistent state and control when they are committed to storage. Objects that are returned from the various <pre><code>get</code></pre> methods must be treated as immutable by the application.<pre><code>public interface SharedPreferences</code></pre></section>	https://developer.android.com/reference/android/content/SharedPreferences.html
SharedPreferences.OnSharedPreferenceChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a shared preference is changed.<pre><code>public static interface SharedPreferences.OnSharedPreferenceChangeListener</code></pre></section>	https://developer.android.com/reference/android/content/SharedPreferences.OnSharedPreferenceChangeListener.html
SyncAdapterType	A										<section class="prog__container">Value type that represents a SyncAdapterType. This object overrides <pre><code>equals(Object)</code></pre> and <pre><code>hashCode()</code></pre>, making it suitable for use as the key of a <pre><code>Map</code></pre><pre><code>public class SyncAdapterType</code></pre></section>	https://developer.android.com/reference/android/content/SyncAdapterType.html
SyncContext	A										<section class="prog__container"><pre><code>public class SyncContext</code></pre></section>	https://developer.android.com/reference/android/content/SyncContext.html
SyncInfo	A										<section class="prog__container">Information about the sync operation that is currently underway.<pre><code>public class SyncInfo</code></pre></section>	https://developer.android.com/reference/android/content/SyncInfo.html
SyncRequest.Builder	A										<section class="prog__container">Builder class for a <pre><code>SyncRequest</code></pre>. As you build your SyncRequest this class will also perform validation.<pre><code>public static class SyncRequest.Builder</code></pre></section>	https://developer.android.com/reference/android/content/SyncRequest.Builder.html
SyncRequest	A										<section class="prog__container">Convenience class to construct sync requests. See <pre><code>SyncRequest.Builder</code></pre> for an explanation of the various functions. The resulting object is passed through to the framework via <pre><code>requestSync(SyncRequest)</code></pre>.<pre><code>public class SyncRequest</code></pre></section>	https://developer.android.com/reference/android/content/SyncRequest.html
SyncResult	A										<section class="prog__container">This class is used to communicate the results of a sync operation to the SyncManager. Based on the values here the SyncManager will determine the disposition of the sync and whether or not a new sync operation needs to be scheduled in the future.<pre><code>public final class SyncResult</code></pre></section>	https://developer.android.com/reference/android/content/SyncResult.html
SyncStats	A										<section class="prog__container">Used to record various statistics about the result of a sync operation. The SyncManager gets access to these via a <pre><code>SyncResult</code></pre> and uses some of them to determine the disposition of the sync. See <pre><code>SyncResult</code></pre> for further dicussion on how the SyncManager uses these values.<pre><code>public class SyncStats</code></pre></section>	https://developer.android.com/reference/android/content/SyncStats.html
SyncStatusObserver	A										<section class="prog__container"><pre><code>public interface SyncStatusObserver</code></pre></section>	https://developer.android.com/reference/android/content/SyncStatusObserver.html
UriMatcher	A										<section class="prog__container">Utility class to aid in matching URIs in content providers.<pre><code>public class UriMatcher</code></pre></section>	https://developer.android.com/reference/android/content/UriMatcher.html
UriPermission	A										<section class="prog__container">Description of a single Uri permission grant. This grants may have been created via <pre><code>FLAG_GRANT_READ_URI_PERMISSION</code></pre>, etc when sending an <pre><code>Intent</code></pre>, or explicitly through <pre><code>grantUriPermission(String, android.net.Uri, int)</code></pre>.<pre><code>public final class UriPermission</code></pre></section>	https://developer.android.com/reference/android/content/UriPermission.html
ActivityInfo	A										<section class="prog__container">Information you can retrieve about a particular application activity or receiver. This corresponds to information collected from the AndroidManifest.xml's &lt;activity&gt; and &lt;receiver&gt; tags.<pre><code>public class ActivityInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/ActivityInfo.html
ActivityInfo.WindowLayout	A										<section class="prog__container">Contains information about position and size of the activity on the display. Used in freeform mode to set desired position when activity is first launched. It describes how big the activity wants to be in both width and height, the minimal allowed size, and the gravity to be applied.<pre><code>public static final class ActivityInfo.WindowLayout</code></pre></section>	https://developer.android.com/reference/android/content/pm/ActivityInfo.WindowLayout.html
ApplicationInfo.DisplayNameComparator	A										<section class="prog__container"><pre><code>public static class ApplicationInfo.DisplayNameComparator</code></pre></section>	https://developer.android.com/reference/android/content/pm/ApplicationInfo.DisplayNameComparator.html
ApplicationInfo	A										<section class="prog__container">Information you can retrieve about a particular application. This corresponds to information collected from the AndroidManifest.xml's &lt;application&gt; tag.<pre><code>public class ApplicationInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/ApplicationInfo.html
ComponentInfo	A										<section class="prog__container">Base class containing information common to all application components (<pre><code>ActivityInfo</code></pre>, <pre><code>ServiceInfo</code></pre>). This class is not intended to be used by itself; it is simply here to share common definitions between all application components. As such, it does not itself implement Parcelable, but does provide convenience methods to assist in the implementation of Parcelable in subclasses.<pre><code>public class ComponentInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/ComponentInfo.html
ConfigurationInfo	A										<section class="prog__container">Information you can retrieve about hardware configuration preferences declared by an application. This corresponds to information collected from the AndroidManifest.xml's &lt;uses-configuration&gt; and &lt;uses-feature&gt; tags.<pre><code>public class ConfigurationInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html
FeatureGroupInfo	A										<section class="prog__container">A set of features that can be requested by an application. This corresponds to information collected from the AndroidManifest.xml's <pre><code>&lt;feature-group&gt;</code></pre> tag.<pre><code>public final class FeatureGroupInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/FeatureGroupInfo.html
FeatureInfo	A										<section class="prog__container">Definition of a single optional hardware or software feature of an Android device.<pre><code>public class FeatureInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/FeatureInfo.html
InstrumentationInfo	A										<section class="prog__container">Information you can retrieve about a particular piece of test instrumentation. This corresponds to information collected from the AndroidManifest.xml's &lt;instrumentation&gt; tag.<pre><code>public class InstrumentationInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/InstrumentationInfo.html
LabeledIntent	A										<section class="prog__container">A special subclass of Intent that can have a custom label/icon associated with it. Primarily for use with <pre><code>ACTION_CHOOSER</code></pre>.<pre><code>public class LabeledIntent</code></pre></section>	https://developer.android.com/reference/android/content/pm/LabeledIntent.html
LauncherActivityInfo	A										<section class="prog__container">A representation of an activity that can belong to this user or a managed profile associated with this user. It can be used to query the label, icon and badged icon for the activity.<pre><code>public class LauncherActivityInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/LauncherActivityInfo.html
LauncherApps.Callback	A										<section class="prog__container">Callbacks for package changes to this and related managed profiles.<pre><code>public static abstract class LauncherApps.Callback</code></pre></section>	https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html
LauncherApps	A										<section class="prog__container">Class for retrieving a list of launchable activities for the current user and any associated managed profiles. This is mainly for use by launchers. Apps can be queried for each user profile. Since the PackageManager will not deliver package broadcasts for other profiles, you can register for package changes here.<pre><code>public class LauncherApps</code></pre></section>	https://developer.android.com/reference/android/content/pm/LauncherApps.html
LauncherApps.ShortcutQuery	A										<section class="prog__container">Represents a query passed to <pre><code>getShortcuts(ShortcutQuery, UserHandle)</code></pre>.<pre><code>public static class LauncherApps.ShortcutQuery</code></pre></section>	https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html
android.content.pm	A										<section class="prog__container">Contains classes for accessing information about an application package, including information about its activities, permissions, services, signatures, and providers.</section>	https://developer.android.com/reference/android/content/pm/package-summary.html
PackageInfo	A										<section class="prog__container">Overall information about the contents of a package. This corresponds to all of the information collected from AndroidManifest.xml.<pre><code>public class PackageInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageInfo.html
PackageInstaller	A										<section class="prog__container">Offers the ability to install, upgrade, and remove applications on the device. This includes support for apps packaged either as a single "monolithic" APK, or apps packaged as multiple "split" APKs.<pre><code>public class PackageInstaller</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageInstaller.html
PackageInstaller.Session	A										<section class="prog__container">An installation that is being actively staged. For an install to succeed, all existing and new packages must have identical package names, version codes, and signing certificates.<pre><code>public static class PackageInstaller.Session</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageInstaller.Session.html
PackageInstaller.SessionCallback	A										<section class="prog__container">Events for observing session lifecycle.<pre><code>public static abstract class PackageInstaller.SessionCallback</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageInstaller.SessionCallback.html
PackageInstaller.SessionInfo	A										<section class="prog__container">Details for an active install session.<pre><code>public static class PackageInstaller.SessionInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageInstaller.SessionInfo.html
PackageInstaller.SessionParams	A										<section class="prog__container">Parameters for creating a new <pre><code>PackageInstaller.Session</code></pre>.<pre><code>public static class PackageInstaller.SessionParams</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageInstaller.SessionParams.html
PackageItemInfo.DisplayNameComparator	A										<section class="prog__container"><pre><code>public static class PackageItemInfo.DisplayNameComparator</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageItemInfo.DisplayNameComparator.html
PackageItemInfo	A										<section class="prog__container">Base class containing information common to all package items held by the package manager. This provides a very common basic set of attributes: a label, icon, and meta-data. This class is not intended to be used by itself; it is simply here to share common definitions between all items returned by the package manager. As such, it does not itself implement Parcelable, but does provide convenience methods to assist in the implementation of Parcelable in subclasses.<pre><code>public class PackageItemInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageItemInfo.html
PackageManager	A										<section class="prog__container">Class for retrieving various kinds of information related to the application packages that are currently installed on the device. You can find this class through <pre><code>getPackageManager()</code></pre>.<pre><code>public abstract class PackageManager</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageManager.html
PackageManager.NameNotFoundException	A										<section class="prog__container">This exception is thrown when a given package, application, or component name cannot be found.<pre><code>public static class PackageManager.NameNotFoundException</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageManager.NameNotFoundException.html
PackageStats	A										<section class="prog__container">implementation of PackageStats associated with a application package.<pre><code>public class PackageStats</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageStats.html
PathPermission	A										<section class="prog__container">Description of permissions needed to access a particular path in a <pre><code>ProviderInfo</code></pre>.<pre><code>public class PathPermission</code></pre></section>	https://developer.android.com/reference/android/content/pm/PathPermission.html
PermissionGroupInfo	A										<section class="prog__container">Information you can retrieve about a particular security permission group known to the system. This corresponds to information collected from the AndroidManifest.xml's &lt;permission-group&gt; tags.<pre><code>public class PermissionGroupInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/PermissionGroupInfo.html
PermissionInfo	A										<section class="prog__container">Information you can retrieve about a particular security permission known to the system. This corresponds to information collected from the AndroidManifest.xml's &lt;permission&gt; tags.<pre><code>public class PermissionInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/PermissionInfo.html
ProviderInfo	A										<section class="prog__container">Holds information about a specific <pre><code>content provider</code></pre>. This is returned by <pre><code>PackageManager.resolveContentProvider()</code></pre>.<pre><code>public final class ProviderInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/ProviderInfo.html
ResolveInfo.DisplayNameComparator	A										<section class="prog__container"><pre><code>public static class ResolveInfo.DisplayNameComparator</code></pre></section>	https://developer.android.com/reference/android/content/pm/ResolveInfo.DisplayNameComparator.html
ResolveInfo	A										<section class="prog__container">Information that is returned from resolving an intent against an IntentFilter. This partially corresponds to information collected from the AndroidManifest.xml's &lt;intent&gt; tags.<pre><code>public class ResolveInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/ResolveInfo.html
ServiceInfo	A										<section class="prog__container">Information you can retrieve about a particular application service. This corresponds to information collected from the AndroidManifest.xml's &lt;service&gt; tags.<pre><code>public class ServiceInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/ServiceInfo.html
ShortcutInfo.Builder	A										<section class="prog__container">Builder class for <pre><code>ShortcutInfo</code></pre> objects.<pre><code>public static class ShortcutInfo.Builder</code></pre></section>	https://developer.android.com/reference/android/content/pm/ShortcutInfo.Builder.html
ShortcutInfo	A										<section class="prog__container">Represents a shortcut that can be published via <pre><code>ShortcutManager</code></pre>.<pre><code>public final class ShortcutInfo</code></pre></section>	https://developer.android.com/reference/android/content/pm/ShortcutInfo.html
ShortcutManager	A										<section class="prog__container">The ShortcutManager manages an app's <em>shortcuts</em>. Shortcuts provide users with quick access to activities other than an app's main activity in the currently-active launcher. For example, an email app may publish the "compose new email" action, which will directly open the compose activity. The <pre><code>ShortcutInfo</code></pre> class contains information about each of the shortcuts themselves. <h3>Static Shortcuts and Dynamic Shortcuts</h3><pre><code>public class ShortcutManager</code></pre></section>	https://developer.android.com/reference/android/content/pm/ShortcutManager.html
Signature	A										<section class="prog__container">Opaque, immutable representation of a signing certificate associated with an application package.<pre><code>public class Signature</code></pre></section>	https://developer.android.com/reference/android/content/pm/Signature.html
AssetFileDescriptor.AutoCloseInputStream	A										<section class="prog__container">An InputStream you can create on a ParcelFileDescriptor, which will take care of calling <pre><code>ParcelFileDescritor.close()</code></pre> for you when the stream is closed.<pre><code>public static class AssetFileDescriptor.AutoCloseInputStream</code></pre></section>	https://developer.android.com/reference/android/content/res/AssetFileDescriptor.AutoCloseInputStream.html
AssetFileDescriptor.AutoCloseOutputStream	A										<section class="prog__container">An OutputStream you can create on a ParcelFileDescriptor, which will take care of calling <pre><code>ParcelFileDescritor.close()</code></pre> for you when the stream is closed.<pre><code>public static class AssetFileDescriptor.AutoCloseOutputStream</code></pre></section>	https://developer.android.com/reference/android/content/res/AssetFileDescriptor.AutoCloseOutputStream.html
AssetFileDescriptor	A										<section class="prog__container">File descriptor of an entry in the AssetManager. This provides your own opened FileDescriptor that can be used to read the data, as well as the offset and length of that entry's data in the file.<pre><code>public class AssetFileDescriptor</code></pre></section>	https://developer.android.com/reference/android/content/res/AssetFileDescriptor.html
AssetManager.AssetInputStream	A										<section class="prog__container"><pre><code>public final class AssetManager.AssetInputStream</code></pre></section>	https://developer.android.com/reference/android/content/res/AssetManager.AssetInputStream.html
AssetManager	A										<section class="prog__container">Provides access to an application's raw asset files; see <pre><code>Resources</code></pre> for the way most applications will want to retrieve their resource data. This class presents a lower-level API that allows you to open and read raw files that have been bundled with the application as a simple stream of bytes.<pre><code>public final class AssetManager</code></pre></section>	https://developer.android.com/reference/android/content/res/AssetManager.html
ColorStateList	A										<section class="prog__container">Lets you map <pre><code>View</code></pre> state sets to colors.<pre><code>public class ColorStateList</code></pre></section>	https://developer.android.com/reference/android/content/res/ColorStateList.html
Configuration	A										<section class="prog__container">This class describes all device configuration information that can impact the resources the application retrieves. This includes both user-specified configuration options (locale list and scaling) as well as device configurations (such as input modes, screen size and screen orientation).<pre><code>public final class Configuration</code></pre></section>	https://developer.android.com/reference/android/content/res/Configuration.html
ObbInfo	A										<section class="prog__container">Basic information about a Opaque Binary Blob (OBB) that reflects the info from the footer on the OBB file. This information may be manipulated by a developer with the <pre><code>obbtool</code></pre> program in the Android SDK.<pre><code>public class ObbInfo</code></pre></section>	https://developer.android.com/reference/android/content/res/ObbInfo.html
ObbScanner	A										<section class="prog__container">Class to scan Opaque Binary Blob (OBB) files. Use this to get information about an OBB file for use in a program via <pre><code>ObbInfo</code></pre>.<pre><code>public class ObbScanner</code></pre></section>	https://developer.android.com/reference/android/content/res/ObbScanner.html
android.content.res	A										<section class="prog__container">Contains classes for accessing application resources, such as raw asset files, colors, drawables, media or other other files in the package, plus important device configuration details (orientation, input types, etc.) that affect how the application may behave.</section>	https://developer.android.com/reference/android/content/res/package-summary.html
Resources	A										<section class="prog__container">Class for accessing an application's resources. This sits on top of the asset manager of the application (accessible through <pre><code>getAssets()</code></pre>) and provides a high-level API for getting typed data from the assets.<pre><code>public class Resources</code></pre></section>	https://developer.android.com/reference/android/content/res/Resources.html
Resources.NotFoundException	A										<section class="prog__container">This exception is thrown by the resource APIs when a requested resource can not be found.<pre><code>public static class Resources.NotFoundException</code></pre></section>	https://developer.android.com/reference/android/content/res/Resources.NotFoundException.html
Resources.Theme	A										<section class="prog__container">This class holds the current attribute values for a particular theme. In other words, a Theme is a set of values for resource attributes; these are used in conjunction with <pre><code>TypedArray</code></pre> to resolve the final value for an attribute.<pre><code>public final class Resources.Theme</code></pre></section>	https://developer.android.com/reference/android/content/res/Resources.Theme.html
TypedArray	A										<section class="prog__container">Container for an array of values that were retrieved with <pre><code>obtainStyledAttributes(AttributeSet, int[], int, int)</code></pre> or <pre><code>obtainAttributes(AttributeSet, int[])</code></pre>. Be sure to call <pre><code>recycle()</code></pre> when done with them. The indices used to retrieve values from this structure correspond to the positions of the attributes given to obtainStyledAttributes.<pre><code>public class TypedArray</code></pre></section>	https://developer.android.com/reference/android/content/res/TypedArray.html
XmlResourceParser	A										<section class="prog__container">The XML parsing interface returned for an XML resource. This is a standard XmlPullParser interface, as well as an extended AttributeSet interface and an additional close() method on this interface for the client to indicate when it is done reading the resource.<pre><code>public interface XmlResourceParser</code></pre></section>	https://developer.android.com/reference/android/content/res/XmlResourceParser.html
AbstractCursor	A										<section class="prog__container">This is an abstract cursor class that handles a lot of the common code that all cursors need to deal with and is provided for convenience reasons.<pre><code>public abstract class AbstractCursor</code></pre></section>	https://developer.android.com/reference/android/database/AbstractCursor.html
AbstractCursor.SelfContentObserver	A										<section class="prog__container">Cursors use this class to track changes others make to their URI.<pre><code>protected static class AbstractCursor.SelfContentObserver</code></pre></section>	https://developer.android.com/reference/android/database/AbstractCursor.SelfContentObserver.html
AbstractWindowedCursor	A										<section class="prog__container">A base class for Cursors that store their data in <pre><code>CursorWindow</code></pre>s.<pre><code>public abstract class AbstractWindowedCursor</code></pre></section>	https://developer.android.com/reference/android/database/AbstractWindowedCursor.html
CharArrayBuffer	A										<section class="prog__container">This is used for <pre><code>copyStringToBuffer(int, CharArrayBuffer)</code></pre><pre><code>public final class CharArrayBuffer</code></pre></section>	https://developer.android.com/reference/android/database/CharArrayBuffer.html
ContentObservable	A										<section class="prog__container">A specialization of <pre><code>Observable</code></pre> for <pre><code>ContentObserver</code></pre> that provides methods for sending notifications to a list of <pre><code>ContentObserver</code></pre> objects.<pre><code>public class ContentObservable</code></pre></section>	https://developer.android.com/reference/android/database/ContentObservable.html
ContentObserver	A										<section class="prog__container">Receives call backs for changes to content. Must be implemented by objects which are added to a <pre><code>ContentObservable</code></pre>.<pre><code>public abstract class ContentObserver</code></pre></section>	https://developer.android.com/reference/android/database/ContentObserver.html
CrossProcessCursor	A										<section class="prog__container">A cross process cursor is an extension of a <pre><code>Cursor</code></pre> that also supports usage from remote processes.<pre><code>public interface CrossProcessCursor</code></pre></section>	https://developer.android.com/reference/android/database/CrossProcessCursor.html
CrossProcessCursorWrapper	A										<section class="prog__container">Cursor wrapper that implements <pre><code>CrossProcessCursor</code></pre>.<pre><code>public class CrossProcessCursorWrapper</code></pre></section>	https://developer.android.com/reference/android/database/CrossProcessCursorWrapper.html
Cursor	A										<section class="prog__container">This interface provides random read-write access to the result set returned by a database query.<pre><code>public interface Cursor</code></pre></section>	https://developer.android.com/reference/android/database/Cursor.html
CursorIndexOutOfBoundsException	A										<section class="prog__container">An exception indicating that a cursor is out of bounds.<pre><code>public class CursorIndexOutOfBoundsException</code></pre></section>	https://developer.android.com/reference/android/database/CursorIndexOutOfBoundsException.html
CursorJoiner	A										<section class="prog__container">Does a join on two cursors using the specified columns. The cursors must already be sorted on each of the specified columns in ascending order. This joiner only supports the case where the tuple of key column values is unique.<pre><code>public final class CursorJoiner</code></pre></section>	https://developer.android.com/reference/android/database/CursorJoiner.html
CursorJoiner.Result	A										<section class="prog__container">The result of a call to next().<pre><code>public static final enum CursorJoiner.Result</code></pre></section>	https://developer.android.com/reference/android/database/CursorJoiner.Result.html
CursorWindow	A										<section class="prog__container">A buffer containing multiple cursor rows.<pre><code>public class CursorWindow</code></pre></section>	https://developer.android.com/reference/android/database/CursorWindow.html
CursorWrapper	A										<section class="prog__container">Wrapper class for Cursor that delegates all calls to the actual cursor object. The primary use for this class is to extend a cursor while overriding only a subset of its methods.<pre><code>public class CursorWrapper</code></pre></section>	https://developer.android.com/reference/android/database/CursorWrapper.html
DatabaseErrorHandler	A										<section class="prog__container">An interface to let apps define an action to take when database corruption is detected.<pre><code>public interface DatabaseErrorHandler</code></pre></section>	https://developer.android.com/reference/android/database/DatabaseErrorHandler.html
DatabaseUtils	A										<section class="prog__container">Static utility methods for dealing with databases and <pre><code>Cursor</code></pre>s.<pre><code>public class DatabaseUtils</code></pre></section>	https://developer.android.com/reference/android/database/DatabaseUtils.html
DatabaseUtils.InsertHelper	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 17.</strong><br/> Use <pre><code>SQLiteStatement</code></pre> instead.<pre><code>public static class DatabaseUtils.InsertHelper</code></pre></section>	https://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html
DataSetObservable	A										<section class="prog__container">A specialization of <pre><code>Observable</code></pre> for <pre><code>DataSetObserver</code></pre> that provides methods for sending notifications to a list of <pre><code>DataSetObserver</code></pre> objects.<pre><code>public class DataSetObservable</code></pre></section>	https://developer.android.com/reference/android/database/DataSetObservable.html
DataSetObserver	A										<section class="prog__container">Receives call backs when a data set has been changed, or made invalid. The typically data sets that are observed are <pre><code>Cursor</code></pre>s or <pre><code>Adapter</code></pre>s. DataSetObserver must be implemented by objects which are added to a DataSetObservable.<pre><code>public abstract class DataSetObserver</code></pre></section>	https://developer.android.com/reference/android/database/DataSetObserver.html
DefaultDatabaseErrorHandler	A										<section class="prog__container">Default class used to define the action to take when database corruption is reported by sqlite.<pre><code>public final class DefaultDatabaseErrorHandler</code></pre></section>	https://developer.android.com/reference/android/database/DefaultDatabaseErrorHandler.html
MatrixCursor	A										<section class="prog__container">A mutable cursor implementation backed by an array of <pre><code>Object</code></pre>s. Use <pre><code>newRow()</code></pre> to add rows. Automatically expands internal capacity as needed.<pre><code>public class MatrixCursor</code></pre></section>	https://developer.android.com/reference/android/database/MatrixCursor.html
MatrixCursor.RowBuilder	A										<section class="prog__container">Builds a row of values using either of these approaches: <ul> <li>Values can be added with explicit column ordering using <pre><code>add(Object)</code></pre>, which starts from the left-most column and adds one column value at a time. This follows the same ordering as the column names specified at cursor construction time. <li>Column and value pairs can be offered for possible inclusion using <pre><code>add(String, Object)</code></pre>. If the cursor includes the given column, the value will be set for that column, otherwise the value is ignored. This approach is useful when matching data to a custom projection. </li></li></ul> Undefined values are left as <pre><code>null</code></pre>.<pre><code>public class MatrixCursor.RowBuilder</code></pre></section>	https://developer.android.com/reference/android/database/MatrixCursor.RowBuilder.html
MergeCursor	A										<section class="prog__container">A convience class that lets you present an array of Cursors as a single linear Cursor. The schema of the cursors presented is entirely up to the creator of the MergeCursor, and may be different if that is desired. Calls to getColumns, getColumnIndex, etc will return the value for the row that the MergeCursor is currently pointing at.<pre><code>public class MergeCursor</code></pre></section>	https://developer.android.com/reference/android/database/MergeCursor.html
Observable	A										<section class="prog__container">Provides methods for registering or unregistering arbitrary observers in an <pre><code>ArrayList</code></pre>. This abstract class is intended to be subclassed and specialized to maintain a registry of observers of specific types and dispatch notifications to them.<pre><code>public abstract class Observable</code></pre></section>	https://developer.android.com/reference/android/database/Observable.html
android.database	A										<section class="prog__container"> If you need to manage data in a private database, use the android.database.sqlite classes. These classes are used to manage the Cursor object returned from a content provider query. Databases are usually created and opened with openOrCreateDatabase(String, int, SQLiteDatabase.CursorFactory) To make requests through content providers, you can use the content.ContentResolver class. All databases are stored on the device in /data/data/<package_name>/databases Interfaces CrossProcessCursor A cross process cursor is an extension of a Cursor that also supports usage from remote processes. Cursor This interface provides random read-write access to the result set returned by a database query. DatabaseErrorHandler An interface to let apps define an action to take when database corruption is detected. Classes AbstractCursor This is an abstract cursor class that handles a lot of the common code that all cursors need to deal with and is provided for convenience reasons. AbstractCursor.SelfContentObserver Cursors use this class to track changes others make to their URI. AbstractWindowedCursor A base class for Cursors that store their data in CursorWindows. CharArrayBuffer This is used for copyStringToBuffer(int, CharArrayBuffer) ContentObservable A specialization of Observable for ContentObserver that provides methods for sending notifications to a list of ContentObserver objects. ContentObserver Receives call backs for changes to content. CrossProcessCursorWrapper Cursor wrapper that implements CrossProcessCursor. CursorJoiner Does a join on two cursors using the specified columns. CursorWindow A buffer containing multiple cursor rows. CursorWrapper Wrapper class for Cursor that delegates all calls to the actual cursor object. DatabaseUtils Static utility methods for dealing with databases and Cursors. DatabaseUtils.InsertHelper This class was deprecated in API level 17. Use SQLiteStatement instead. DataSetObservable A specialization of Observable for DataSetObserver that provides methods for sending notifications to a list of DataSetObserver objects. DataSetObserver Receives call backs when a data set has been changed, or made invalid. DefaultDatabaseErrorHandler Default class used to define the action to take when database corruption is reported by sqlite. MatrixCursor A mutable cursor implementation backed by an array of Objects. MatrixCursor.RowBuilder Builds a row of values using either of these approaches: Values can be added with explicit column ordering using add(Object), which starts from the left-most column and adds one column value at a time. MergeCursor A convience class that lets you present an array of Cursors as a single linear Cursor. Observable<T> Provides methods for registering or unregistering arbitrary observers in an ArrayList. Enums CursorJoiner.Result The result of a call to next(). Exceptions CursorIndexOutOfBoundsException An exception indicating that a cursor is out of bounds. SQLException An exception that indicates there was an error with SQL parsing or execution. StaleDataException This exception is thrown when a Cursor contains stale data and must be requeried before being used again. </section>	https://developer.android.com/reference/android/database/package-summary.html
SQLException	A										<section class="prog__container">An exception that indicates there was an error with SQL parsing or execution.<pre><code>public class SQLException</code></pre></section>	https://developer.android.com/reference/android/database/SQLException.html
StaleDataException	A										<section class="prog__container">This exception is thrown when a Cursor contains stale data and must be requeried before being used again.<pre><code>public class StaleDataException</code></pre></section>	https://developer.android.com/reference/android/database/StaleDataException.html
android.database.sqlite	A										<section class="prog__container"> Applications use these classes to manage private databases. If creating a content provider, you will probably have to use these classes to create and manage your own database to store content. See Content Providers to learn the conventions for implementing a content provider. If you are working with data sent to you by a provider, you do not use these SQLite classes, but instead use the generic android.database classes. The Android SDK and Android emulators both include the sqlite3 command-line database tool. On your development machine, run the tool from the platform-tools/ folder of your SDK. On the emulator, run the tool with adb shell, for example, adb -e shell sqlite3. The version of SQLite depends on the version of Android. See the following table: Android APISQLite Version API 243.9 API 213.8 API 113.7 API 83.6 API 33.5 API 13.4 Some device manufacturers include different versions of SQLite on their devices. There are two ways to programmatically determine the version number. If available, use the sqlite3 tool, for example: adb -e shell sqlite3 --version. Create and query an in-memory database as shown in the following code sample: String query = "select sqlite_version() AS sqlite_version"; SQLiteDatabase db = SQLiteDatabase.openOrCreateDatabase(":memory:", null); Cursor cursor = db.rawQuery(query, null); String sqliteVersion = ""; if (cursor.moveToNext()) { sqliteVersion = cursor.getString(0); } Interfaces SQLiteCursorDriver A driver for SQLiteCursors that is used to create them and gets notified by the cursors it creates on significant events in their lifetimes. SQLiteDatabase.CursorFactory Used to allow returning sub-classes of Cursor when calling query. SQLiteTransactionListener A listener for transaction events. Classes SQLiteClosable An object created from a SQLiteDatabase that can be closed. SQLiteCursor A Cursor implementation that exposes results from a query on a SQLiteDatabase. SQLiteDatabase Exposes methods to manage a SQLite database. SQLiteOpenHelper A helper class to manage database creation and version management. SQLiteProgram A base class for compiled SQLite programs. SQLiteQuery Represents a query that reads the resulting rows into a SQLiteQuery. SQLiteQueryBuilder This is a convience class that helps build SQL queries to be sent to SQLiteDatabase objects. SQLiteStatement Represents a statement that can be executed against a database. Exceptions SQLiteAbortException An exception that indicates that the SQLite program was aborted. SQLiteAccessPermException This exception class is used when sqlite can't access the database file due to lack of permissions on the file. SQLiteBindOrColumnIndexOutOfRangeException Thrown if the the bind or column parameter index is out of range SQLiteBlobTooBigException SQLiteCantOpenDatabaseException SQLiteConstraintException An exception that indicates that an integrity constraint was violated. SQLiteDatabaseCorruptException An exception that indicates that the SQLite database file is corrupt. SQLiteDatabaseLockedException Thrown if the database engine was unable to acquire the database locks it needs to do its job. SQLiteDatatypeMismatchException SQLiteDiskIOException An exception that indicates that an IO error occured while accessing the SQLite database file. SQLiteDoneException An exception that indicates that the SQLite program is done. SQLiteException A SQLite exception that indicates there was an error with SQL parsing or execution. SQLiteFullException An exception that indicates that the SQLite database is full. SQLiteMisuseException This error can occur if the application creates a SQLiteStatement object and allows multiple threads in the application use it at the same time. SQLiteOutOfMemoryException SQLiteReadOnlyDatabaseException SQLiteTableLockedException </section>	https://developer.android.com/reference/android/database/sqlite/package-summary.html
SQLiteAbortException	A										<section class="prog__container">An exception that indicates that the SQLite program was aborted. This can happen either through a call to ABORT in a trigger, or as the result of using the ABORT conflict clause.<pre><code>public class SQLiteAbortException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteAbortException.html
SQLiteAccessPermException	A										<section class="prog__container">This exception class is used when sqlite can't access the database file due to lack of permissions on the file.<pre><code>public class SQLiteAccessPermException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteAccessPermException.html
SQLiteBindOrColumnIndexOutOfRangeException	A										<section class="prog__container">Thrown if the the bind or column parameter index is out of range<pre><code>public class SQLiteBindOrColumnIndexOutOfRangeException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteBindOrColumnIndexOutOfRangeException.html
SQLiteBlobTooBigException	A										<section class="prog__container"><pre><code>public class SQLiteBlobTooBigException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteBlobTooBigException.html
SQLiteCantOpenDatabaseException	A										<section class="prog__container"><pre><code>public class SQLiteCantOpenDatabaseException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteCantOpenDatabaseException.html
SQLiteClosable	A										<section class="prog__container">An object created from a SQLiteDatabase that can be closed. This class implements a primitive reference counting scheme for database objects.<pre><code>public abstract class SQLiteClosable</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteClosable.html
SQLiteConstraintException	A										<section class="prog__container">An exception that indicates that an integrity constraint was violated.<pre><code>public class SQLiteConstraintException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteConstraintException.html
SQLiteCursor	A										<section class="prog__container">A Cursor implementation that exposes results from a query on a <pre><code>SQLiteDatabase</code></pre>. SQLiteCursor is not internally synchronized so code using a SQLiteCursor from multiple threads should perform its own synchronization when using the SQLiteCursor.<pre><code>public class SQLiteCursor</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteCursor.html
SQLiteCursorDriver	A										<section class="prog__container">A driver for SQLiteCursors that is used to create them and gets notified by the cursors it creates on significant events in their lifetimes.<pre><code>public interface SQLiteCursorDriver</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteCursorDriver.html
SQLiteDatabase.CursorFactory	A										<section class="prog__container">Used to allow returning sub-classes of <pre><code>Cursor</code></pre> when calling query.<pre><code>public static interface SQLiteDatabase.CursorFactory</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase.CursorFactory.html
SQLiteDatabase	A										<section class="prog__container">Exposes methods to manage a SQLite database.<pre><code>public final class SQLiteDatabase</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase.html
SQLiteDatabaseCorruptException	A										<section class="prog__container">An exception that indicates that the SQLite database file is corrupt.<pre><code>public class SQLiteDatabaseCorruptException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDatabaseCorruptException.html
SQLiteDatabaseLockedException	A										<section class="prog__container">Thrown if the database engine was unable to acquire the database locks it needs to do its job. If the statement is a [COMMIT] or occurs outside of an explicit transaction, then you can retry the statement. If the statement is not a [COMMIT] and occurs within a explicit transaction then you should rollback the transaction before continuing.<pre><code>public class SQLiteDatabaseLockedException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDatabaseLockedException.html
SQLiteDatatypeMismatchException	A										<section class="prog__container"><pre><code>public class SQLiteDatatypeMismatchException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDatatypeMismatchException.html
SQLiteDiskIOException	A										<section class="prog__container">An exception that indicates that an IO error occured while accessing the SQLite database file.<pre><code>public class SQLiteDiskIOException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDiskIOException.html
SQLiteDoneException	A										<section class="prog__container">An exception that indicates that the SQLite program is done. Thrown when an operation that expects a row (such as <pre><code>simpleQueryForString()</code></pre> or <pre><code>simpleQueryForLong()</code></pre>) does not get one.<pre><code>public class SQLiteDoneException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDoneException.html
SQLiteException	A										<section class="prog__container">A SQLite exception that indicates there was an error with SQL parsing or execution.<pre><code>public class SQLiteException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteException.html
SQLiteFullException	A										<section class="prog__container">An exception that indicates that the SQLite database is full.<pre><code>public class SQLiteFullException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteFullException.html
SQLiteMisuseException	A										<section class="prog__container">This error can occur if the application creates a SQLiteStatement object and allows multiple threads in the application use it at the same time. Sqlite returns this error if bind and execute methods on this object occur at the same time from multiple threads, like so: thread # 1: in execute() method of the SQLiteStatement object while thread # 2: is in bind..() on the same object.<pre><code>public class SQLiteMisuseException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteMisuseException.html
SQLiteOpenHelper	A										<section class="prog__container">A helper class to manage database creation and version management.<pre><code>public abstract class SQLiteOpenHelper</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html
SQLiteOutOfMemoryException	A										<section class="prog__container"><pre><code>public class SQLiteOutOfMemoryException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteOutOfMemoryException.html
SQLiteProgram	A										<section class="prog__container">A base class for compiled SQLite programs.<pre><code>public abstract class SQLiteProgram</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteProgram.html
SQLiteQuery	A										<section class="prog__container">Represents a query that reads the resulting rows into a <pre><code>SQLiteQuery</code></pre>. This class is used by <pre><code>SQLiteCursor</code></pre> and isn't useful itself.<pre><code>public final class SQLiteQuery</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteQuery.html
SQLiteQueryBuilder	A										<section class="prog__container">This is a convience class that helps build SQL queries to be sent to <pre><code>SQLiteDatabase</code></pre> objects.<pre><code>public class SQLiteQueryBuilder</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteQueryBuilder.html
SQLiteReadOnlyDatabaseException	A										<section class="prog__container"><pre><code>public class SQLiteReadOnlyDatabaseException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteReadOnlyDatabaseException.html
SQLiteStatement	A										<section class="prog__container">Represents a statement that can be executed against a database. The statement cannot return multiple rows or columns, but single value (1 x 1) result sets are supported.<pre><code>public final class SQLiteStatement</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteStatement.html
SQLiteTableLockedException	A										<section class="prog__container"><pre><code>public class SQLiteTableLockedException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteTableLockedException.html
SQLiteTransactionListener	A										<section class="prog__container">A listener for transaction events.<pre><code>public interface SQLiteTransactionListener</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html
BaseObservable	A										<section class="prog__container">A convenience class that implements <pre><code>Observable</code></pre> interface and provides <pre><code>notifyPropertyChanged(int)</code></pre> and <pre><code>notifyChange()</code></pre> methods.<pre><code>public class BaseObservable</code></pre></section>	https://developer.android.com/reference/android/databinding/BaseObservable.html
Bindable	A										<section class="prog__container">The Bindable annotation should be applied to any getter accessor method of an <pre><code>Observable</code></pre> class. Bindable will generate a field in the BR class to identify the field that has changed.<pre><code>public abstract @interface Bindable</code></pre></section>	https://developer.android.com/reference/android/databinding/Bindable.html
BindingAdapter	A										<section class="prog__container">BindingAdapter is applied to methods that are used to manipulate how values with expressions are set to views. The simplest example is to have a public static method that takes the view and the value to set:<pre><code>public abstract @interface BindingAdapter</code></pre></section>	https://developer.android.com/reference/android/databinding/BindingAdapter.html
BindingConversion	A										<section class="prog__container">Annotate methods that are used to automatically convert from the expression type to the value used in the setter. The converter should take one parameter, the expression type, and the return value should be the target value type used in the setter. Converters are used whenever they can be applied and are not specific to any attribute.<pre><code>public abstract @interface BindingConversion</code></pre></section>	https://developer.android.com/reference/android/databinding/BindingConversion.html
BindingMethod	A										<section class="prog__container">Used within an <pre><code>BindingMethods</code></pre> annotation to describe a renaming of an attribute to the setter used to set that attribute. By default, an attribute attr will be associated with setter setAttr.<pre><code>public abstract @interface BindingMethod</code></pre></section>	https://developer.android.com/reference/android/databinding/BindingMethod.html
BindingMethods	A										<section class="prog__container">Used to enumerate attribute-to-setter renaming. By default, an attribute is associated with setAttribute setter. If there is a simple rename, enumerate them in an array of <pre><code>BindingMethod</code></pre> annotations in the value.<pre><code>public abstract @interface BindingMethods</code></pre></section>	https://developer.android.com/reference/android/databinding/BindingMethods.html
CallbackRegistry	A										<section class="prog__container">A utility for storing and notifying callbacks. This class supports reentrant modification of the callbacks during notification without adversely disrupting notifications. A common pattern for callbacks is to receive a notification and then remove themselves. This class handles this behavior with constant memory under most circumstances.<pre><code>public class CallbackRegistry</code></pre></section>	https://developer.android.com/reference/android/databinding/CallbackRegistry.html
CallbackRegistry.NotifierCallback	A										<section class="prog__container">Class used to notify events from CallbackRegistry.<pre><code>public static abstract class CallbackRegistry.NotifierCallback</code></pre></section>	https://developer.android.com/reference/android/databinding/CallbackRegistry.NotifierCallback.html
DataBindingComponent	A										<section class="prog__container">This interface is generated during compilation to contain getters for all used instance BindingAdapters. When a BindingAdapter is an instance method, an instance of the class implementing the method must be instantiated. This interface will be generated with a getter for each class with the name get* where * is simple class name of the declaring BindingAdapter class/interface. Name collisions will be resolved by adding a numeric suffix to the getter.<pre><code>public interface DataBindingComponent</code></pre></section>	https://developer.android.com/reference/android/databinding/DataBindingComponent.html
DataBindingUtil	A										<section class="prog__container">Utility class to create <pre><code>ViewDataBinding</code></pre> from layouts.<pre><code>public class DataBindingUtil</code></pre></section>	https://developer.android.com/reference/android/databinding/DataBindingUtil.html
InverseBindingAdapter	A										<section class="prog__container">InverseBindingAdapter is associated with a method used to retrieve the value for a View when setting values gathered from the View. This is similar to <pre><code>BindingAdapter</code></pre>s: <pre> &amp;commat;InverseBindingAdapter(attribute = "android:text", event = "android:textAttrChanged") public static String captureTextValue(TextView view, CharSequence originalValue) { CharSequence newValue = view.getText(); CharSequence oldValue = value.get(); if (oldValue == null) { value.set(newValue); } else if (!contentEquals(newValue, oldValue)) { value.set(newValue); } } </pre><pre><code>public abstract @interface InverseBindingAdapter</code></pre></section>	https://developer.android.com/reference/android/databinding/InverseBindingAdapter.html
InverseBindingListener	A										<section class="prog__container">A listener implemented by all two-way bindings to be notified when a triggering change happens. For example, when there is a two-way binding for android:text, an implementation of <pre><code>InverseBindingListener</code></pre> will be generated in the layout's binding class. <pre> private static class InverseListenerTextView implements InverseBindingListener { &amp;commat;Override public void onChange() { mObj.setTextValue(mTextView.getText()); } } </pre><pre><code>public interface InverseBindingListener</code></pre></section>	https://developer.android.com/reference/android/databinding/InverseBindingListener.html
InverseBindingMethod	A										<section class="prog__container">InverseBindingMethod is used to identify how to listen for changes to a View property and which getter method to call. InverseBindingMethod should be associated with any class as part of <pre><code>InverseBindingMethods</code></pre>.<pre><code>public abstract @interface InverseBindingMethod</code></pre></section>	https://developer.android.com/reference/android/databinding/InverseBindingMethod.html
InverseBindingMethods	A										<section class="prog__container">Used to enumerate attribute, getter, and event association. The value is an array of <pre><code>InverseBindingMethod</code></pre>s.<pre><code>public abstract @interface InverseBindingMethods</code></pre></section>	https://developer.android.com/reference/android/databinding/InverseBindingMethods.html
ListChangeRegistry	A										<section class="prog__container">Utility class for managing ObservableList callbacks.<pre><code>public class ListChangeRegistry</code></pre></section>	https://developer.android.com/reference/android/databinding/ListChangeRegistry.html
MapChangeRegistry	A										<section class="prog__container">Utility class for managing ObservableMap callbacks.<pre><code>public class MapChangeRegistry</code></pre></section>	https://developer.android.com/reference/android/databinding/MapChangeRegistry.html
Observable	A										<section class="prog__container">Observable classes provide a way in which data bound UI can be notified of changes. <pre><code>ObservableList</code></pre> and <pre><code>ObservableMap</code></pre> also provide the ability to notify when changes occur. ObservableField, ObservableParcelable, ObservableBoolean, ObservableByte, ObservableShort, ObservableInt, ObservableLong, ObservableFloat, and ObservableDouble provide a means by which properties may be notified without implementing Observable.<pre><code>public interface Observable</code></pre></section>	https://developer.android.com/reference/android/databinding/Observable.html
Observable.OnPropertyChangedCallback	A										<section class="prog__container">The callback that is called by Observable when an observable property has changed.<pre><code>public static abstract class Observable.OnPropertyChangedCallback</code></pre></section>	https://developer.android.com/reference/android/databinding/Observable.OnPropertyChangedCallback.html
ObservableArrayList	A										<section class="prog__container">An <pre><code>ObservableList</code></pre> implementation using ArrayList as an implementation.<pre><code>public class ObservableArrayList</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableArrayList.html
ObservableArrayMap	A										<section class="prog__container"><pre><code>public class ObservableArrayMap</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableArrayMap.html
ObservableBoolean	A										<section class="prog__container">An observable class that holds a primitive boolean.<pre><code>public class ObservableBoolean</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableBoolean.html
ObservableByte	A										<section class="prog__container">An observable class that holds a primitive byte.<pre><code>public class ObservableByte</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableByte.html
ObservableChar	A										<section class="prog__container">An observable class that holds a primitive char.<pre><code>public class ObservableChar</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableChar.html
ObservableDouble	A										<section class="prog__container">An observable class that holds a primitive double.<pre><code>public class ObservableDouble</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableDouble.html
ObservableField	A										<section class="prog__container">An object wrapper to make it observable.<pre><code>public class ObservableField</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableField.html
ObservableFloat	A										<section class="prog__container">An observable class that holds a primitive float.<pre><code>public class ObservableFloat</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableFloat.html
ObservableInt	A										<section class="prog__container">An observable class that holds a primitive int.<pre><code>public class ObservableInt</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableInt.html
ObservableList	A										<section class="prog__container">A <pre><code>List</code></pre> that notifies when changes are made. An ObservableList bound to the UI will keep the it up-to-date when changes occur.<pre><code>public interface ObservableList</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableList.html
ObservableList.OnListChangedCallback	A										<section class="prog__container">The callback that is called by ObservableList when the list has changed.<pre><code>public static abstract class ObservableList.OnListChangedCallback</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableList.OnListChangedCallback.html
ObservableLong	A										<section class="prog__container">An observable class that holds a primitive long.<pre><code>public class ObservableLong</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableLong.html
ObservableMap	A										<section class="prog__container">A <pre><code>Map</code></pre> that notifies when items change. This kind of Map may be data bound and have the UI update as the map changes.<pre><code>public interface ObservableMap</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableMap.html
ObservableMap.OnMapChangedCallback	A										<section class="prog__container">A callback receiving notifications when an ObservableMap changes.<pre><code>public static abstract class ObservableMap.OnMapChangedCallback</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableMap.OnMapChangedCallback.html
ObservableParcelable	A										<section class="prog__container">An observable class that holds a parcelable object.<pre><code>public class ObservableParcelable</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableParcelable.html
ObservableShort	A										<section class="prog__container">An observable class that holds a primitive short.<pre><code>public class ObservableShort</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableShort.html
OnRebindCallback	A										<section class="prog__container">Listener set on <pre><code>addOnRebindCallback(OnRebindCallback)</code></pre> that is called when bound values must be reevaluated in <pre><code>executePendingBindings()</code></pre>.<pre><code>public abstract class OnRebindCallback</code></pre></section>	https://developer.android.com/reference/android/databinding/OnRebindCallback.html
android.databinding	A										<section class="prog__container">Contains components used when developing applications with data binding.</section>	https://developer.android.com/reference/android/databinding/package-summary.html
PropertyChangeRegistry	A										<section class="prog__container">Utility class for managing Observable callbacks.<pre><code>public class PropertyChangeRegistry</code></pre></section>	https://developer.android.com/reference/android/databinding/PropertyChangeRegistry.html
ViewDataBinding	A										<section class="prog__container">Base class for generated data binding classes. If possible, the generated binding should be instantiated using one of its generated static bind or inflate methods. If the specific binding is unknown, <pre><code>bind(View)</code></pre> or <pre><code>inflate(LayoutInflater, int, ViewGroup, boolean)</code></pre> should be used.<pre><code>public abstract class ViewDataBinding</code></pre></section>	https://developer.android.com/reference/android/databinding/ViewDataBinding.html
ViewStubProxy	A										<section class="prog__container">This class represents a ViewStub before and after inflation. Before inflation, the ViewStub is accessible. After inflation, the root View of the inflated layout will be available. If the inflated layout has data binding, the ViewDataBinding for the inflated View is accessible.<pre><code>public class ViewStubProxy</code></pre></section>	https://developer.android.com/reference/android/databinding/ViewStubProxy.html
DrmConvertedStatus	A										<section class="prog__container">An entity class that wraps converted data, conversion status, and the offset for appending the header and body signature to the converted data. An instance of this class may be created two ways by the drm framework: a) a call to <pre><code>DrmManagerClient.convertData()</code></pre> and b) a call to <pre><code>DrmManagerClient.closeConvertSession()</code></pre>. An valid offset value is provided only from a success call to <pre><code>DrmManagerClient.closeConvertSession()</code></pre>.<pre><code>public class DrmConvertedStatus</code></pre></section>	https://developer.android.com/reference/android/drm/DrmConvertedStatus.html
DrmErrorEvent	A										<section class="prog__container">An entity class that is passed to the <pre><code>onError()</code></pre> callback.<pre><code>public class DrmErrorEvent</code></pre></section>	https://developer.android.com/reference/android/drm/DrmErrorEvent.html
DrmEvent	A										<section class="prog__container">A base class that is used to send asynchronous event information from the DRM framework.<pre><code>public class DrmEvent</code></pre></section>	https://developer.android.com/reference/android/drm/DrmEvent.html
DrmInfo	A										<section class="prog__container">An entity class that describes the information required to send transactions between a device and an online DRM server. The DRM framework achieves server registration, license acquisition, and any other server-related transactions by passing an instance of this class to <pre><code>processDrmInfo(DrmInfo)</code></pre>.<pre><code>public class DrmInfo</code></pre></section>	https://developer.android.com/reference/android/drm/DrmInfo.html
DrmInfoEvent	A										<section class="prog__container">An entity class that is passed to the <pre><code>onInfo()</code></pre> callback.<pre><code>public class DrmInfoEvent</code></pre></section>	https://developer.android.com/reference/android/drm/DrmInfoEvent.html
DrmInfoRequest	A										<section class="prog__container">An entity class that is used to pass information to an online DRM server. An instance of this class is passed to the <pre><code>acquireDrmInfo()</code></pre> method to get an instance of a <pre><code>DrmInfo</code></pre>.<pre><code>public class DrmInfoRequest</code></pre></section>	https://developer.android.com/reference/android/drm/DrmInfoRequest.html
DrmInfoStatus	A										<section class="prog__container">An entity class that wraps the result of communication between a device and an online DRM server. Specifically, when the <pre><code>DrmManagerClient.processDrmInfo()</code></pre> method is called, an instance of <pre><code>DrmInfoStatus</code></pre> is returned.<pre><code>public class DrmInfoStatus</code></pre></section>	https://developer.android.com/reference/android/drm/DrmInfoStatus.html
DrmManagerClient	A										<section class="prog__container">The main programming interface for the DRM framework. An application must instantiate this class to access DRM agents through the DRM framework.<pre><code>public class DrmManagerClient</code></pre></section>	https://developer.android.com/reference/android/drm/DrmManagerClient.html
DrmManagerClient.OnErrorListener	A										<section class="prog__container">Interface definition for a callback that receives information about DRM framework errors.<pre><code>public static interface DrmManagerClient.OnErrorListener</code></pre></section>	https://developer.android.com/reference/android/drm/DrmManagerClient.OnErrorListener.html
DrmManagerClient.OnEventListener	A										<section class="prog__container">Interface definition for a callback that receives information about DRM processing events.<pre><code>public static interface DrmManagerClient.OnEventListener</code></pre></section>	https://developer.android.com/reference/android/drm/DrmManagerClient.OnEventListener.html
DrmManagerClient.OnInfoListener	A										<section class="prog__container">Interface definition for a callback that receives status messages and warnings during registration and rights acquisition.<pre><code>public static interface DrmManagerClient.OnInfoListener</code></pre></section>	https://developer.android.com/reference/android/drm/DrmManagerClient.OnInfoListener.html
DrmRights	A										<section class="prog__container">An entity class that wraps the license information retrieved from the online DRM server.<pre><code>public class DrmRights</code></pre></section>	https://developer.android.com/reference/android/drm/DrmRights.html
DrmStore.Action	A										<section class="prog__container">Defines actions that can be performed on rights-protected content.<pre><code>public static class DrmStore.Action</code></pre></section>	https://developer.android.com/reference/android/drm/DrmStore.Action.html
DrmStore.ConstraintsColumns	A										<section class="prog__container">Interface definition for the columns that represent DRM constraints. <pre><code>DrmManagerClient.getConstraints()</code></pre> can be called by an application to find out the contraints on the <pre><code>actions</code></pre> that can be performed on right-protected content. The constants defined in this interface represent three most common types of constraints: count-based, date-based, and duration-based. Two or more constraints can be used at the same time to represent more sophisticated constraints. In addition, user-defined constraint, <pre><code>extended metadata</code></pre>, can be used if these three types of constraints are not sufficient.<pre><code>public static interface DrmStore.ConstraintsColumns</code></pre></section>	https://developer.android.com/reference/android/drm/DrmStore.ConstraintsColumns.html
DrmStore.DrmObjectType	A										<section class="prog__container">Defines DRM object types.<pre><code>public static class DrmStore.DrmObjectType</code></pre></section>	https://developer.android.com/reference/android/drm/DrmStore.DrmObjectType.html
DrmStore	A										<section class="prog__container">Defines constants that are used by the DRM framework.<pre><code>public class DrmStore</code></pre></section>	https://developer.android.com/reference/android/drm/DrmStore.html
DrmStore.Playback	A										<section class="prog__container">Defines playback states for content.<pre><code>public static class DrmStore.Playback</code></pre></section>	https://developer.android.com/reference/android/drm/DrmStore.Playback.html
DrmStore.RightsStatus	A										<section class="prog__container">Defines status notifications for digital rights.<pre><code>public static class DrmStore.RightsStatus</code></pre></section>	https://developer.android.com/reference/android/drm/DrmStore.RightsStatus.html
DrmSupportInfo	A										<section class="prog__container">An entity class that wraps the capability of each DRM plug-in (agent), such as the MIME type and file suffix the DRM plug-in can handle.<pre><code>public class DrmSupportInfo</code></pre></section>	https://developer.android.com/reference/android/drm/DrmSupportInfo.html
DrmUtils.ExtendedMetadataParser	A										<section class="prog__container">Utility that parses extended metadata embedded in DRM constraint information.<pre><code>public static class DrmUtils.ExtendedMetadataParser</code></pre></section>	https://developer.android.com/reference/android/drm/DrmUtils.ExtendedMetadataParser.html
DrmUtils	A										<section class="prog__container">A utility class that provides operations for parsing extended metadata embedded in DRM constraint information. If a DRM scheme has specific constraints beyond the standard constraints, the constraints will show up in the <pre><code>EXTENDED_METADATA</code></pre> key. You can use <pre><code>DrmUtils.ExtendedMetadataParser</code></pre> to iterate over those values.<pre><code>public class DrmUtils</code></pre></section>	https://developer.android.com/reference/android/drm/DrmUtils.html
android.drm	A										<section class="prog__container">Provides classes for managing DRM content and determining the capabilities of DRM plugins (agents). Common uses of the DRM API include:</section>	https://developer.android.com/reference/android/drm/package-summary.html
ProcessedData	A										<section class="prog__container">An entity class that wraps the result of a <pre><code>processDrmInfo()</code></pre> transaction between a device and a DRM server. In a license acquisition scenario this class holds the rights information in binary form.<pre><code>public class ProcessedData</code></pre></section>	https://developer.android.com/reference/android/drm/ProcessedData.html
Gesture	A										<section class="prog__container">A gesture is a hand-drawn shape on a touch screen. It can have one or multiple strokes. Each stroke is a sequence of timed points. A user-defined gesture can be recognized by a GestureLibrary.<pre><code>public class Gesture</code></pre></section>	https://developer.android.com/reference/android/gesture/Gesture.html
GestureLibraries	A										<section class="prog__container"><pre><code>public final class GestureLibraries</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureLibraries.html
GestureLibrary	A										<section class="prog__container"><pre><code>public abstract class GestureLibrary</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureLibrary.html
GestureOverlayView	A										<section class="prog__container">A transparent overlay for gesture input that can be placed on top of other widgets or contain other widgets.<pre><code>public class GestureOverlayView</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureOverlayView.html
GestureOverlayView.OnGestureListener	A										<section class="prog__container"><pre><code>public static interface GestureOverlayView.OnGestureListener</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureOverlayView.OnGestureListener.html
GestureOverlayView.OnGesturePerformedListener	A										<section class="prog__container"><pre><code>public static interface GestureOverlayView.OnGesturePerformedListener</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureOverlayView.OnGesturePerformedListener.html
GestureOverlayView.OnGesturingListener	A										<section class="prog__container"><pre><code>public static interface GestureOverlayView.OnGesturingListener</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureOverlayView.OnGesturingListener.html
GesturePoint	A										<section class="prog__container">A timed point of a gesture stroke. Multiple points form a stroke.<pre><code>public class GesturePoint</code></pre></section>	https://developer.android.com/reference/android/gesture/GesturePoint.html
GestureStore	A										<section class="prog__container">GestureLibrary maintains gesture examples and makes predictions on a new gesture<pre><code>public class GestureStore</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureStore.html
GestureStroke	A										<section class="prog__container">A gesture stroke started on a touch down and ended on a touch up. A stroke consists of a sequence of timed points. One or multiple strokes form a gesture.<pre><code>public class GestureStroke</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureStroke.html
GestureUtils	A										<section class="prog__container">Utility functions for gesture processing &amp; analysis, including methods for: <ul> <li>feature extraction (e.g., samplers and those for calculating bounding boxes and gesture path lengths); <li>geometric transformation (e.g., translation, rotation and scaling); <li>gesture similarity comparison (e.g., calculating Euclidean or Cosine distances between two gestures). </li></li></li></ul><pre><code>public final class GestureUtils</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureUtils.html
OrientedBoundingBox	A										<section class="prog__container">An oriented bounding box<pre><code>public class OrientedBoundingBox</code></pre></section>	https://developer.android.com/reference/android/gesture/OrientedBoundingBox.html
Prediction	A										<section class="prog__container"><pre><code>public class Prediction</code></pre></section>	https://developer.android.com/reference/android/gesture/Prediction.html
Bitmap.CompressFormat	A										<section class="prog__container">Specifies the known formats a bitmap can be compressed into<pre><code>public static final enum Bitmap.CompressFormat</code></pre></section>	https://developer.android.com/reference/android/graphics/Bitmap.CompressFormat.html
Bitmap.Config	A										<section class="prog__container">Possible bitmap configurations. A bitmap configuration describes how pixels are stored. This affects the quality (color depth) as well as the ability to display transparent/translucent colors.<pre><code>public static final enum Bitmap.Config</code></pre></section>	https://developer.android.com/reference/android/graphics/Bitmap.Config.html
Bitmap	A										<section class="prog__container"><pre><code>public final class Bitmap</code></pre></section>	https://developer.android.com/reference/android/graphics/Bitmap.html
BitmapFactory	A										<section class="prog__container">Creates Bitmap objects from various sources, including files, streams, and byte-arrays.<pre><code>public class BitmapFactory</code></pre></section>	https://developer.android.com/reference/android/graphics/BitmapFactory.html
BitmapFactory.Options	A										<section class="prog__container"><pre><code>public static class BitmapFactory.Options</code></pre></section>	https://developer.android.com/reference/android/graphics/BitmapFactory.Options.html
BitmapRegionDecoder	A										<section class="prog__container">BitmapRegionDecoder can be used to decode a rectangle region from an image. BitmapRegionDecoder is particularly useful when an original image is large and you only need parts of the image.<pre><code>public final class BitmapRegionDecoder</code></pre></section>	https://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html
BitmapShader	A										<section class="prog__container">Shader used to draw a bitmap as a texture. The bitmap can be repeated or mirrored by setting the tiling mode.<pre><code>public class BitmapShader</code></pre></section>	https://developer.android.com/reference/android/graphics/BitmapShader.html
BlurMaskFilter.Blur	A										<section class="prog__container"><pre><code>public static final enum BlurMaskFilter.Blur</code></pre></section>	https://developer.android.com/reference/android/graphics/BlurMaskFilter.Blur.html
BlurMaskFilter	A										<section class="prog__container">This takes a mask, and blurs its edge by the specified radius. Whether or or not to include the original mask, and whether the blur goes outside, inside, or straddles, the original mask's border, is controlled by the Blur enum.<pre><code>public class BlurMaskFilter</code></pre></section>	https://developer.android.com/reference/android/graphics/BlurMaskFilter.html
Camera	A										<section class="prog__container">A camera instance can be used to compute 3D transformations and generate a matrix that can be applied, for instance, on a <pre><code>Canvas</code></pre>.<pre><code>public class Camera</code></pre></section>	https://developer.android.com/reference/android/graphics/Camera.html
Canvas.EdgeType	A										<section class="prog__container"><pre><code>public static final enum Canvas.EdgeType</code></pre></section>	https://developer.android.com/reference/android/graphics/Canvas.EdgeType.html
Canvas	A										<section class="prog__container">The Canvas class holds the "draw" calls. To draw something, you need 4 basic components: A Bitmap to hold the pixels, a Canvas to host the draw calls (writing into the bitmap), a drawing primitive (e.g. Rect, Path, text, Bitmap), and a paint (to describe the colors and styles for the drawing). <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class Canvas</code></pre></section>	https://developer.android.com/reference/android/graphics/Canvas.html
Canvas.VertexMode	A										<section class="prog__container"><pre><code>public static final enum Canvas.VertexMode</code></pre></section>	https://developer.android.com/reference/android/graphics/Canvas.VertexMode.html
Color	A										<section class="prog__container">The Color class defines methods for creating and converting color ints. Colors are represented as packed ints, made up of 4 bytes: alpha, red, green, blue. The values are unpremultiplied, meaning any transparency is stored solely in the alpha component, and not in the color components. The components are stored as follows (alpha &lt;&lt; 24) | (red &lt;&lt; 16) | (green &lt;&lt; 8) | blue. Each component ranges between 0..255 with 0 meaning no contribution for that component, and 255 meaning 100% contribution. Thus opaque-black would be 0xFF000000 (100% opaque but no contributions from red, green, or blue), and opaque-white would be 0xFFFFFFFF<pre><code>public class Color</code></pre></section>	https://developer.android.com/reference/android/graphics/Color.html
ColorFilter	A										<section class="prog__container">A color filter can be used with a <pre><code>Paint</code></pre> to modify the color of each pixel drawn with that paint. This is an abstract class that should never be used directly.<pre><code>public class ColorFilter</code></pre></section>	https://developer.android.com/reference/android/graphics/ColorFilter.html
ColorMatrix	A										<section class="prog__container">4x5 matrix for transforming the color and alpha components of a Bitmap. The matrix can be passed as single array, and is treated as follows: <pre> [ a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t ]</pre><pre><code>public class ColorMatrix</code></pre></section>	https://developer.android.com/reference/android/graphics/ColorMatrix.html
ColorMatrixColorFilter	A										<section class="prog__container">A color filter that transforms colors through a 4x5 color matrix. This filter can be used to change the saturation of pixels, convert from YUV to RGB, etc.<pre><code>public class ColorMatrixColorFilter</code></pre></section>	https://developer.android.com/reference/android/graphics/ColorMatrixColorFilter.html
ComposePathEffect	A										<section class="prog__container"><pre><code>public class ComposePathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/ComposePathEffect.html
ComposeShader	A										<section class="prog__container">A subclass of shader that returns the composition of two other shaders, combined by an <pre><code>Xfermode</code></pre> subclass.<pre><code>public class ComposeShader</code></pre></section>	https://developer.android.com/reference/android/graphics/ComposeShader.html
CornerPathEffect	A										<section class="prog__container"><pre><code>public class CornerPathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/CornerPathEffect.html
DashPathEffect	A										<section class="prog__container"><pre><code>public class DashPathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/DashPathEffect.html
DiscretePathEffect	A										<section class="prog__container"><pre><code>public class DiscretePathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/DiscretePathEffect.html
DrawFilter	A										<section class="prog__container">A DrawFilter subclass can be installed in a Canvas. When it is present, it can modify the paint that is used to draw (temporarily). With this, a filter can disable/enable antialiasing, or change the color for everything this is drawn.<pre><code>public class DrawFilter</code></pre></section>	https://developer.android.com/reference/android/graphics/DrawFilter.html
EmbossMaskFilter	A										<section class="prog__container"><pre><code>public class EmbossMaskFilter</code></pre></section>	https://developer.android.com/reference/android/graphics/EmbossMaskFilter.html
ImageFormat	A										<section class="prog__container"><pre><code>public class ImageFormat</code></pre></section>	https://developer.android.com/reference/android/graphics/ImageFormat.html
Interpolator	A										<section class="prog__container"><pre><code>public class Interpolator</code></pre></section>	https://developer.android.com/reference/android/graphics/Interpolator.html
Interpolator.Result	A										<section class="prog__container"><pre><code>public static final enum Interpolator.Result</code></pre></section>	https://developer.android.com/reference/android/graphics/Interpolator.Result.html
LayerRasterizer	A										<section class="prog__container"><pre><code>public class LayerRasterizer</code></pre></section>	https://developer.android.com/reference/android/graphics/LayerRasterizer.html
LightingColorFilter	A										<section class="prog__container">A color filter that can be used to simulate simple lighting effects. A <pre><code>LightingColorFilter</code></pre> is defined by two parameters, one used to multiply the source color (called <pre><code>colorMultiply</code></pre>) and one used to add to the source color (called <pre><code>colorAdd</code></pre>). The alpha channel is left untouched by this color filter. Given a source color RGB, the resulting R'G'B' color is computed thusly: <pre> R' = R * colorMultiply.R + colorAdd.R G' = G * colorMultiply.G + colorAdd.G B' = B * colorMultiply.B + colorAdd.B </pre> The result is pinned to the <pre><code>[0..255]</code></pre> range for each channel.<pre><code>public class LightingColorFilter</code></pre></section>	https://developer.android.com/reference/android/graphics/LightingColorFilter.html
LinearGradient	A										<section class="prog__container"><pre><code>public class LinearGradient</code></pre></section>	https://developer.android.com/reference/android/graphics/LinearGradient.html
MaskFilter	A										<section class="prog__container">MaskFilter is the base class for object that perform transformations on an alpha-channel mask before drawing it. A subclass of MaskFilter may be installed into a Paint. Blur and emboss are implemented as subclasses of MaskFilter.<pre><code>public class MaskFilter</code></pre></section>	https://developer.android.com/reference/android/graphics/MaskFilter.html
Matrix	A										<section class="prog__container">The Matrix class holds a 3x3 matrix for transforming coordinates.<pre><code>public class Matrix</code></pre></section>	https://developer.android.com/reference/android/graphics/Matrix.html
Matrix.ScaleToFit	A										<section class="prog__container">Controlls how the src rect should align into the dst rect for setRectToRect().<pre><code>public static final enum Matrix.ScaleToFit</code></pre></section>	https://developer.android.com/reference/android/graphics/Matrix.ScaleToFit.html
Movie	A										<section class="prog__container"><pre><code>public class Movie</code></pre></section>	https://developer.android.com/reference/android/graphics/Movie.html
NinePatch	A										<section class="prog__container">The NinePatch class permits drawing a bitmap in nine or more sections. Essentially, it allows the creation of custom graphics that will scale the way that you define, when content added within the image exceeds the normal bounds of the graphic. For a thorough explanation of a NinePatch image, read the discussion in the 2D Graphics document.<pre><code>public class NinePatch</code></pre></section>	https://developer.android.com/reference/android/graphics/NinePatch.html
Outline	A										<section class="prog__container">Defines a simple shape, used for bounding graphical regions.<pre><code>public final class Outline</code></pre></section>	https://developer.android.com/reference/android/graphics/Outline.html
Paint.Align	A										<section class="prog__container">Align specifies how drawText aligns its text relative to the [x,y] coordinates. The default is LEFT.<pre><code>public static final enum Paint.Align</code></pre></section>	https://developer.android.com/reference/android/graphics/Paint.Align.html
Paint.Cap	A										<section class="prog__container">The Cap specifies the treatment for the beginning and ending of stroked lines and paths. The default is BUTT.<pre><code>public static final enum Paint.Cap</code></pre></section>	https://developer.android.com/reference/android/graphics/Paint.Cap.html
Paint.FontMetrics	A										<section class="prog__container">Class that describes the various metrics for a font at a given text size. Remember, Y values increase going down, so those values will be positive, and values that measure distances going up will be negative. This class is returned by getFontMetrics().<pre><code>public static class Paint.FontMetrics</code></pre></section>	https://developer.android.com/reference/android/graphics/Paint.FontMetrics.html
Paint.FontMetricsInt	A										<section class="prog__container">Convenience method for callers that want to have FontMetrics values as integers.<pre><code>public static class Paint.FontMetricsInt</code></pre></section>	https://developer.android.com/reference/android/graphics/Paint.FontMetricsInt.html
Paint	A										<section class="prog__container">The Paint class holds the style and color information about how to draw geometries, text and bitmaps.<pre><code>public class Paint</code></pre></section>	https://developer.android.com/reference/android/graphics/Paint.html
Paint.Join	A										<section class="prog__container">The Join specifies the treatment where lines and curve segments join on a stroked path. The default is MITER.<pre><code>public static final enum Paint.Join</code></pre></section>	https://developer.android.com/reference/android/graphics/Paint.Join.html
Paint.Style	A										<section class="prog__container">The Style specifies if the primitive being drawn is filled, stroked, or both (in the same color). The default is FILL.<pre><code>public static final enum Paint.Style</code></pre></section>	https://developer.android.com/reference/android/graphics/Paint.Style.html
PaintFlagsDrawFilter	A										<section class="prog__container"><pre><code>public class PaintFlagsDrawFilter</code></pre></section>	https://developer.android.com/reference/android/graphics/PaintFlagsDrawFilter.html
Path.Direction	A										<section class="prog__container">Specifies how closed shapes (e.g. rects, ovals) are oriented when they are added to a path.<pre><code>public static final enum Path.Direction</code></pre></section>	https://developer.android.com/reference/android/graphics/Path.Direction.html
Path.FillType	A										<section class="prog__container">Enum for the ways a path may be filled.<pre><code>public static final enum Path.FillType</code></pre></section>	https://developer.android.com/reference/android/graphics/Path.FillType.html
Path	A										<section class="prog__container">The Path class encapsulates compound (multiple contour) geometric paths consisting of straight line segments, quadratic curves, and cubic curves. It can be drawn with canvas.drawPath(path, paint), either filled or stroked (based on the paint's Style), or it can be used for clipping or to draw text on a path.<pre><code>public class Path</code></pre></section>	https://developer.android.com/reference/android/graphics/Path.html
Path.Op	A										<section class="prog__container">The logical operations that can be performed when combining two paths.<pre><code>public static final enum Path.Op</code></pre></section>	https://developer.android.com/reference/android/graphics/Path.Op.html
PathDashPathEffect	A										<section class="prog__container"><pre><code>public class PathDashPathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/PathDashPathEffect.html
PathDashPathEffect.Style	A										<section class="prog__container"><pre><code>public static final enum PathDashPathEffect.Style</code></pre></section>	https://developer.android.com/reference/android/graphics/PathDashPathEffect.Style.html
PathEffect	A										<section class="prog__container">PathEffect is the base class for objects in the Paint that affect the geometry of a drawing primitive before it is transformed by the canvas' matrix and drawn.<pre><code>public class PathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/PathEffect.html
PathMeasure	A										<section class="prog__container"><pre><code>public class PathMeasure</code></pre></section>	https://developer.android.com/reference/android/graphics/PathMeasure.html
Picture	A										<section class="prog__container">A Picture records drawing calls (via the canvas returned by beginRecording) and can then play them back into Canvas (via <pre><code>draw(Canvas)</code></pre> or <pre><code>drawPicture(Picture)</code></pre>).For most content (e.g. text, lines, rectangles), drawing a sequence from a picture can be faster than the equivalent API calls, since the picture performs its playback without incurring any method-call overhead. <p class="note"><strong>Note:</strong> Prior to API level 23 a picture cannot be replayed on a hardware accelerated canvas.<pre><code>public class Picture</code></pre></section>	https://developer.android.com/reference/android/graphics/Picture.html
PixelFormat	A										<section class="prog__container"><pre><code>public class PixelFormat</code></pre></section>	https://developer.android.com/reference/android/graphics/PixelFormat.html
Point	A										<section class="prog__container">Point holds two integer coordinates<pre><code>public class Point</code></pre></section>	https://developer.android.com/reference/android/graphics/Point.html
PointF	A										<section class="prog__container">PointF holds two float coordinates<pre><code>public class PointF</code></pre></section>	https://developer.android.com/reference/android/graphics/PointF.html
PorterDuff	A										<section class="prog__container"><pre><code>public class PorterDuff</code></pre></section>	https://developer.android.com/reference/android/graphics/PorterDuff.html
PorterDuff.Mode	A										<section class="prog__container"><pre><code>public static final enum PorterDuff.Mode</code></pre></section>	https://developer.android.com/reference/android/graphics/PorterDuff.Mode.html
PorterDuffColorFilter	A										<section class="prog__container">A color filter that can be used to tint the source pixels using a single color and a specific <pre><code>Porter-Duff composite mode</code></pre>.<pre><code>public class PorterDuffColorFilter</code></pre></section>	https://developer.android.com/reference/android/graphics/PorterDuffColorFilter.html
PorterDuffXfermode	A										<section class="prog__container"><pre><code>public class PorterDuffXfermode</code></pre></section>	https://developer.android.com/reference/android/graphics/PorterDuffXfermode.html
RadialGradient	A										<section class="prog__container"><pre><code>public class RadialGradient</code></pre></section>	https://developer.android.com/reference/android/graphics/RadialGradient.html
Rasterizer	A										<section class="prog__container"><pre><code>public class Rasterizer</code></pre></section>	https://developer.android.com/reference/android/graphics/Rasterizer.html
Rect	A										<section class="prog__container">Rect holds four integer coordinates for a rectangle. The rectangle is represented by the coordinates of its 4 edges (left, top, right bottom). These fields can be accessed directly. Use width() and height() to retrieve the rectangle's width and height. Note: most methods do not check to see that the coordinates are sorted correctly (i.e. left &lt;= right and top &lt;= bottom).<pre><code>public final class Rect</code></pre></section>	https://developer.android.com/reference/android/graphics/Rect.html
RectF	A										<section class="prog__container">RectF holds four float coordinates for a rectangle. The rectangle is represented by the coordinates of its 4 edges (left, top, right bottom). These fields can be accessed directly. Use width() and height() to retrieve the rectangle's width and height. Note: most methods do not check to see that the coordinates are sorted correctly (i.e. left &lt;= right and top &lt;= bottom).<pre><code>public class RectF</code></pre></section>	https://developer.android.com/reference/android/graphics/RectF.html
Region	A										<section class="prog__container"><pre><code>public class Region</code></pre></section>	https://developer.android.com/reference/android/graphics/Region.html
Region.Op	A										<section class="prog__container"><pre><code>public static final enum Region.Op</code></pre></section>	https://developer.android.com/reference/android/graphics/Region.Op.html
RegionIterator	A										<section class="prog__container"><pre><code>public class RegionIterator</code></pre></section>	https://developer.android.com/reference/android/graphics/RegionIterator.html
Shader	A										<section class="prog__container">Shader is the based class for objects that return horizontal spans of colors during drawing. A subclass of Shader is installed in a Paint calling paint.setShader(shader). After that any object (other than a bitmap) that is drawn with that paint will get its color(s) from the shader.<pre><code>public class Shader</code></pre></section>	https://developer.android.com/reference/android/graphics/Shader.html
Shader.TileMode	A										<section class="prog__container"><pre><code>public static final enum Shader.TileMode</code></pre></section>	https://developer.android.com/reference/android/graphics/Shader.TileMode.html
SumPathEffect	A										<section class="prog__container"><pre><code>public class SumPathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/SumPathEffect.html
SurfaceTexture	A										<section class="prog__container">Captures frames from an image stream as an OpenGL ES texture.<pre><code>public class SurfaceTexture</code></pre></section>	https://developer.android.com/reference/android/graphics/SurfaceTexture.html
SurfaceTexture.OnFrameAvailableListener	A										<section class="prog__container">Callback interface for being notified that a new stream frame is available.<pre><code>public static interface SurfaceTexture.OnFrameAvailableListener</code></pre></section>	https://developer.android.com/reference/android/graphics/SurfaceTexture.OnFrameAvailableListener.html
SurfaceTexture.OutOfResourcesException	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 19.</strong><br/> No longer thrown. <pre><code>Surface.OutOfResourcesException</code></pre> is used instead.<pre><code>public static class SurfaceTexture.OutOfResourcesException</code></pre></section>	https://developer.android.com/reference/android/graphics/SurfaceTexture.OutOfResourcesException.html
SweepGradient	A										<section class="prog__container"><pre><code>public class SweepGradient</code></pre></section>	https://developer.android.com/reference/android/graphics/SweepGradient.html
Typeface	A										<section class="prog__container">The Typeface class specifies the typeface and intrinsic style of a font. This is used in the paint, along with optionally Paint settings like textSize, textSkewX, textScaleX to specify how text appears when drawn (and measured).<pre><code>public class Typeface</code></pre></section>	https://developer.android.com/reference/android/graphics/Typeface.html
Xfermode	A										<section class="prog__container">Xfermode is the base class for objects that are called to implement custom "transfer-modes" in the drawing pipeline. The static function Create(Modes) can be called to return an instance of any of the predefined subclasses as specified in the Modes enum. When an Xfermode is assigned to an Paint, then objects drawn with that paint have the xfermode applied.<pre><code>public class Xfermode</code></pre></section>	https://developer.android.com/reference/android/graphics/Xfermode.html
YuvImage	A										<section class="prog__container">YuvImage contains YUV data and provides a method that compresses a region of the YUV data to a Jpeg. The YUV data should be provided as a single byte array irrespective of the number of image planes in it. Currently only ImageFormat.NV21 and ImageFormat.YUY2 are supported. To compress a rectangle region in the YUV data, users have to specify the region by left, top, width and height.<pre><code>public class YuvImage</code></pre></section>	https://developer.android.com/reference/android/graphics/YuvImage.html
Animatable	A										<section class="prog__container">Interface that drawables supporting animations should implement.<pre><code>public interface Animatable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/Animatable.html
Animatable2.AnimationCallback	A										<section class="prog__container"><pre><code>public static abstract class Animatable2.AnimationCallback</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/Animatable2.AnimationCallback.html
Animatable2	A										<section class="prog__container">Abstract class that drawables supporting animations and callbacks should extend.<pre><code>public interface Animatable2</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/Animatable2.html
AnimatedStateListDrawable	A										<section class="prog__container">Drawable containing a set of Drawable keyframes where the currently displayed keyframe is chosen based on the current state set. Animations between keyframes may optionally be defined using transition elements.<pre><code>public class AnimatedStateListDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/AnimatedStateListDrawable.html
AnimatedVectorDrawable	A										<section class="prog__container">This class animates properties of a <pre><code>VectorDrawable</code></pre> with animations defined using <pre><code>ObjectAnimator</code></pre> or <pre><code>AnimatorSet</code></pre>.<pre><code>public class AnimatedVectorDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/AnimatedVectorDrawable.html
AnimationDrawable	A										<section class="prog__container">An object used to create frame-by-frame animations, defined by a series of Drawable objects, which can be used as a View object's background.<pre><code>public class AnimationDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable.html
BitmapDrawable	A										<section class="prog__container">A Drawable that wraps a bitmap and can be tiled, stretched, or aligned. You can create a BitmapDrawable from a file path, an input stream, through XML inflation, or from a <pre><code>Bitmap</code></pre> object.<pre><code>public class BitmapDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html
ClipDrawable	A										<section class="prog__container">A Drawable that clips another Drawable based on this Drawable's current level value. You can control how much the child Drawable gets clipped in width and height based on the level, as well as a gravity to control where it is placed in its overall container. Most often used to implement things like progress bars, by increasing the drawable's level with <pre><code>setLevel()</code></pre>. <p class="note"><strong>Note:</strong> The drawable is clipped completely and not visible when the level is 0 and fully revealed when the level is 10,000.<pre><code>public class ClipDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/ClipDrawable.html
ColorDrawable	A										<section class="prog__container">A specialized Drawable that fills the Canvas with a specified color. Note that a ColorDrawable ignores the ColorFilter.<pre><code>public class ColorDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/ColorDrawable.html
Drawable.Callback	A										<section class="prog__container">Implement this interface if you want to create an animated drawable that extends <pre><code>Drawable</code></pre>. Upon retrieving a drawable, use <pre><code>setCallback(android.graphics.drawable.Drawable.Callback)</code></pre> to supply your implementation of the interface to the drawable; it uses this interface to schedule and execute animation changes.<pre><code>public static interface Drawable.Callback</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html
Drawable.ConstantState	A										<section class="prog__container">This abstract class is used by <pre><code>Drawable</code></pre>s to store shared constant state and data between Drawables. <pre><code>BitmapDrawable</code></pre>s created from the same resource will for instance share a unique bitmap stored in their ConstantState.<pre><code>public static abstract class Drawable.ConstantState</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/Drawable.ConstantState.html
Drawable	A										<section class="prog__container">A Drawable is a general abstraction for "something that can be drawn." Most often you will deal with Drawable as the type of resource retrieved for drawing things to the screen; the Drawable class provides a generic API for dealing with an underlying visual resource that may take a variety of forms. Unlike a <pre><code>View</code></pre>, a Drawable does not have any facility to receive events or otherwise interact with the user.<pre><code>public abstract class Drawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/Drawable.html
DrawableContainer.DrawableContainerState	A										<section class="prog__container">A ConstantState that can contain several <pre><code>Drawable</code></pre>s. This class was made public to enable testing, and its visibility may change in a future release.<pre><code>public static abstract class DrawableContainer.DrawableContainerState</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/DrawableContainer.DrawableContainerState.html
DrawableContainer	A										<section class="prog__container">A helper class that contains several <pre><code>Drawable</code></pre>s and selects which one to use. You can subclass it to create your own DrawableContainers or directly use one its child classes.<pre><code>public class DrawableContainer</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/DrawableContainer.html
DrawableWrapper	A										<section class="prog__container">Drawable container with only one child element.<pre><code>public abstract class DrawableWrapper</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/DrawableWrapper.html
GradientDrawable	A										<section class="prog__container">A Drawable with a color gradient for buttons, backgrounds, etc.<pre><code>public class GradientDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/GradientDrawable.html
GradientDrawable.Orientation	A										<section class="prog__container">Controls how the gradient is oriented relative to the drawable's bounds<pre><code>public static final enum GradientDrawable.Orientation</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/GradientDrawable.Orientation.html
Icon	A										<section class="prog__container">An umbrella container for several serializable graphics representations, including Bitmaps, compressed bitmap images (e.g. JPG or PNG), and drawable resources (including vectors). Much ink has been spilled on the best way to load images, and many clients may have different needs when it comes to threading and fetching. This class is therefore focused on encapsulation rather than behavior.<pre><code>public final class Icon</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/Icon.html
Icon.OnDrawableLoadedListener	A										<section class="prog__container">Implement this interface to receive a callback when <pre><code>loadDrawableAsync</code></pre> is finished and your Drawable is ready.<pre><code>public static interface Icon.OnDrawableLoadedListener</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/Icon.OnDrawableLoadedListener.html
InsetDrawable	A										<section class="prog__container">A Drawable that insets another Drawable by a specified distance. This is used when a View needs a background that is smaller than the View's actual bounds.<pre><code>public class InsetDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html
LayerDrawable	A										<section class="prog__container">A Drawable that manages an array of other Drawables. These are drawn in array order, so the element with the largest index will be drawn on top.<pre><code>public class LayerDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/LayerDrawable.html
LevelListDrawable	A										<section class="prog__container">A resource that manages a number of alternate Drawables, each assigned a maximum numerical value. Setting the level value of the object with <pre><code>setLevel(int)</code></pre> will load the image with the next greater or equal value assigned to its max attribute. A good example use of a LevelListDrawable would be a battery level indicator icon, with different images to indicate the current battery level.<pre><code>public class LevelListDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/LevelListDrawable.html
NinePatchDrawable	A										<section class="prog__container">A resizeable bitmap, with stretchable areas that you define. This type of image is defined in a .png file with a special format. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class NinePatchDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/NinePatchDrawable.html
android.graphics.drawable	A										<section class="prog__container">Provides classes to manage a variety of visual elements that are intended for display only, such as bitmaps and gradients. These elements are often used by widgets as background images or simply as indicators (for example, a volume level indicator).</section>	https://developer.android.com/reference/android/graphics/drawable/package-summary.html
PaintDrawable	A										<section class="prog__container">Drawable that draws its bounds in the given paint, with optional rounded corners.<pre><code>public class PaintDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/PaintDrawable.html
PictureDrawable	A										<section class="prog__container">Drawable subclass that wraps a Picture, allowing the picture to be used wherever a Drawable is supported.<pre><code>public class PictureDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/PictureDrawable.html
RippleDrawable	A										<section class="prog__container">Drawable that shows a ripple effect in response to state changes. The anchoring position of the ripple for a given state may be specified by calling <pre><code>setHotspot(float, float)</code></pre> with the corresponding state attribute identifier.<pre><code>public class RippleDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/RippleDrawable.html
RotateDrawable	A										<section class="prog__container"><pre><code>public class RotateDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html
ScaleDrawable	A										<section class="prog__container">A Drawable that changes the size of another Drawable based on its current level value. You can control how much the child Drawable changes in width and height based on the level, as well as a gravity to control where it is placed in its overall container. Most often used to implement things like progress bars.<pre><code>public class ScaleDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/ScaleDrawable.html
ShapeDrawable	A										<section class="prog__container">A Drawable object that draws primitive shapes. A ShapeDrawable takes a <pre><code>Shape</code></pre> object and manages its presence on the screen. If no Shape is given, then the ShapeDrawable will default to a <pre><code>RectShape</code></pre>.<pre><code>public class ShapeDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html
ShapeDrawable.ShaderFactory	A										<section class="prog__container">Base class defines a factory object that is called each time the drawable is resized (has a new width or height). Its resize() method returns a corresponding shader, or null. Implement this class if you'd like your ShapeDrawable to use a special <pre><code>Shader</code></pre>, such as a <pre><code>LinearGradient</code></pre>.<pre><code>public static abstract class ShapeDrawable.ShaderFactory</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.ShaderFactory.html
StateListDrawable	A										<section class="prog__container">Lets you assign a number of graphic images to a single Drawable and swap out the visible item by a string ID value.<pre><code>public class StateListDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/StateListDrawable.html
TransitionDrawable	A										<section class="prog__container">An extension of LayerDrawables that is intended to cross-fade between the first and second layer. To start the transition, call <pre><code>startTransition(int)</code></pre>. To display just the first layer, call <pre><code>resetTransition()</code></pre>.<pre><code>public class TransitionDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/TransitionDrawable.html
VectorDrawable	A										<section class="prog__container">This lets you create a drawable based on an XML vector graphic.<pre><code>public class VectorDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/VectorDrawable.html
ArcShape	A										<section class="prog__container">Creates an arc shape. The arc shape starts at a specified angle and sweeps clockwise, drawing slices of pie. The arc can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass the ArcShape to a <pre><code>ShapeDrawable</code></pre>.<pre><code>public class ArcShape</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/shapes/ArcShape.html
OvalShape	A										<section class="prog__container">Defines an oval shape. The oval can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass the OvalShape to a <pre><code>ShapeDrawable</code></pre>.<pre><code>public class OvalShape</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/shapes/OvalShape.html
PathShape	A										<section class="prog__container">Creates geometric paths, utilizing the <pre><code>Path</code></pre> class. The path can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass the PathShape to a <pre><code>ShapeDrawable</code></pre>.<pre><code>public class PathShape</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/shapes/PathShape.html
RectShape	A										<section class="prog__container">Defines a rectangle shape. The rectangle can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass the RectShape to a <pre><code>ShapeDrawable</code></pre>.<pre><code>public class RectShape</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/shapes/RectShape.html
RoundRectShape	A										<section class="prog__container">Creates a rounded-corner rectangle. Optionally, an inset (rounded) rectangle can be included (to make a sort of "O" shape). The rounded rectangle can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass the RoundRectShape to a <pre><code>ShapeDrawable</code></pre>.<pre><code>public class RoundRectShape</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/shapes/RoundRectShape.html
Shape	A										<section class="prog__container">Defines a generic graphical "shape." Any Shape can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass it to a <pre><code>ShapeDrawable</code></pre>.<pre><code>public abstract class Shape</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/shapes/Shape.html
PdfDocument	A										<section class="prog__container"><pre><code>public class PdfDocument</code></pre></section>	https://developer.android.com/reference/android/graphics/pdf/PdfDocument.html
PdfDocument.Page	A										<section class="prog__container">This class represents a PDF document page. It has associated a canvas on which you can draw content and is acquired by a call to <pre><code>getCanvas()</code></pre>. It also has associated a <pre><code>PdfDocument.PageInfo</code></pre> instance that describes its attributes. Also a page has<pre><code>public static final class PdfDocument.Page</code></pre></section>	https://developer.android.com/reference/android/graphics/pdf/PdfDocument.Page.html
PdfDocument.PageInfo.Builder	A										<section class="prog__container">Builder for creating a <pre><code>PdfDocument.PageInfo</code></pre>.<pre><code>public static final class PdfDocument.PageInfo.Builder</code></pre></section>	https://developer.android.com/reference/android/graphics/pdf/PdfDocument.PageInfo.Builder.html
PdfDocument.PageInfo	A										<section class="prog__container">This class represents meta-data that describes a PDF <pre><code>PdfDocument.Page</code></pre>.<pre><code>public static final class PdfDocument.PageInfo</code></pre></section>	https://developer.android.com/reference/android/graphics/pdf/PdfDocument.PageInfo.html
PdfRenderer	A										<section class="prog__container"><pre><code>public final class PdfRenderer</code></pre></section>	https://developer.android.com/reference/android/graphics/pdf/PdfRenderer.html
PdfRenderer.Page	A										<section class="prog__container">This class represents a PDF document page for rendering.<pre><code>public final class PdfRenderer.Page</code></pre></section>	https://developer.android.com/reference/android/graphics/pdf/PdfRenderer.Page.html
Camera.Area	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public static class Camera.Area</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.Area.html
Camera.AutoFocusCallback	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public static interface Camera.AutoFocusCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.AutoFocusCallback.html
Camera.AutoFocusMoveCallback	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public static interface Camera.AutoFocusMoveCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.AutoFocusMoveCallback.html
Camera.CameraInfo	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public static class Camera.CameraInfo</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.CameraInfo.html
Camera.ErrorCallback	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public static interface Camera.ErrorCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.ErrorCallback.html
Camera.Face	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public static class Camera.Face</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.Face.html
Camera.FaceDetectionListener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public static interface Camera.FaceDetectionListener</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.FaceDetectionListener.html
Camera	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public class Camera</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.html
Camera.OnZoomChangeListener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public static interface Camera.OnZoomChangeListener</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.OnZoomChangeListener.html
Camera.Parameters	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public class Camera.Parameters</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.Parameters.html
Camera.PictureCallback	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public static interface Camera.PictureCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.PictureCallback.html
Camera.PreviewCallback	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public static interface Camera.PreviewCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.PreviewCallback.html
Camera.ShutterCallback	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public static interface Camera.ShutterCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.ShutterCallback.html
Camera.Size	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <pre><code>android.hardware.camera2</code></pre> API for new applications.<pre><code>public class Camera.Size</code></pre></section>	https://developer.android.com/reference/android/hardware/Camera.Size.html
ConsumerIrManager.CarrierFrequencyRange	A										<section class="prog__container">Represents a range of carrier frequencies (inclusive) on which the infrared transmitter can transmit<pre><code>public final class ConsumerIrManager.CarrierFrequencyRange</code></pre></section>	https://developer.android.com/reference/android/hardware/ConsumerIrManager.CarrierFrequencyRange.html
ConsumerIrManager	A										<section class="prog__container">Class that operates consumer infrared on the device.<pre><code>public final class ConsumerIrManager</code></pre></section>	https://developer.android.com/reference/android/hardware/ConsumerIrManager.html
GeomagneticField	A										<section class="prog__container">Estimates magnetic field at a given point on Earth, and in particular, to compute the magnetic declination from true north.<pre><code>public class GeomagneticField</code></pre></section>	https://developer.android.com/reference/android/hardware/GeomagneticField.html
android.hardware	A										<section class="prog__container">Provides support for hardware features, such as the camera and other sensors. Be aware that not all Android-powered devices support all hardware features, so you should declare hardware that your application requires using the <uses-feature> manifest element.</section>	https://developer.android.com/reference/android/hardware/package-summary.html
Sensor	A										<section class="prog__container">Class representing a sensor. Use <pre><code>getSensorList(int)</code></pre> to get the list of available Sensors.<pre><code>public final class Sensor</code></pre></section>	https://developer.android.com/reference/android/hardware/Sensor.html
SensorAdditionalInfo	A										<section class="prog__container">This class represents a <pre><code>Sensor</code></pre> additional information frame, which is reported through listener callback <pre><code>onSensorAdditionalInfo</code></pre>.<pre><code>public class SensorAdditionalInfo</code></pre></section>	https://developer.android.com/reference/android/hardware/SensorAdditionalInfo.html
SensorEvent	A										<section class="prog__container">This class represents a <pre><code>Sensor</code></pre> event and holds information such as the sensor's type, the time-stamp, accuracy and of course the sensor's <pre><code>data</code></pre>.<pre><code>public class SensorEvent</code></pre></section>	https://developer.android.com/reference/android/hardware/SensorEvent.html
SensorEventCallback	A										<section class="prog__container">Used for receiving sensor additional information frames.<pre><code>public abstract class SensorEventCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/SensorEventCallback.html
SensorEventListener	A										<section class="prog__container">Used for receiving notifications from the SensorManager when there is new sensor data.<pre><code>public interface SensorEventListener</code></pre></section>	https://developer.android.com/reference/android/hardware/SensorEventListener.html
SensorEventListener2	A										<section class="prog__container">Used for receiving a notification when a flush() has been successfully completed.<pre><code>public interface SensorEventListener2</code></pre></section>	https://developer.android.com/reference/android/hardware/SensorEventListener2.html
SensorListener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 3.</strong><br/> Use <pre><code>SensorEventListener</code></pre> instead.<pre><code>public interface SensorListener</code></pre></section>	https://developer.android.com/reference/android/hardware/SensorListener.html
SensorManager.DynamicSensorCallback	A										<section class="prog__container">Used for receiving notifications from the SensorManager when dynamic sensors are connected or disconnected.<pre><code>public static abstract class SensorManager.DynamicSensorCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/SensorManager.DynamicSensorCallback.html
SensorManager	A										<section class="prog__container"><pre><code>public abstract class SensorManager</code></pre></section>	https://developer.android.com/reference/android/hardware/SensorManager.html
TriggerEvent	A										<section class="prog__container">This class represents a Trigger Event - the event associated with a Trigger Sensor. When the sensor detects a trigger event condition, such as significant motion in the case of the <pre><code>TYPE_SIGNIFICANT_MOTION</code></pre>, the <pre><code>TriggerEventListener</code></pre> is called with the TriggerEvent. The sensor is automatically canceled after the trigger.<pre><code>public final class TriggerEvent</code></pre></section>	https://developer.android.com/reference/android/hardware/TriggerEvent.html
TriggerEventListener	A										<section class="prog__container">This class is the listener used to handle Trigger Sensors. Trigger Sensors are sensors that trigger an event and are automatically disabled. <pre><code>TYPE_SIGNIFICANT_MOTION</code></pre> is one such example.<pre><code>public abstract class TriggerEventListener</code></pre></section>	https://developer.android.com/reference/android/hardware/TriggerEventListener.html
CameraAccessException	A										<section class="prog__container"><pre><code>public class CameraAccessException</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraAccessException.html
CameraCaptureSession.CaptureCallback	A										<section class="prog__container"><pre><code>public static abstract class CameraCaptureSession.CaptureCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.CaptureCallback.html
CameraCaptureSession	A										<section class="prog__container">A configured capture session for a <pre><code>CameraDevice</code></pre>, used for capturing images from the camera or reprocessing images captured from the camera in the same session previously.<pre><code>public abstract class CameraCaptureSession</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html
CameraCaptureSession.StateCallback	A										<section class="prog__container">A callback object for receiving updates about the state of a camera capture session.<pre><code>public static abstract class CameraCaptureSession.StateCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.StateCallback.html
CameraCharacteristics	A										<section class="prog__container"><pre><code>public final class CameraCharacteristics</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html
CameraCharacteristics.Key	A										<section class="prog__container">A <pre><code>Key</code></pre> is used to do camera characteristics field lookups with <pre><code>get(CameraCharacteristics.Key<t>)</t></code></pre>.<pre><code>public static final class CameraCharacteristics.Key</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.Key.html
CameraConstrainedHighSpeedCaptureSession	A										<section class="prog__container">A constrained high speed capture session for a <pre><code>CameraDevice</code></pre>, used for capturing high speed images from the <pre><code>CameraDevice</code></pre> for high speed video recording use case.<pre><code>public abstract class CameraConstrainedHighSpeedCaptureSession</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraConstrainedHighSpeedCaptureSession.html
CameraDevice	A										<section class="prog__container"><pre><code>public abstract class CameraDevice</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraDevice.html
CameraDevice.StateCallback	A										<section class="prog__container">A callback objects for receiving updates about the state of a camera device.<pre><code>public static abstract class CameraDevice.StateCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraDevice.StateCallback.html
CameraManager.AvailabilityCallback	A										<section class="prog__container">A callback for camera devices becoming available or unavailable to open.<pre><code>public static abstract class CameraManager.AvailabilityCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraManager.AvailabilityCallback.html
CameraManager	A										<section class="prog__container"><pre><code>public final class CameraManager</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraManager.html
CameraManager.TorchCallback	A										<section class="prog__container">A callback for camera flash torch modes becoming unavailable, disabled, or enabled.<pre><code>public static abstract class CameraManager.TorchCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraManager.TorchCallback.html
CameraMetadata	A										<section class="prog__container">The base class for camera controls and information.<pre><code>public abstract class CameraMetadata</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraMetadata.html
CaptureFailure	A										<section class="prog__container">A report of failed capture for a single image capture from the image sensor.<pre><code>public class CaptureFailure</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CaptureFailure.html
CaptureRequest.Builder	A										<section class="prog__container">A builder for capture requests.<pre><code>public static final class CaptureRequest.Builder</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.Builder.html
CaptureRequest	A										<section class="prog__container"><pre><code>public final class CaptureRequest</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html
CaptureRequest.Key	A										<section class="prog__container">A <pre><code>Key</code></pre> is used to do capture request field lookups with <pre><code>get(CaptureResult.Key<t>)</t></code></pre> or to set fields with <pre><code>set(Key, Object)</code></pre>.<pre><code>public static final class CaptureRequest.Key</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.Key.html
CaptureResult	A										<section class="prog__container"><pre><code>public class CaptureResult</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CaptureResult.html
CaptureResult.Key	A										<section class="prog__container">A <pre><code>Key</code></pre> is used to do capture result field lookups with <pre><code>get(CaptureResult.Key<t>)</t></code></pre>.<pre><code>public static final class CaptureResult.Key</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CaptureResult.Key.html
DngCreator	A										<section class="prog__container">The <pre><code>DngCreator</code></pre> class provides functions to write raw pixel data as a DNG file.<pre><code>public final class DngCreator</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/DngCreator.html
android.hardware.camera2	A										<section class="prog__container">The android.hardware.camera2 package provides an interface to individual camera devices connected to an Android device. It replaces the deprecated Camera class.</section>	https://developer.android.com/reference/android/hardware/camera2/package-summary.html
TotalCaptureResult	A										<section class="prog__container"><pre><code>public final class TotalCaptureResult</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/TotalCaptureResult.html
BlackLevelPattern	A										<section class="prog__container">Immutable class to store a 4-element vector of integers corresponding to a 2x2 pattern of color channel offsets used for the black level offsets of each color channel.<pre><code>public final class BlackLevelPattern</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/params/BlackLevelPattern.html
ColorSpaceTransform	A										<section class="prog__container">Immutable class for describing a 3x3 matrix of <pre><code>Rational</code></pre> values in row-major order.<pre><code>public final class ColorSpaceTransform</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/params/ColorSpaceTransform.html
Face	A										<section class="prog__container">Describes a face detected in an image.<pre><code>public final class Face</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/params/Face.html
InputConfiguration	A										<section class="prog__container">Immutable class to store an input configuration that is used to create a reprocessable capture session.<pre><code>public final class InputConfiguration</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/params/InputConfiguration.html
LensShadingMap	A										<section class="prog__container">Immutable class for describing a <pre><code>4 x N x M</code></pre> lens shading map of floats.<pre><code>public final class LensShadingMap</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/params/LensShadingMap.html
MeteringRectangle	A										<section class="prog__container">An immutable class to represent a rectangle <pre><code>(x, y, width, height)</code></pre> with an additional weight component.<pre><code>public final class MeteringRectangle</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/params/MeteringRectangle.html
OutputConfiguration	A										<section class="prog__container">A class for describing camera output, which contains a <pre><code>Surface</code></pre> and its specific configuration for creating capture session.<pre><code>public final class OutputConfiguration</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/params/OutputConfiguration.html
RggbChannelVector	A										<section class="prog__container">Immutable class to store a 4-element vector of floats indexable by a bayer RAW 2x2 pixel block.<pre><code>public final class RggbChannelVector</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/params/RggbChannelVector.html
StreamConfigurationMap	A										<section class="prog__container">Immutable class to store the available stream <pre><code>configurations</code></pre> to set up <pre><code>Surfaces</code></pre> for creating a <pre><code>capture session</code></pre> with <pre><code>createCaptureSession(List<surface>, CameraCaptureSession.StateCallback, Handler)</surface></code></pre>. <!-- TODO: link to input stream configuration --><pre><code>public final class StreamConfigurationMap</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap.html
TonemapCurve	A										<section class="prog__container">Immutable class for describing a <pre><code>2 x M x 3</code></pre> tonemap curve of floats.<pre><code>public final class TonemapCurve</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/params/TonemapCurve.html
DisplayManager.DisplayListener	A										<section class="prog__container">Listens for changes in available display devices.<pre><code>public static interface DisplayManager.DisplayListener</code></pre></section>	https://developer.android.com/reference/android/hardware/display/DisplayManager.DisplayListener.html
DisplayManager	A										<section class="prog__container">Manages the properties of attached displays.<pre><code>public final class DisplayManager</code></pre></section>	https://developer.android.com/reference/android/hardware/display/DisplayManager.html
VirtualDisplay.Callback	A										<section class="prog__container">Interface for receiving information about a <pre><code>VirtualDisplay</code></pre>'s state changes.<pre><code>public static abstract class VirtualDisplay.Callback</code></pre></section>	https://developer.android.com/reference/android/hardware/display/VirtualDisplay.Callback.html
VirtualDisplay	A										<section class="prog__container">Represents a virtual display. The content of a virtual display is rendered to a <pre><code>Surface</code></pre> that you must provide to <pre><code>createVirtualDisplay()</code></pre>.<pre><code>public final class VirtualDisplay</code></pre></section>	https://developer.android.com/reference/android/hardware/display/VirtualDisplay.html
FingerprintManager.AuthenticationCallback	A										<section class="prog__container">Callback structure provided to <pre><code>authenticate(CryptoObject, CancellationSignal, int, AuthenticationCallback, Handler)</code></pre>. Users of <pre><code>authenticate(CryptoObject, CancellationSignal, int, AuthenticationCallback, Handler)</code></pre> must provide an implementation of this for listening to fingerprint events.<pre><code>public static abstract class FingerprintManager.AuthenticationCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.AuthenticationCallback.html
FingerprintManager.AuthenticationResult	A										<section class="prog__container">Container for callback data from <pre><code>authenticate(CryptoObject, CancellationSignal, int, AuthenticationCallback, Handler)</code></pre>.<pre><code>public static class FingerprintManager.AuthenticationResult</code></pre></section>	https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.AuthenticationResult.html
FingerprintManager.CryptoObject	A										<section class="prog__container">A wrapper class for the crypto objects supported by FingerprintManager. Currently the framework supports <pre><code>Signature</code></pre>, <pre><code>Cipher</code></pre> and <pre><code>Mac</code></pre> objects.<pre><code>public static final class FingerprintManager.CryptoObject</code></pre></section>	https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.CryptoObject.html
FingerprintManager	A										<section class="prog__container">A class that coordinates access to the fingerprint hardware.<pre><code>public class FingerprintManager</code></pre></section>	https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.html
InputManager	A										<section class="prog__container">Provides information about input devices and available key layouts.<pre><code>public final class InputManager</code></pre></section>	https://developer.android.com/reference/android/hardware/input/InputManager.html
InputManager.InputDeviceListener	A										<section class="prog__container">Listens for changes in input devices.<pre><code>public static interface InputManager.InputDeviceListener</code></pre></section>	https://developer.android.com/reference/android/hardware/input/InputManager.InputDeviceListener.html
android.hardware.usb	A										<section class="prog__container">Provides support to communicate with USB hardware peripherals that are connected to Android-powered devices.</section>	https://developer.android.com/reference/android/hardware/usb/package-summary.html
UsbAccessory	A										<section class="prog__container">A class representing a USB accessory, which is an external hardware component that communicates with an android application over USB. The accessory is the USB host and android the device side of the USB connection.<pre><code>public class UsbAccessory</code></pre></section>	https://developer.android.com/reference/android/hardware/usb/UsbAccessory.html
UsbConfiguration	A										<section class="prog__container">A class representing a configuration on a <pre><code>UsbDevice</code></pre>. A USB configuration can have one or more interfaces, each one providing a different piece of functionality, separate from the other interfaces. An interface will have one or more <pre><code>UsbEndpoint</code></pre>s, which are the channels by which the host transfers data with the device. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class UsbConfiguration</code></pre></section>	https://developer.android.com/reference/android/hardware/usb/UsbConfiguration.html
UsbConstants	A										<section class="prog__container">Contains constants for the USB protocol. These constants correspond to definitions in linux/usb/ch9.h in the linux kernel.<pre><code>public final class UsbConstants</code></pre></section>	https://developer.android.com/reference/android/hardware/usb/UsbConstants.html
UsbDevice	A										<section class="prog__container">This class represents a USB device attached to the android device with the android device acting as the USB host. Each device contains one or more <pre><code>UsbInterface</code></pre>s, each of which contains a number of <pre><code>UsbEndpoint</code></pre>s (the channels via which data is transmitted over USB).<pre><code>public class UsbDevice</code></pre></section>	https://developer.android.com/reference/android/hardware/usb/UsbDevice.html
UsbDeviceConnection	A										<section class="prog__container">This class is used for sending and receiving data and control messages to a USB device. Instances of this class are created by <pre><code>openDevice(UsbDevice)</code></pre>.<pre><code>public class UsbDeviceConnection</code></pre></section>	https://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html
UsbEndpoint	A										<section class="prog__container">A class representing an endpoint on a <pre><code>UsbInterface</code></pre>. Endpoints are the channels for sending and receiving data over USB. Typically bulk endpoints are used for sending non-trivial amounts of data. Interrupt endpoints are used for sending small amounts of data, typically events, separately from the main data streams. The endpoint zero is a special endpoint for control messages sent from the host to device. Isochronous endpoints are currently unsupported.<pre><code>public class UsbEndpoint</code></pre></section>	https://developer.android.com/reference/android/hardware/usb/UsbEndpoint.html
UsbInterface	A										<section class="prog__container">A class representing an interface on a <pre><code>UsbDevice</code></pre>. USB devices can have one or more interfaces, each one providing a different piece of functionality, separate from the other interfaces. An interface will have one or more <pre><code>UsbEndpoint</code></pre>s, which are the channels by which the host transfers data with the device. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class UsbInterface</code></pre></section>	https://developer.android.com/reference/android/hardware/usb/UsbInterface.html
UsbManager	A										<section class="prog__container">This class allows you to access the state of USB and communicate with USB devices. Currently only host mode is supported in the public API.<pre><code>public class UsbManager</code></pre></section>	https://developer.android.com/reference/android/hardware/usb/UsbManager.html
UsbRequest	A										<section class="prog__container">A class representing USB request packet. This can be used for both reading and writing data to or from a <pre><code>UsbDeviceConnection</code></pre>. UsbRequests can be used to transfer data on bulk and interrupt endpoints. Requests on bulk endpoints can be sent synchronously via <pre><code>bulkTransfer(UsbEndpoint, byte[], int, int)</code></pre> or asynchronously via <pre><code>queue(ByteBuffer, int)</code></pre> and <pre><code>requestWait()</code></pre>. Requests on interrupt endpoints are only send and received asynchronously.<pre><code>public class UsbRequest</code></pre></section>	https://developer.android.com/reference/android/hardware/usb/UsbRequest.html
UCharacter.BidiPairedBracketType	A										<section class="prog__container">Bidi Paired Bracket Type constants.<pre><code>public static interface UCharacter.BidiPairedBracketType</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.BidiPairedBracketType.html
UCharacter.DecompositionType	A										<section class="prog__container">Decomposition Type constants.<pre><code>public static interface UCharacter.DecompositionType</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html
UCharacter.EastAsianWidth	A										<section class="prog__container">East Asian Width constants.<pre><code>public static interface UCharacter.EastAsianWidth</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.EastAsianWidth.html
UCharacter.GraphemeClusterBreak	A										<section class="prog__container">Grapheme Cluster Break constants.<pre><code>public static interface UCharacter.GraphemeClusterBreak</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html
UCharacter.HangulSyllableType	A										<section class="prog__container">Hangul Syllable Type constants.<pre><code>public static interface UCharacter.HangulSyllableType</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.HangulSyllableType.html
UCharacter	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>Character</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.<pre><code>public final class UCharacter</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.html
UCharacter.JoiningGroup	A										<section class="prog__container">Joining Group constants.<pre><code>public static interface UCharacter.JoiningGroup</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html
UCharacter.JoiningType	A										<section class="prog__container">Joining Type constants.<pre><code>public static interface UCharacter.JoiningType</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningType.html
UCharacter.LineBreak	A										<section class="prog__container">Line Break constants.<pre><code>public static interface UCharacter.LineBreak</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html
UCharacter.NumericType	A										<section class="prog__container">Numeric Type constants.<pre><code>public static interface UCharacter.NumericType</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.NumericType.html
UCharacter.SentenceBreak	A										<section class="prog__container">Sentence Break constants.<pre><code>public static interface UCharacter.SentenceBreak</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html
UCharacter.UnicodeBlock	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>Character.UnicodeBlock</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. A family of character subsets representing the character blocks in the Unicode specification, generated from Unicode Data file Blocks.txt. Character blocks generally define characters used for a specific script or purpose. A character is contained by at most one Unicode block. <strong>[icu] Note:</strong> All fields named XXX_ID are specific to ICU.<pre><code>public static final class UCharacter.UnicodeBlock</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html
UCharacter.WordBreak	A										<section class="prog__container">Word Break constants.<pre><code>public static interface UCharacter.WordBreak</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html
UCharacterCategory	A										<section class="prog__container">Enumerated Unicode category types from the UnicodeData.txt file. Used as return results from UCharacter Equivalent to icu's UCharCategory. Refer to Unicode Consortium for more information about UnicodeData.txt.<pre><code>public final class UCharacterCategory</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacterCategory.html
UCharacterDirection	A										<section class="prog__container">Enumerated Unicode character linguistic direction constants. Used as return results from UCharacter<pre><code>public final class UCharacterDirection</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacterDirection.html
UCharacterEnums.ECharacterCategory	A										<section class="prog__container">'Enum' for the CharacterCategory constants. These constants are compatible in name <b>but not in value</b> with those defined in <pre><code>Character</code></pre>.<pre><code>public static interface UCharacterEnums.ECharacterCategory</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacterEnums.ECharacterCategory.html
UCharacterEnums.ECharacterDirection	A										<section class="prog__container">'Enum' for the CharacterDirection constants. Some constants are compatible in name <b>but not in value</b> with those defined in <pre><code>Character</code></pre>.<pre><code>public static interface UCharacterEnums.ECharacterDirection</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacterEnums.ECharacterDirection.html
UCharacterEnums	A										<section class="prog__container">A container for the different 'enumerated types' used by UCharacter.<pre><code>public class UCharacterEnums</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UCharacterEnums.html
UProperty	A										<section class="prog__container"><pre><code>public interface UProperty</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UProperty.html
UProperty.NameChoice	A										<section class="prog__container">Selector constants for UCharacter.getPropertyName() and UCharacter.getPropertyValueName(). These selectors are used to choose which name is returned for a given property or value. All properties and values have a long name. Most have a short name, but some do not. Unicode allows for additional names, beyond the long and short name, which would be indicated by LONG + i, where i=1, 2,...<pre><code>public static interface UProperty.NameChoice</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UProperty.NameChoice.html
UScript	A										<section class="prog__container">Constants for ISO 15924 script codes, and related functions.<pre><code>public final class UScript</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UScript.html
UScript.ScriptUsage	A										<section class="prog__container">Script usage constants. See UAX #31 Unicode Identifier and Pattern Syntax. http://www.unicode.org/reports/tr31/#Table_Candidate_Characters_for_Exclusion_from_Identifiers<pre><code>public static final enum UScript.ScriptUsage</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UScript.ScriptUsage.html
BigDecimal	A										<section class="prog__container">The <pre><code>BigDecimal</code></pre> class implements immutable arbitrary-precision decimal numbers. The methods of the <pre><code>BigDecimal</code></pre> class provide operations for fixed and floating point arithmetic, comparison, format conversions, and hashing.<pre><code>public class BigDecimal</code></pre></section>	https://developer.android.com/reference/android/icu/math/BigDecimal.html
MathContext	A										<section class="prog__container">The <pre><code>MathContext</code></pre> immutable class encapsulates the settings understood by the operator methods of the <pre><code>BigDecimal</code></pre> class (and potentially other classes). Operator methods are those that effect an operation on a number or a pair of numbers.<pre><code>public final class MathContext</code></pre></section>	https://developer.android.com/reference/android/icu/math/MathContext.html
AlphabeticIndex.Bucket	A										<section class="prog__container">An index "bucket" with a label string and type. It is referenced by <pre><code>getBucketIndex(CharSequence)</code></pre> and <pre><code>getBucketIndex(CharSequence)</code></pre>, returned by <pre><code>getBucket(int)</code></pre>, and <pre><code>addRecord(CharSequence, Object)</code></pre> adds a record into a bucket according to the record's name.<pre><code>public static class AlphabeticIndex.Bucket</code></pre></section>	https://developer.android.com/reference/android/icu/text/AlphabeticIndex.Bucket.html
AlphabeticIndex.Bucket.LabelType	A										<section class="prog__container">Type of the label<pre><code>public static final enum AlphabeticIndex.Bucket.LabelType</code></pre></section>	https://developer.android.com/reference/android/icu/text/AlphabeticIndex.Bucket.LabelType.html
AlphabeticIndex	A										<section class="prog__container">AlphabeticIndex supports the creation of a UI index appropriate for a given language. It can support either direct use, or use with a client that doesn't support localized collation. The following is an example of what an index might look like in a UI: <pre> <b>... A B C D E F G H I J K L M N O P Q R S T U V W X Y Z ...</b> <b>A</b> Addison Albertson Azensky <b>B</b> Baecker ... </pre> The class can generate a list of labels for use as a UI "index", that is, a list of clickable characters (or character sequences) that allow the user to see a segment (bucket) of a larger "target" list. That is, each label corresponds to a bucket in the target list, where everything in the bucket is greater than or equal to the character (according to the locale's collation). Strings can be added to the index; they will be in sorted order in the right bucket.<pre><code>public final class AlphabeticIndex</code></pre></section>	https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html
AlphabeticIndex.ImmutableIndex	A										<section class="prog__container">Immutable, thread-safe version of <pre><code>AlphabeticIndex</code></pre>. This class provides thread-safe methods for bucketing, and random access to buckets and their properties, but does not offer adding records to the index.<pre><code>public static final class AlphabeticIndex.ImmutableIndex</code></pre></section>	https://developer.android.com/reference/android/icu/text/AlphabeticIndex.ImmutableIndex.html
AlphabeticIndex.Record	A										<section class="prog__container">A (name, data) pair, to be sorted by name into one of the index buckets. The user data is not used by the index implementation.<pre><code>public static class AlphabeticIndex.Record</code></pre></section>	https://developer.android.com/reference/android/icu/text/AlphabeticIndex.Record.html
BreakIterator	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>BreakIterator</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.<pre><code>public abstract class BreakIterator</code></pre></section>	https://developer.android.com/reference/android/icu/text/BreakIterator.html
CollationElementIterator	A										<section class="prog__container"><pre><code>CollationElementIterator</code></pre> is an iterator created by a RuleBasedCollator to walk through a string. The return result of each iteration is a 32-bit collation element (CE) that defines the ordering priority of the next character or sequence of characters in the source string.<pre><code>public final class CollationElementIterator</code></pre></section>	https://developer.android.com/reference/android/icu/text/CollationElementIterator.html
CollationKey.BoundMode	A										<section class="prog__container">Options that used in the API CollationKey.getBound() for getting a CollationKey based on the bound mode requested.<pre><code>public static final class CollationKey.BoundMode</code></pre></section>	https://developer.android.com/reference/android/icu/text/CollationKey.BoundMode.html
CollationKey	A										<section class="prog__container">A <pre><code>CollationKey</code></pre> represents a <pre><code>String</code></pre> under the rules of a specific <pre><code>Collator</code></pre> object. Comparing two <pre><code>CollationKey</code></pre>s returns the relative order of the <pre><code>String</code></pre>s they represent.<pre><code>public final class CollationKey</code></pre></section>	https://developer.android.com/reference/android/icu/text/CollationKey.html
Collator	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>Collator</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.<pre><code>public abstract class Collator</code></pre></section>	https://developer.android.com/reference/android/icu/text/Collator.html
Collator.ReorderCodes	A										<section class="prog__container">Reordering codes for non-script groups that can be reordered under collation.<pre><code>public static interface Collator.ReorderCodes</code></pre></section>	https://developer.android.com/reference/android/icu/text/Collator.ReorderCodes.html
CompactDecimalFormat.CompactStyle	A										<section class="prog__container">Style parameter for CompactDecimalFormat.<pre><code>public static final enum CompactDecimalFormat.CompactStyle</code></pre></section>	https://developer.android.com/reference/android/icu/text/CompactDecimalFormat.CompactStyle.html
CompactDecimalFormat	A										<section class="prog__container">The CompactDecimalFormat produces abbreviated numbers, suitable for display in environments will limited real estate. For example, 'Hits: 1.2B' instead of 'Hits: 1,200,000,000'. The format will be appropriate for the given language, such as "1,2 Mrd." for German.<pre><code>public class CompactDecimalFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/CompactDecimalFormat.html
CurrencyPluralInfo	A										<section class="prog__container">This class represents the information needed by DecimalFormat to format currency plural, such as "3.00 US dollars" or "1.00 US dollar". DecimalFormat creates for itself an instance of CurrencyPluralInfo from its locale data. If you need to change any of these symbols, you can get the CurrencyPluralInfo object from your DecimalFormat and modify it. Following are the information needed for currency plural format and parse: locale information, plural rule of the locale, currency plural pattern of the locale.<pre><code>public class CurrencyPluralInfo</code></pre></section>	https://developer.android.com/reference/android/icu/text/CurrencyPluralInfo.html
DateFormat.BooleanAttribute	A										<section class="prog__container">boolean attributes<pre><code>public static final enum DateFormat.BooleanAttribute</code></pre></section>	https://developer.android.com/reference/android/icu/text/DateFormat.BooleanAttribute.html
DateFormat.Field	A										<section class="prog__container">The instances of this inner class are used as attribute keys and values in AttributedCharacterIterator that DateFormat.formatToCharacterIterator() method returns.<pre><code>public static class DateFormat.Field</code></pre></section>	https://developer.android.com/reference/android/icu/text/DateFormat.Field.html
DateFormat	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>DateFormat</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.<pre><code>public abstract class DateFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/DateFormat.html
DateFormatSymbols	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>DateFormatSymbols</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.<pre><code>public class DateFormatSymbols</code></pre></section>	https://developer.android.com/reference/android/icu/text/DateFormatSymbols.html
DateIntervalFormat	A										<section class="prog__container">DateIntervalFormat is a class for formatting and parsing date intervals in a language-independent manner. Only formatting is supported. Parsing is not supported.<pre><code>public class DateIntervalFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/DateIntervalFormat.html
DateIntervalInfo	A										<section class="prog__container">DateIntervalInfo is a public class for encapsulating localizable date time interval patterns. It is used by DateIntervalFormat.<pre><code>public class DateIntervalInfo</code></pre></section>	https://developer.android.com/reference/android/icu/text/DateIntervalInfo.html
DateIntervalInfo.PatternInfo	A										<section class="prog__container">PatternInfo class saves the first and second part of interval pattern, and whether the interval pattern is earlier date first.<pre><code>public static final class DateIntervalInfo.PatternInfo</code></pre></section>	https://developer.android.com/reference/android/icu/text/DateIntervalInfo.PatternInfo.html
DateTimePatternGenerator	A										<section class="prog__container">This class provides flexible generation of date format patterns, like "yy-MM-dd". The user can build up the generator by adding successive patterns. Once that is done, a query can be made using a "skeleton", which is a pattern which just includes the desired fields and lengths. The generator will return the "best fit" pattern corresponding to that skeleton.<pre><code>public class DateTimePatternGenerator</code></pre></section>	https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html
DateTimePatternGenerator.PatternInfo	A										<section class="prog__container">PatternInfo supplies output parameters for addPattern(...). It is used because Java doesn't have real output parameters. It is treated like a struct (eg Point), so all fields are public.<pre><code>public static final class DateTimePatternGenerator.PatternInfo</code></pre></section>	https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.PatternInfo.html
DecimalFormat	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>DecimalFormat</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. <pre><code>DecimalFormat</code></pre> is a concrete subclass of <pre><code>NumberFormat</code></pre> that formats decimal numbers. It has a variety of features designed to make it possible to parse and format numbers in any locale, including support for Western, Arabic, or Indic digits. It also supports different flavors of numbers, including integers ("123"), fixed-point numbers ("123.4"), scientific notation ("1.23E4"), percentages ("12%"), and currency amounts ("$123.00", "USD123.00", "123.00 US dollars"). All of these flavors can be easily localized.<pre><code>public class DecimalFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/DecimalFormat.html
DecimalFormatSymbols	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>DecimalFormatSymbols</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by <pre><code>DecimalFormat</code></pre> to format numbers. <pre><code>DecimalFormat</code></pre> creates for itself an instance of <pre><code>DecimalFormatSymbols</code></pre> from its locale data. If you need to change any of these symbols, you can get the <pre><code>DecimalFormatSymbols</code></pre> object from your <pre><code>DecimalFormat</code></pre> and modify it.<pre><code>public class DecimalFormatSymbols</code></pre></section>	https://developer.android.com/reference/android/icu/text/DecimalFormatSymbols.html
DisplayContext	A										<section class="prog__container">Display context settings. Note, the specific numeric values are internal and may change.<pre><code>public final enum DisplayContext</code></pre></section>	https://developer.android.com/reference/android/icu/text/DisplayContext.html
DisplayContext.Type	A										<section class="prog__container">Type values for DisplayContext<pre><code>public static final enum DisplayContext.Type</code></pre></section>	https://developer.android.com/reference/android/icu/text/DisplayContext.Type.html
IDNA.Error	A										<section class="prog__container">IDNA error bit set values. When a domain name or label fails a processing step or does not meet the validity criteria, then one or more of these error bits are set.<pre><code>public static final enum IDNA.Error</code></pre></section>	https://developer.android.com/reference/android/icu/text/IDNA.Error.html
IDNA	A										<section class="prog__container">Abstract base class for IDNA processing. See http://www.unicode.org/reports/tr46/ and http://www.ietf.org/rfc/rfc3490.txt<pre><code>public abstract class IDNA</code></pre></section>	https://developer.android.com/reference/android/icu/text/IDNA.html
IDNA.Info	A										<section class="prog__container">Output container for IDNA processing errors. The Info class is not suitable for subclassing.<pre><code>public static final class IDNA.Info</code></pre></section>	https://developer.android.com/reference/android/icu/text/IDNA.Info.html
LocaleDisplayNames.DialectHandling	A										<section class="prog__container">Enum used in <pre><code>getInstance(ULocale, DialectHandling)</code></pre>.<pre><code>public static final enum LocaleDisplayNames.DialectHandling</code></pre></section>	https://developer.android.com/reference/android/icu/text/LocaleDisplayNames.DialectHandling.html
LocaleDisplayNames	A										<section class="prog__container">Returns display names of ULocales and components of ULocales. For more information on language, script, region, variant, key, and values, see <pre><code>ULocale</code></pre>.<pre><code>public abstract class LocaleDisplayNames</code></pre></section>	https://developer.android.com/reference/android/icu/text/LocaleDisplayNames.html
MeasureFormat.FormatWidth	A										<section class="prog__container">Formatting width enum.<pre><code>public static final enum MeasureFormat.FormatWidth</code></pre></section>	https://developer.android.com/reference/android/icu/text/MeasureFormat.FormatWidth.html
MeasureFormat	A										<section class="prog__container">A formatter for Measure objects.<pre><code>public class MeasureFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/MeasureFormat.html
MessageFormat.Field	A										<section class="prog__container">Defines constants that are used as attribute keys in the <pre><code>AttributedCharacterIterator</code></pre> returned from <pre><code>MessageFormat.formatToCharacterIterator</code></pre>.<pre><code>public static class MessageFormat.Field</code></pre></section>	https://developer.android.com/reference/android/icu/text/MessageFormat.Field.html
MessageFormat	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>MessageFormat</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.<pre><code>public class MessageFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/MessageFormat.html
MessagePattern.ApostropheMode	A										<section class="prog__container">Mode for when an apostrophe starts quoted literal text for MessageFormat output. The default is DOUBLE_OPTIONAL unless overridden via ICUConfig (/com/ibm/icu/ICUConfig.properties).<pre><code>public static final enum MessagePattern.ApostropheMode</code></pre></section>	https://developer.android.com/reference/android/icu/text/MessagePattern.ApostropheMode.html
MessagePattern.ArgType	A										<section class="prog__container">Argument type constants. Returned by Part.getArgType() for ARG_START and ARG_LIMIT parts. Messages nested inside an argument are each delimited by MSG_START and MSG_LIMIT, with a nesting level one greater than the surrounding message.<pre><code>public static final enum MessagePattern.ArgType</code></pre></section>	https://developer.android.com/reference/android/icu/text/MessagePattern.ArgType.html
MessagePattern	A										<section class="prog__container">Parses and represents ICU MessageFormat patterns. Also handles patterns for ChoiceFormat, PluralFormat and SelectFormat. Used in the implementations of those classes as well as in tools for message validation, translation and format conversion.<pre><code>public final class MessagePattern</code></pre></section>	https://developer.android.com/reference/android/icu/text/MessagePattern.html
MessagePattern.Part	A										<section class="prog__container">A message pattern "part", representing a pattern parsing event. There is a part for the start and end of a message or argument, for quoting and escaping of and with ASCII apostrophes, and for syntax elements of "complex" arguments.<pre><code>public static final class MessagePattern.Part</code></pre></section>	https://developer.android.com/reference/android/icu/text/MessagePattern.Part.html
MessagePattern.Part.Type	A										<section class="prog__container">Part type constants.<pre><code>public static final enum MessagePattern.Part.Type</code></pre></section>	https://developer.android.com/reference/android/icu/text/MessagePattern.Part.Type.html
Normalizer	A										<section class="prog__container">Old Unicode normalization API.<pre><code>public final class Normalizer</code></pre></section>	https://developer.android.com/reference/android/icu/text/Normalizer.html
Normalizer.QuickCheckResult	A										<section class="prog__container">Result values for quickCheck(). For details see Unicode Technical Report 15.<pre><code>public static final class Normalizer.QuickCheckResult</code></pre></section>	https://developer.android.com/reference/android/icu/text/Normalizer.QuickCheckResult.html
Normalizer2	A										<section class="prog__container">Unicode normalization functionality for standard Unicode normalization or for using custom mapping tables. All instances of this class are unmodifiable/immutable. The Normalizer2 class is not intended for public subclassing.<pre><code>public abstract class Normalizer2</code></pre></section>	https://developer.android.com/reference/android/icu/text/Normalizer2.html
Normalizer2.Mode	A										<section class="prog__container">Constants for normalization modes. For details about standard Unicode normalization forms and about the algorithms which are also used with custom mapping tables see http://www.unicode.org/unicode/reports/tr15/<pre><code>public static final enum Normalizer2.Mode</code></pre></section>	https://developer.android.com/reference/android/icu/text/Normalizer2.Mode.html
NumberFormat.Field	A										<section class="prog__container">The instances of this inner class are used as attribute keys and values in AttributedCharacterIterator that NumberFormat.formatToCharacterIterator() method returns.<pre><code>public static class NumberFormat.Field</code></pre></section>	https://developer.android.com/reference/android/icu/text/NumberFormat.Field.html
NumberFormat	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>NumberFormat</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. <pre><code>NumberFormat</code></pre> is the abstract base class for all number formats. This class provides the interface for formatting and parsing numbers. <pre><code>NumberFormat</code></pre> also provides methods for determining which locales have number formats, and what their names are. <pre><code>NumberFormat</code></pre> helps you to format and parse numbers for any locale. Your code can be completely independent of the locale conventions for decimal points, thousands-separators, or even the particular decimal digits used, or whether the number format is even decimal.<pre><code>public abstract class NumberFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/NumberFormat.html
NumberingSystem	A										<section class="prog__container"><pre><code>NumberingSystem</code></pre> is the base class for all number systems. This class provides the interface for setting different numbering system types, whether it be a simple alternate digit system such as Thai digits or Devanagari digits, or an algorithmic numbering system such as Hebrew numbering or Chinese numbering.<pre><code>public class NumberingSystem</code></pre></section>	https://developer.android.com/reference/android/icu/text/NumberingSystem.html
PluralFormat	A										<section class="prog__container"><pre><code>PluralFormat</code></pre> supports the creation of internationalized messages with plural inflection. It is based on <i>plural selection</i>, i.e. the caller specifies messages for each plural case that can appear in the user's language and the <pre><code>PluralFormat</code></pre> selects the appropriate message based on the number. <h3>The Problem of Plural Forms in Internationalized Messages</h3><pre><code>public class PluralFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/PluralFormat.html
PluralRules	A										<section class="prog__container"><pre><code>public class PluralRules</code></pre></section>	https://developer.android.com/reference/android/icu/text/PluralRules.html
PluralRules.PluralType	A										<section class="prog__container">Type of plurals and PluralRules.<pre><code>public static final enum PluralRules.PluralType</code></pre></section>	https://developer.android.com/reference/android/icu/text/PluralRules.PluralType.html
RelativeDateTimeFormatter.AbsoluteUnit	A										<section class="prog__container">Represents an absolute unit.<pre><code>public static final enum RelativeDateTimeFormatter.AbsoluteUnit</code></pre></section>	https://developer.android.com/reference/android/icu/text/RelativeDateTimeFormatter.AbsoluteUnit.html
RelativeDateTimeFormatter.Direction	A										<section class="prog__container">Represents a direction for an absolute unit e.g "Next Tuesday" or "Last Tuesday"<pre><code>public static final enum RelativeDateTimeFormatter.Direction</code></pre></section>	https://developer.android.com/reference/android/icu/text/RelativeDateTimeFormatter.Direction.html
RelativeDateTimeFormatter	A										<section class="prog__container">Formats simple relative dates. There are two types of relative dates that it handles: <ul> <li>relative dates with a quantity e.g "in 5 days"</li> <li>relative dates without a quantity e.g "next Tuesday"</li> </ul><pre><code>public final class RelativeDateTimeFormatter</code></pre></section>	https://developer.android.com/reference/android/icu/text/RelativeDateTimeFormatter.html
RelativeDateTimeFormatter.RelativeUnit	A										<section class="prog__container">Represents the unit for formatting a relative date. e.g "in 5 days" or "in 3 months"<pre><code>public static final enum RelativeDateTimeFormatter.RelativeUnit</code></pre></section>	https://developer.android.com/reference/android/icu/text/RelativeDateTimeFormatter.RelativeUnit.html
RelativeDateTimeFormatter.Style	A										<section class="prog__container">The formatting style<pre><code>public static final enum RelativeDateTimeFormatter.Style</code></pre></section>	https://developer.android.com/reference/android/icu/text/RelativeDateTimeFormatter.Style.html
Replaceable	A										<section class="prog__container"><pre><code>Replaceable</code></pre> is an interface representing a string of characters that supports the replacement of a range of itself with a new string of characters. It is used by APIs that change a piece of text while retaining metadata. Metadata is data other than the Unicode characters returned by char32At(). One example of metadata is style attributes; another is an edit history, marking each character with an author and revision number.<pre><code>public interface Replaceable</code></pre></section>	https://developer.android.com/reference/android/icu/text/Replaceable.html
RuleBasedCollator	A										<section class="prog__container"><pre><code>public final class RuleBasedCollator</code></pre></section>	https://developer.android.com/reference/android/icu/text/RuleBasedCollator.html
SearchIterator.ElementComparisonType	A										<section class="prog__container">Option to control how collation elements are compared. The default value will be <pre><code>STANDARD_ELEMENT_COMPARISON</code></pre>.<pre><code>public static final enum SearchIterator.ElementComparisonType</code></pre></section>	https://developer.android.com/reference/android/icu/text/SearchIterator.ElementComparisonType.html
SearchIterator	A										<section class="prog__container"><tt>SearchIterator</tt> is an abstract base class that provides methods to search for a pattern within a text string. Instances of <tt>SearchIterator</tt> maintain a current position and scan over the target text, returning the indices the pattern is matched and the length of each match.<pre><code>public abstract class SearchIterator</code></pre></section>	https://developer.android.com/reference/android/icu/text/SearchIterator.html
SelectFormat	A										<section class="prog__container"><pre><code>public class SelectFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/SelectFormat.html
SimpleDateFormat	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>SimpleDateFormat</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.<pre><code>public class SimpleDateFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html
StringPrepParseException	A										<section class="prog__container">Exception that signals an error has occurred while parsing the input to StringPrep or IDNA.<pre><code>public class StringPrepParseException</code></pre></section>	https://developer.android.com/reference/android/icu/text/StringPrepParseException.html
StringSearch	A										<section class="prog__container"><tt>StringSearch</tt> is a <pre><code>SearchIterator</code></pre> that provides language-sensitive text searching based on the comparison rules defined in a <pre><code>RuleBasedCollator</code></pre> object. StringSearch ensures that language eccentricity can be handled, e.g. for the German collator, characters &szlig; and SS will be matched if case is chosen to be ignored. See the "ICU Collation Design Document" for more information.<pre><code>public final class StringSearch</code></pre></section>	https://developer.android.com/reference/android/icu/text/StringSearch.html
SymbolTable	A										<section class="prog__container">An interface that defines both lookup protocol and parsing of symbolic names.<pre><code>public interface SymbolTable</code></pre></section>	https://developer.android.com/reference/android/icu/text/SymbolTable.html
TimeZoneFormat.GMTOffsetPatternType	A										<section class="prog__container">Offset pattern type enum.<pre><code>public static final enum TimeZoneFormat.GMTOffsetPatternType</code></pre></section>	https://developer.android.com/reference/android/icu/text/TimeZoneFormat.GMTOffsetPatternType.html
TimeZoneFormat	A										<section class="prog__container"><pre><code>TimeZoneFormat</code></pre> supports time zone display name formatting and parsing. An instance of TimeZoneFormat works as a subformatter of <pre><code>SimpleDateFormat</code></pre>, but you can also directly get a new instance of <pre><code>TimeZoneFormat</code></pre> and formatting/parsing time zone display names.<pre><code>public class TimeZoneFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html
TimeZoneFormat.ParseOption	A										<section class="prog__container">Parse option enum, used for specifying optional parse behavior.<pre><code>public static final enum TimeZoneFormat.ParseOption</code></pre></section>	https://developer.android.com/reference/android/icu/text/TimeZoneFormat.ParseOption.html
TimeZoneFormat.Style	A										<section class="prog__container">Time zone display format style enum used by format/parse APIs in <pre><code>TimeZoneFormat</code></pre>.<pre><code>public static final enum TimeZoneFormat.Style</code></pre></section>	https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html
TimeZoneFormat.TimeType	A										<section class="prog__container">Time type enum used for receiving time type (standard time, daylight time or unknown) in <pre><code>TimeZoneFormat</code></pre> APIs.<pre><code>public static final enum TimeZoneFormat.TimeType</code></pre></section>	https://developer.android.com/reference/android/icu/text/TimeZoneFormat.TimeType.html
TimeZoneNames	A										<section class="prog__container"><pre><code>TimeZoneNames</code></pre> is an abstract class representing the time zone display name data model defined by UTS#35 Unicode Locale Data Markup Language (LDML). The model defines meta zone, which is used for storing a set of display names. A meta zone can be shared by multiple time zones. Also a time zone may have multiple meta zone historic mappings.<pre><code>public abstract class TimeZoneNames</code></pre></section>	https://developer.android.com/reference/android/icu/text/TimeZoneNames.html
TimeZoneNames.NameType	A										<section class="prog__container">Time zone display name types<pre><code>public static final enum TimeZoneNames.NameType</code></pre></section>	https://developer.android.com/reference/android/icu/text/TimeZoneNames.NameType.html
UCharacterIterator	A										<section class="prog__container">Abstract class that defines an API for iteration on text objects.This is an interface for forward and backward iteration and random access into a text object. Forward iteration is done with post-increment and backward iteration is done with pre-decrement semantics, while the <pre><code>java.text.CharacterIterator</code></pre> interface methods provided forward iteration with "pre-increment" and backward iteration with pre-decrement semantics. This API is more efficient for forward iteration over code points. The other major difference is that this API can do both code unit and code point iteration, <pre><code>java.text.CharacterIterator</code></pre> can only iterate over code units and is limited to BMP (0 - 0xFFFF)<pre><code>public abstract class UCharacterIterator</code></pre></section>	https://developer.android.com/reference/android/icu/text/UCharacterIterator.html
UFormat	A										<section class="prog__container">An abstract class that extends <pre><code>Format</code></pre> to provide additional ICU protocol, specifically, the <tt>getLocale()</tt> API. All ICU format classes are subclasses of this class.<pre><code>public abstract class UFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/UFormat.html
UnicodeFilter	A										<section class="prog__container"><pre><code>UnicodeFilter</code></pre> defines a protocol for selecting a subset of the full range (U+0000 to U+FFFF) of Unicode characters.<pre><code>public abstract class UnicodeFilter</code></pre></section>	https://developer.android.com/reference/android/icu/text/UnicodeFilter.html
UnicodeMatcher	A										<section class="prog__container"><pre><code>UnicodeMatcher</code></pre> defines a protocol for objects that can match a range of characters in a Replaceable string.<pre><code>public interface UnicodeMatcher</code></pre></section>	https://developer.android.com/reference/android/icu/text/UnicodeMatcher.html
UnicodeSet.ComparisonStyle	A										<section class="prog__container">Comparison style enums used by <pre><code>compareTo(UnicodeSet, ComparisonStyle)</code></pre>.<pre><code>public static final enum UnicodeSet.ComparisonStyle</code></pre></section>	https://developer.android.com/reference/android/icu/text/UnicodeSet.ComparisonStyle.html
UnicodeSet.EntryRange	A										<section class="prog__container">A struct-like class used for iteration through ranges, for faster iteration than by String. Read about the restrictions on usage in <pre><code>ranges()</code></pre>.<pre><code>public static class UnicodeSet.EntryRange</code></pre></section>	https://developer.android.com/reference/android/icu/text/UnicodeSet.EntryRange.html
UnicodeSet	A										<section class="prog__container">A mutable set of Unicode characters and multicharacter strings. Objects of this class represent <em>character classes</em> used in regular expressions. A character specifies a subset of Unicode code points. Legal code points are U+0000 to U+10FFFF, inclusive. Note: method freeze() will not only make the set immutable, but also makes important methods much higher performance: contains(c), containsNone(...), span(...), spanBack(...) etc. After the object is frozen, any subsequent call that wants to change the object will throw UnsupportedOperationException.<pre><code>public class UnicodeSet</code></pre></section>	https://developer.android.com/reference/android/icu/text/UnicodeSet.html
UnicodeSet.SpanCondition	A										<section class="prog__container">Argument values for whether span() and similar functions continue while the current character is contained vs. not contained in the set.<pre><code>public static final enum UnicodeSet.SpanCondition</code></pre></section>	https://developer.android.com/reference/android/icu/text/UnicodeSet.SpanCondition.html
UnicodeSetIterator	A										<section class="prog__container">UnicodeSetIterator iterates over the contents of a UnicodeSet. It iterates over either code points or code point ranges. After all code points or ranges have been returned, it returns the multicharacter strings of the UnicodSet, if any.<pre><code>public class UnicodeSetIterator</code></pre></section>	https://developer.android.com/reference/android/icu/text/UnicodeSetIterator.html
UnicodeSetSpanner.CountMethod	A										<section class="prog__container">Options for replaceFrom and countIn to control how to treat each matched span. It is similar to whether one is replacing [abc] by x, or [abc]* by x.<pre><code>public static final enum UnicodeSetSpanner.CountMethod</code></pre></section>	https://developer.android.com/reference/android/icu/text/UnicodeSetSpanner.CountMethod.html
UnicodeSetSpanner	A										<section class="prog__container">A helper class used to count, replace, and trim CharSequences based on UnicodeSet matches. An instance is immutable (and thus thread-safe) iff the source UnicodeSet is frozen.<pre><code>public class UnicodeSetSpanner</code></pre></section>	https://developer.android.com/reference/android/icu/text/UnicodeSetSpanner.html
UnicodeSetSpanner.TrimOption	A										<section class="prog__container">Options for the trim() method<pre><code>public static final enum UnicodeSetSpanner.TrimOption</code></pre></section>	https://developer.android.com/reference/android/icu/text/UnicodeSetSpanner.TrimOption.html
BuddhistCalendar	A										<section class="prog__container"><pre><code>BuddhistCalendar</code></pre> is a subclass of <pre><code>GregorianCalendar</code></pre> that numbers years since the birth of the Buddha. This is the civil calendar in some predominantly Buddhist countries such as Thailand, and it is used for religious purposes elsewhere.<pre><code>public class BuddhistCalendar</code></pre></section>	https://developer.android.com/reference/android/icu/util/BuddhistCalendar.html
Calendar	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>Calendar</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.<pre><code>public abstract class Calendar</code></pre></section>	https://developer.android.com/reference/android/icu/util/Calendar.html
Calendar.WeekData	A										<section class="prog__container">Simple, immutable struct-like class for access to the CLDR weekend data.<pre><code>public static final class Calendar.WeekData</code></pre></section>	https://developer.android.com/reference/android/icu/util/Calendar.WeekData.html
ChineseCalendar	A										<section class="prog__container"><pre><code>ChineseCalendar</code></pre> is a concrete subclass of <pre><code>Calendar</code></pre> that implements a traditional Chinese calendar. The traditional Chinese calendar is a lunisolar calendar: Each month starts on a new moon, and the months are numbered according to solar events, specifically, to guarantee that month 11 always contains the winter solstice. In order to accomplish this, leap months are inserted in certain years. Leap months are numbered the same as the month they follow. The decision of which month is a leap month depends on the relative movements of the sun and moon.<pre><code>public class ChineseCalendar</code></pre></section>	https://developer.android.com/reference/android/icu/util/ChineseCalendar.html
CopticCalendar	A										<section class="prog__container">Implement the Coptic calendar system.<pre><code>public final class CopticCalendar</code></pre></section>	https://developer.android.com/reference/android/icu/util/CopticCalendar.html
Currency.CurrencyUsage	A										<section class="prog__container">Currency Usage used for Decimal Format<pre><code>public static final enum Currency.CurrencyUsage</code></pre></section>	https://developer.android.com/reference/android/icu/util/Currency.CurrencyUsage.html
Currency	A										<section class="prog__container">A class encapsulating a currency, as defined by ISO 4217. A <tt>Currency</tt> object can be created given a <tt>Locale</tt> or given an ISO 4217 code. Once created, the <tt>Currency</tt> object can return various data necessary to its proper display: <ul><li>A display symbol, for a specific locale <li>The number of fraction digits to display <li>A rounding increment </li></li></li></ul> The <tt>DecimalFormat</tt> class uses these data to display currencies.<pre><code>public class Currency</code></pre></section>	https://developer.android.com/reference/android/icu/util/Currency.html
CurrencyAmount	A										<section class="prog__container">An amount of currency, consisting of a Number and a Currency. CurrencyAmount objects are immutable.<pre><code>public class CurrencyAmount</code></pre></section>	https://developer.android.com/reference/android/icu/util/CurrencyAmount.html
DateInterval	A										<section class="prog__container">This class represents date interval. It is a pair of long representing from date 1 to date 2.<pre><code>public final class DateInterval</code></pre></section>	https://developer.android.com/reference/android/icu/util/DateInterval.html
Freezable	A										<section class="prog__container">Provides a flexible mechanism for controlling access, without requiring that a class be immutable. Once frozen, an object can never be unfrozen, so it is thread-safe from that point onward. Once the object has been frozen, it must guarantee that no changes can be made to it. Any attempt to alter it must raise an UnsupportedOperationException exception. This means that when the object returns internal objects, or if anyone has references to those internal objects, that those internal objects must either be immutable, or must also raise exceptions if any attempt to modify them is made. Of course, the object can return clones of internal objects, since those are safe. <h2>Background</h2><pre><code>public interface Freezable</code></pre></section>	https://developer.android.com/reference/android/icu/util/Freezable.html
GregorianCalendar	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>GregorianCalendar</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.<pre><code>public class GregorianCalendar</code></pre></section>	https://developer.android.com/reference/android/icu/util/GregorianCalendar.html
HebrewCalendar	A										<section class="prog__container"><pre><code>HebrewCalendar</code></pre> is a subclass of <pre><code>Calendar</code></pre> that that implements the traditional Hebrew calendar. This is the civil calendar in Israel and the liturgical calendar of the Jewish faith worldwide.<pre><code>public class HebrewCalendar</code></pre></section>	https://developer.android.com/reference/android/icu/util/HebrewCalendar.html
ICUUncheckedIOException	A										<section class="prog__container">Unchecked version of <pre><code>IOException</code></pre>. Some ICU APIs do not throw the standard exception but instead wrap it into this unchecked version.<pre><code>public class ICUUncheckedIOException</code></pre></section>	https://developer.android.com/reference/android/icu/util/ICUUncheckedIOException.html
IndianCalendar	A										<section class="prog__container"><pre><code>IndianCalendar</code></pre> is a subclass of <pre><code>GregorianCalendar</code></pre> that numbers years since the birth of the Buddha. This is the civil calendar which is accepted by government of India as Indian National Calendar. The two calendars most widely used in India today are the Vikrama calendar followed in North India and the Shalivahana or Saka calendar which is followed in South India and Maharashtra. A variant of the Shalivahana Calendar was reformed and standardized as the Indian National calendar in 1957.<pre><code>public class IndianCalendar</code></pre></section>	https://developer.android.com/reference/android/icu/util/IndianCalendar.html
IslamicCalendar.CalculationType	A										<section class="prog__container">enumeration of available calendar calculation types<pre><code>public static final enum IslamicCalendar.CalculationType</code></pre></section>	https://developer.android.com/reference/android/icu/util/IslamicCalendar.CalculationType.html
IslamicCalendar	A										<section class="prog__container"><pre><code>IslamicCalendar</code></pre> is a subclass of <pre><code>Calendar</code></pre> that that implements the Islamic civil and religious calendars. It is used as the civil calendar in most of the Arab world and the liturgical calendar of the Islamic faith worldwide. This calendar is also known as the "Hijri" calendar, since it starts at the time of Mohammed's emigration (or "hijra") to Medinah on Thursday, July 15, 622 AD (Julian).<pre><code>public class IslamicCalendar</code></pre></section>	https://developer.android.com/reference/android/icu/util/IslamicCalendar.html
JapaneseCalendar	A										<section class="prog__container"><pre><code>JapaneseCalendar</code></pre> is a subclass of <pre><code>GregorianCalendar</code></pre> that numbers years and eras based on the reigns of the Japanese emperors. The Japanese calendar is identical to the Gregorian calendar in all respects except for the year and era. The ascension of each emperor to the throne begins a new era, and the years of that era are numbered starting with the year of ascension as year 1.<pre><code>public class JapaneseCalendar</code></pre></section>	https://developer.android.com/reference/android/icu/util/JapaneseCalendar.html
Measure	A										<section class="prog__container">An amount of a specified unit, consisting of a Number and a Unit. For example, a length measure consists of a Number and a length unit, such as feet or meters.<pre><code>public class Measure</code></pre></section>	https://developer.android.com/reference/android/icu/util/Measure.html
MeasureUnit	A										<section class="prog__container">A unit such as length, mass, volume, currency, etc. A unit is coupled with a numeric amount to produce a Measure. MeasureUnit objects are immutable. All subclasses must guarantee that. (However, subclassing is discouraged.)<pre><code>public class MeasureUnit</code></pre></section>	https://developer.android.com/reference/android/icu/util/MeasureUnit.html
Output	A										<section class="prog__container">Simple struct-like class for output parameters.<pre><code>public class Output</code></pre></section>	https://developer.android.com/reference/android/icu/util/Output.html
RangeValueIterator.Element	A										<section class="prog__container">Return result wrapper for android.icu.util.RangeValueIterator. Stores the start and limit of the continous result range and the common value all integers between [start, limit - 1] has.<pre><code>public static class RangeValueIterator.Element</code></pre></section>	https://developer.android.com/reference/android/icu/util/RangeValueIterator.Element.html
RangeValueIterator	A										<section class="prog__container"><pre><code>public interface RangeValueIterator</code></pre></section>	https://developer.android.com/reference/android/icu/util/RangeValueIterator.html
TaiwanCalendar	A										<section class="prog__container"><pre><code>TaiwanCalendar</code></pre> is a subclass of <pre><code>GregorianCalendar</code></pre> that numbers years since 1912.<pre><code>public class TaiwanCalendar</code></pre></section>	https://developer.android.com/reference/android/icu/util/TaiwanCalendar.html
TimeUnit	A										<section class="prog__container">Measurement unit for time units.<pre><code>public class TimeUnit</code></pre></section>	https://developer.android.com/reference/android/icu/util/TimeUnit.html
TimeZone	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>TimeZone</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.<pre><code>public abstract class TimeZone</code></pre></section>	https://developer.android.com/reference/android/icu/util/TimeZone.html
TimeZone.SystemTimeZoneType	A										<section class="prog__container"><strong>[icu]</strong> System time zone type constants used by filtering zones in <pre><code>getAvailableIDs(SystemTimeZoneType, String, Integer)</code></pre><pre><code>public static final enum TimeZone.SystemTimeZoneType</code></pre></section>	https://developer.android.com/reference/android/icu/util/TimeZone.SystemTimeZoneType.html
ULocale.Builder	A										<section class="prog__container"><pre><code>Builder</code></pre> is used to build instances of <pre><code>ULocale</code></pre> from values configured by the setters. Unlike the <pre><code>ULocale</code></pre> constructors, the <pre><code>Builder</code></pre> checks if a value configured by a setter satisfies the syntax requirements defined by the <pre><code>ULocale</code></pre> class. A <pre><code>ULocale</code></pre> object created by a <pre><code>Builder</code></pre> is well-formed and can be transformed to a well-formed IETF BCP 47 language tag without losing information.<pre><code>public static final class ULocale.Builder</code></pre></section>	https://developer.android.com/reference/android/icu/util/ULocale.Builder.html
ULocale.Category	A										<section class="prog__container">Enum for locale categories. These locale categories are used to get/set the default locale for the specific functionality represented by the category.<pre><code>public static final enum ULocale.Category</code></pre></section>	https://developer.android.com/reference/android/icu/util/ULocale.Category.html
ULocale	A										<section class="prog__container"><strong>[icu enhancement]</strong> ICU's replacement for <pre><code>Locale</code></pre>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. A class analogous to <pre><code>Locale</code></pre> that provides additional support for ICU protocol. In ICU 3.0 this class is enhanced to support RFC 3066 language identifiers.<pre><code>public final class ULocale</code></pre></section>	https://developer.android.com/reference/android/icu/util/ULocale.html
ValueIterator.Element	A										<section class="prog__container"><pre><code>public static final class ValueIterator.Element</code></pre></section>	https://developer.android.com/reference/android/icu/util/ValueIterator.Element.html
ValueIterator	A										<section class="prog__container"><pre><code>public interface ValueIterator</code></pre></section>	https://developer.android.com/reference/android/icu/util/ValueIterator.html
VersionInfo	A										<section class="prog__container">Class to store version numbers of the form major.minor.milli.micro.<pre><code>public final class VersionInfo</code></pre></section>	https://developer.android.com/reference/android/icu/util/VersionInfo.html
AbstractInputMethodService.AbstractInputMethodImpl	A										<section class="prog__container">Base class for derived classes to implement their <pre><code>InputMethod</code></pre> interface. This takes care of basic maintenance of the input method, but most behavior must be implemented in a derived class.<pre><code>public abstract class AbstractInputMethodService.AbstractInputMethodImpl</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodImpl.html
AbstractInputMethodService.AbstractInputMethodSessionImpl	A										<section class="prog__container">Base class for derived classes to implement their <pre><code>InputMethodSession</code></pre> interface. This takes care of basic maintenance of the session, but most behavior must be implemented in a derived class.<pre><code>public abstract class AbstractInputMethodService.AbstractInputMethodSessionImpl</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html
AbstractInputMethodService	A										<section class="prog__container">AbstractInputMethodService provides a abstract base class for input methods. Normal input method implementations will not derive from this directly, instead building on top of <pre><code>InputMethodService</code></pre> or another more complete base class. Be sure to read <pre><code>InputMethod</code></pre> for more information on the basics of writing input methods.<pre><code>public abstract class AbstractInputMethodService</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.html
ExtractEditText	A										<section class="prog__container">Specialization of <pre><code>EditText</code></pre> for showing and interacting with the extracted text in a full-screen input method.<pre><code>public class ExtractEditText</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/ExtractEditText.html
InputMethodService	A										<section class="prog__container">InputMethodService provides a standard implementation of an InputMethod, which final implementations can derive from and customize. See the base class <pre><code>AbstractInputMethodService</code></pre> and the <pre><code>InputMethod</code></pre> interface for more information on the basics of writing input methods.<pre><code>public class InputMethodService</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/InputMethodService.html
InputMethodService.InputMethodImpl	A										<section class="prog__container">Concrete implementation of <pre><code>AbstractInputMethodService.AbstractInputMethodImpl</code></pre> that provides all of the standard behavior for an input method.<pre><code>public class InputMethodService.InputMethodImpl</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/InputMethodService.InputMethodImpl.html
InputMethodService.InputMethodSessionImpl	A										<section class="prog__container">Concrete implementation of <pre><code>AbstractInputMethodService.AbstractInputMethodSessionImpl</code></pre> that provides all of the standard behavior for an input method session.<pre><code>public class InputMethodService.InputMethodSessionImpl</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/InputMethodService.InputMethodSessionImpl.html
InputMethodService.Insets	A										<section class="prog__container">Information about where interesting parts of the input method UI appear.<pre><code>public static final class InputMethodService.Insets</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html
Keyboard	A										<section class="prog__container">Loads an XML description of a keyboard and stores the attributes of the keys. A keyboard consists of rows of keys.<pre><code>public class Keyboard</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/Keyboard.html
Keyboard.Key	A										<section class="prog__container">Class for describing the position and characteristics of a single key in the keyboard.<pre><code>public static class Keyboard.Key</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/Keyboard.Key.html
Keyboard.Row	A										<section class="prog__container">Container for keys in the keyboard. All keys in a row are at the same Y-coordinate. Some of the key size defaults can be overridden per row from what the <pre><code>Keyboard</code></pre> defines.<pre><code>public static class Keyboard.Row</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/Keyboard.Row.html
KeyboardView	A										<section class="prog__container">A view that renders a virtual <pre><code>Keyboard</code></pre>. It handles rendering of keys and detecting key presses and touch movements.<pre><code>public class KeyboardView</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/KeyboardView.html
KeyboardView.OnKeyboardActionListener	A										<section class="prog__container">Listener for virtual keyboard events.<pre><code>public static interface KeyboardView.OnKeyboardActionListener</code></pre></section>	https://developer.android.com/reference/android/inputmethodservice/KeyboardView.OnKeyboardActionListener.html
Address	A										<section class="prog__container">A class representing an Address, i.e, a set of Strings describing a location. The address format is a simplified version of xAL (eXtensible Address Language) http://www.oasis-open.org/committees/ciq/ciq.html#6<pre><code>public class Address</code></pre></section>	https://developer.android.com/reference/android/location/Address.html
Criteria	A										<section class="prog__container">A class indicating the application criteria for selecting a location provider. Providers maybe ordered according to accuracy, power usage, ability to report altitude, speed, and bearing, and monetary cost.<pre><code>public class Criteria</code></pre></section>	https://developer.android.com/reference/android/location/Criteria.html
Geocoder	A										<section class="prog__container">A class for handling geocoding and reverse geocoding. Geocoding is the process of transforming a street address or other description of a location into a (latitude, longitude) coordinate. Reverse geocoding is the process of transforming a (latitude, longitude) coordinate into a (partial) address. The amount of detail in a reverse geocoded location description may vary, for example one might contain the full street address of the closest building, while another might contain only a city name and postal code. The Geocoder class requires a backend service that is not included in the core android framework. The Geocoder query methods will return an empty list if there no backend service in the platform. Use the isPresent() method to determine whether a Geocoder implementation exists.<pre><code>public final class Geocoder</code></pre></section>	https://developer.android.com/reference/android/location/Geocoder.html
GnssClock	A										<section class="prog__container">A class containing a GPS clock timestamp.<pre><code>public final class GnssClock</code></pre></section>	https://developer.android.com/reference/android/location/GnssClock.html
GnssMeasurement	A										<section class="prog__container">A class representing a GNSS satellite measurement, containing raw and computed information.<pre><code>public final class GnssMeasurement</code></pre></section>	https://developer.android.com/reference/android/location/GnssMeasurement.html
GnssMeasurementsEvent.Callback	A										<section class="prog__container">Used for receiving GNSS satellite measurements from the GNSS engine. Each measurement contains raw and computed data identifying a satellite. You can implement this interface and call <pre><code>registerGnssMeasurementsCallback(GnssMeasurementsEvent.Callback)</code></pre>.<pre><code>public static abstract class GnssMeasurementsEvent.Callback</code></pre></section>	https://developer.android.com/reference/android/location/GnssMeasurementsEvent.Callback.html
GnssMeasurementsEvent	A										<section class="prog__container">A class implementing a container for data associated with a measurement event. Events are delivered to registered instances of <pre><code>GnssMeasurementsEvent.Callback</code></pre>.<pre><code>public final class GnssMeasurementsEvent</code></pre></section>	https://developer.android.com/reference/android/location/GnssMeasurementsEvent.html
GnssNavigationMessage.Callback	A										<section class="prog__container">Used for receiving GNSS satellite Navigation Messages from the GNSS engine.<pre><code>public static abstract class GnssNavigationMessage.Callback</code></pre></section>	https://developer.android.com/reference/android/location/GnssNavigationMessage.Callback.html
GnssNavigationMessage	A										<section class="prog__container">A class containing a GNSS satellite Navigation Message.<pre><code>public final class GnssNavigationMessage</code></pre></section>	https://developer.android.com/reference/android/location/GnssNavigationMessage.html
GnssStatus.Callback	A										<section class="prog__container">Used for receiving notifications when GNSS events happen.<pre><code>public static abstract class GnssStatus.Callback</code></pre></section>	https://developer.android.com/reference/android/location/GnssStatus.Callback.html
GnssStatus	A										<section class="prog__container">This class represents the current state of the GNSS engine. This class is used in conjunction with the <pre><code>GnssStatus.Callback</code></pre>.<pre><code>public final class GnssStatus</code></pre></section>	https://developer.android.com/reference/android/location/GnssStatus.html
GpsSatellite	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> use <pre><code>GnssStatus</code></pre> and <pre><code>GnssStatus.Callback</code></pre>.<pre><code>public final class GpsSatellite</code></pre></section>	https://developer.android.com/reference/android/location/GpsSatellite.html
GpsStatus	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> use <pre><code>GnssStatus</code></pre> and <pre><code>GnssStatus.Callback</code></pre>.<pre><code>public final class GpsStatus</code></pre></section>	https://developer.android.com/reference/android/location/GpsStatus.html
GpsStatus.Listener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 24.</strong><br/> use <pre><code>GnssStatus.Callback</code></pre> instead.<pre><code>public static interface GpsStatus.Listener</code></pre></section>	https://developer.android.com/reference/android/location/GpsStatus.Listener.html
GpsStatus.NmeaListener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 24.</strong><br/> use <pre><code>OnNmeaMessageListener</code></pre> instead.<pre><code>public static interface GpsStatus.NmeaListener</code></pre></section>	https://developer.android.com/reference/android/location/GpsStatus.NmeaListener.html
Location	A										<section class="prog__container">A data class representing a geographic location.<pre><code>public class Location</code></pre></section>	https://developer.android.com/reference/android/location/Location.html
LocationListener	A										<section class="prog__container">Used for receiving notifications from the LocationManager when the location has changed. These methods are called if the LocationListener has been registered with the location manager service using the <pre><code>requestLocationUpdates(String, long, float, LocationListener)</code></pre> method. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public interface LocationListener</code></pre></section>	https://developer.android.com/reference/android/location/LocationListener.html
LocationManager	A										<section class="prog__container">This class provides access to the system location services. These services allow applications to obtain periodic updates of the device's geographical location, or to fire an application-specified <pre><code>Intent</code></pre> when the device enters the proximity of a given geographical location.<pre><code>public class LocationManager</code></pre></section>	https://developer.android.com/reference/android/location/LocationManager.html
LocationProvider	A										<section class="prog__container">An abstract superclass for location providers. A location provider provides periodic reports on the geographical location of the device.<pre><code>public class LocationProvider</code></pre></section>	https://developer.android.com/reference/android/location/LocationProvider.html
OnNmeaMessageListener	A										<section class="prog__container">Used for receiving NMEA sentences from the GNSS. NMEA 0183 is a standard for communicating with marine electronic devices and is a common method for receiving data from a GNSS, typically over a serial port. See NMEA 0183 for more details. You can implement this interface and call <pre><code>addNmeaListener(GpsStatus.NmeaListener)</code></pre> to receive NMEA data from the GNSS engine.<pre><code>public interface OnNmeaMessageListener</code></pre></section>	https://developer.android.com/reference/android/location/OnNmeaMessageListener.html
android.location	A										<section class="prog__container">Contains the framework API classes that define Android location-based and related services.</section>	https://developer.android.com/reference/android/location/package-summary.html
SettingInjectorService	A										<section class="prog__container">Dynamically specifies the enabled status of a preference injected into the list of app settings displayed by the system settings app<pre><code>public abstract class SettingInjectorService</code></pre></section>	https://developer.android.com/reference/android/location/SettingInjectorService.html
AsyncPlayer	A										<section class="prog__container">Plays a series of audio URIs, but does all the hard work on another thread so that any slowness with preparing or loading doesn't block the calling thread.<pre><code>public class AsyncPlayer</code></pre></section>	https://developer.android.com/reference/android/media/AsyncPlayer.html
AudioAttributes.Builder	A										<section class="prog__container">Builder class for <pre><code>AudioAttributes</code></pre> objects.<pre><code>public static class AudioAttributes.Builder</code></pre></section>	https://developer.android.com/reference/android/media/AudioAttributes.Builder.html
AudioAttributes	A										<section class="prog__container">A class to encapsulate a collection of attributes describing information about an audio stream.<pre><code>public final class AudioAttributes</code></pre></section>	https://developer.android.com/reference/android/media/AudioAttributes.html
AudioDeviceCallback	A										<section class="prog__container">AudioDeviceCallback defines the mechanism by which applications can receive notifications of audio device connection and disconnection events.<pre><code>public abstract class AudioDeviceCallback</code></pre></section>	https://developer.android.com/reference/android/media/AudioDeviceCallback.html
AudioDeviceInfo	A										<section class="prog__container">Class to provide information about the audio devices.<pre><code>public final class AudioDeviceInfo</code></pre></section>	https://developer.android.com/reference/android/media/AudioDeviceInfo.html
AudioFormat.Builder	A										<section class="prog__container">Builder class for <pre><code>AudioFormat</code></pre> objects. Use this class to configure and create an AudioFormat instance. By setting format characteristics such as audio encoding, channel mask or sample rate, you indicate which of those are to vary from the default behavior on this device wherever this audio format is used. See <pre><code>AudioFormat</code></pre> for a complete description of the different parameters that can be used to configure an <pre><code>AudioFormat</code></pre> instance.<pre><code>public static class AudioFormat.Builder</code></pre></section>	https://developer.android.com/reference/android/media/AudioFormat.Builder.html
AudioFormat	A										<section class="prog__container">The <pre><code>AudioFormat</code></pre> class is used to access a number of audio format and channel configuration constants. They are for instance used in <pre><code>AudioTrack</code></pre> and <pre><code>AudioRecord</code></pre>, as valid values in individual parameters of constructors like <pre><code>AudioTrack(int, int, int, int, int, int)</code></pre>, where the fourth parameter is one of the <pre><code>AudioFormat.ENCODING_*</code></pre> constants. The <pre><code>AudioFormat</code></pre> constants are also used in <pre><code>MediaFormat</code></pre> to specify audio related values commonly used in media, such as for <pre><code>KEY_CHANNEL_MASK</code></pre>.<pre><code>public final class AudioFormat</code></pre></section>	https://developer.android.com/reference/android/media/AudioFormat.html
AudioManager.AudioRecordingCallback	A										<section class="prog__container">Interface for receiving update notifications about the recording configuration. Extend this abstract class and register it with <pre><code>registerAudioRecordingCallback(AudioRecordingCallback, Handler)</code></pre> to be notified. Use <pre><code>getActiveRecordingConfigurations()</code></pre> to query the current configuration.<pre><code>public static abstract class AudioManager.AudioRecordingCallback</code></pre></section>	https://developer.android.com/reference/android/media/AudioManager.AudioRecordingCallback.html
AudioManager	A										<section class="prog__container">AudioManager provides access to volume and ringer mode control.<pre><code>public class AudioManager</code></pre></section>	https://developer.android.com/reference/android/media/AudioManager.html
AudioManager.OnAudioFocusChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the audio focus of the system is updated.<pre><code>public static interface AudioManager.OnAudioFocusChangeListener</code></pre></section>	https://developer.android.com/reference/android/media/AudioManager.OnAudioFocusChangeListener.html
AudioRecord.Builder	A										<section class="prog__container">Builder class for <pre><code>AudioRecord</code></pre> objects. Use this class to configure and create an <pre><code>AudioRecord</code></pre> instance. By setting the recording source and audio format parameters, you indicate which of those vary from the default behavior on the device.<pre><code>public static class AudioRecord.Builder</code></pre></section>	https://developer.android.com/reference/android/media/AudioRecord.Builder.html
AudioRecord	A										<section class="prog__container">The AudioRecord class manages the audio resources for Java applications to record audio from the audio input hardware of the platform. This is achieved by "pulling" (reading) the data from the AudioRecord object. The application is responsible for polling the AudioRecord object in time using one of the following three methods: <pre><code>read(byte[], int, int)</code></pre>, <pre><code>read(short[], int, int)</code></pre> or <pre><code>read(ByteBuffer, int)</code></pre>. The choice of which method to use will be based on the audio data storage format that is the most convenient for the user of AudioRecord.<pre><code>public class AudioRecord</code></pre></section>	https://developer.android.com/reference/android/media/AudioRecord.html
AudioRecord.OnRecordPositionUpdateListener	A										<section class="prog__container">Interface definition for a callback to be invoked when an AudioRecord has reached a notification marker set by <pre><code>setNotificationMarkerPosition(int)</code></pre> or for periodic updates on the progress of the record head, as set by <pre><code>setPositionNotificationPeriod(int)</code></pre>.<pre><code>public static interface AudioRecord.OnRecordPositionUpdateListener</code></pre></section>	https://developer.android.com/reference/android/media/AudioRecord.OnRecordPositionUpdateListener.html
AudioRecord.OnRoutingChangedListener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 24.</strong><br/> users should switch to the general purpose <pre><code>AudioRouting.OnRoutingChangedListener</code></pre> class instead.<pre><code>public static interface AudioRecord.OnRoutingChangedListener</code></pre></section>	https://developer.android.com/reference/android/media/AudioRecord.OnRoutingChangedListener.html
AudioRecordingConfiguration	A										<section class="prog__container">The AudioRecordingConfiguration class collects the information describing an audio recording session.<pre><code>public final class AudioRecordingConfiguration</code></pre></section>	https://developer.android.com/reference/android/media/AudioRecordingConfiguration.html
AudioRouting	A										<section class="prog__container">AudioRouting defines an interface for controlling routing and routing notifications in AudioTrack and AudioRecord objects.<pre><code>public interface AudioRouting</code></pre></section>	https://developer.android.com/reference/android/media/AudioRouting.html
AudioRouting.OnRoutingChangedListener	A										<section class="prog__container">Defines the interface by which applications can receive notifications of routing changes for the associated <pre><code>AudioRouting</code></pre>.<pre><code>public static interface AudioRouting.OnRoutingChangedListener</code></pre></section>	https://developer.android.com/reference/android/media/AudioRouting.OnRoutingChangedListener.html
AudioTimestamp	A										<section class="prog__container">Structure that groups a position in frame units relative to an assumed audio stream, together with the estimated time when that frame enters or leaves the audio processing pipeline on that device. This can be used to coordinate events and interactions with the external environment.<pre><code>public final class AudioTimestamp</code></pre></section>	https://developer.android.com/reference/android/media/AudioTimestamp.html
AudioTrack.Builder	A										<section class="prog__container">Builder class for <pre><code>AudioTrack</code></pre> objects. Use this class to configure and create an <pre><code>AudioTrack</code></pre> instance. By setting audio attributes and audio format parameters, you indicate which of those vary from the default behavior on the device.<pre><code>public static class AudioTrack.Builder</code></pre></section>	https://developer.android.com/reference/android/media/AudioTrack.Builder.html
AudioTrack	A										<section class="prog__container">The AudioTrack class manages and plays a single audio resource for Java applications. It allows streaming of PCM audio buffers to the audio sink for playback. This is achieved by "pushing" the data to the AudioTrack object using one of the <pre><code>write(byte[], int, int)</code></pre>, <pre><code>write(short[], int, int)</code></pre>, and <pre><code>write(float[], int, int, int)</code></pre> methods.<pre><code>public class AudioTrack</code></pre></section>	https://developer.android.com/reference/android/media/AudioTrack.html
AudioTrack.OnPlaybackPositionUpdateListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the playback head position of an AudioTrack has reached a notification marker or has increased by a certain period.<pre><code>public static interface AudioTrack.OnPlaybackPositionUpdateListener</code></pre></section>	https://developer.android.com/reference/android/media/AudioTrack.OnPlaybackPositionUpdateListener.html
AudioTrack.OnRoutingChangedListener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 24.</strong><br/> users should switch to the general purpose <pre><code>AudioRouting.OnRoutingChangedListener</code></pre> class instead.<pre><code>public static interface AudioTrack.OnRoutingChangedListener</code></pre></section>	https://developer.android.com/reference/android/media/AudioTrack.OnRoutingChangedListener.html
CamcorderProfile	A										<section class="prog__container">Retrieves the predefined camcorder profile settings for camcorder applications. These settings are read-only.<pre><code>public class CamcorderProfile</code></pre></section>	https://developer.android.com/reference/android/media/CamcorderProfile.html
CameraProfile	A										<section class="prog__container">The CameraProfile class is used to retrieve the pre-defined still image capture (jpeg) quality levels (0-100) used for low, medium, and high quality settings in the Camera application.<pre><code>public class CameraProfile</code></pre></section>	https://developer.android.com/reference/android/media/CameraProfile.html
DeniedByServerException	A										<section class="prog__container">Exception thrown when the provisioning server or key server denies a certficate or license for a device.<pre><code>public final class DeniedByServerException</code></pre></section>	https://developer.android.com/reference/android/media/DeniedByServerException.html
DrmInitData	A										<section class="prog__container">Encapsulates initialization data required by a <pre><code>MediaDrm</code></pre> instance.<pre><code>public abstract class DrmInitData</code></pre></section>	https://developer.android.com/reference/android/media/DrmInitData.html
DrmInitData.SchemeInitData	A										<section class="prog__container">Scheme initialization data.<pre><code>public static final class DrmInitData.SchemeInitData</code></pre></section>	https://developer.android.com/reference/android/media/DrmInitData.SchemeInitData.html
ExifInterface	A										<section class="prog__container">This is a class for reading and writing Exif tags in a JPEG file or a RAW image file.<pre><code>public class ExifInterface</code></pre></section>	https://developer.android.com/reference/android/media/ExifInterface.html
FaceDetector.Face	A										<section class="prog__container">A Face contains all the information identifying the location of a face in a bitmap.<pre><code>public class FaceDetector.Face</code></pre></section>	https://developer.android.com/reference/android/media/FaceDetector.Face.html
FaceDetector	A										<section class="prog__container">Identifies the faces of people in a <pre><code>Bitmap</code></pre> graphic object.<pre><code>public class FaceDetector</code></pre></section>	https://developer.android.com/reference/android/media/FaceDetector.html
Image	A										<section class="prog__container"><pre><code>public abstract class Image</code></pre></section>	https://developer.android.com/reference/android/media/Image.html
Image.Plane	A										<section class="prog__container"><pre><code>public static abstract class Image.Plane</code></pre></section>	https://developer.android.com/reference/android/media/Image.Plane.html
ImageReader	A										<section class="prog__container"><pre><code>public class ImageReader</code></pre></section>	https://developer.android.com/reference/android/media/ImageReader.html
ImageReader.OnImageAvailableListener	A										<section class="prog__container">Callback interface for being notified that a new image is available.<pre><code>public static interface ImageReader.OnImageAvailableListener</code></pre></section>	https://developer.android.com/reference/android/media/ImageReader.OnImageAvailableListener.html
ImageWriter	A										<section class="prog__container"><pre><code>public class ImageWriter</code></pre></section>	https://developer.android.com/reference/android/media/ImageWriter.html
ImageWriter.OnImageReleasedListener	A										<section class="prog__container">ImageWriter callback interface, used to to asynchronously notify the application of various ImageWriter events.<pre><code>public static interface ImageWriter.OnImageReleasedListener</code></pre></section>	https://developer.android.com/reference/android/media/ImageWriter.OnImageReleasedListener.html
JetPlayer	A										<section class="prog__container">JetPlayer provides access to JET content playback and control.<pre><code>public class JetPlayer</code></pre></section>	https://developer.android.com/reference/android/media/JetPlayer.html
JetPlayer.OnJetEventListener	A										<section class="prog__container">Handles the notification when the JET engine generates an event.<pre><code>public static interface JetPlayer.OnJetEventListener</code></pre></section>	https://developer.android.com/reference/android/media/JetPlayer.OnJetEventListener.html
MediaActionSound	A										<section class="prog__container"><pre><code>public class MediaActionSound</code></pre></section>	https://developer.android.com/reference/android/media/MediaActionSound.html
MediaCodec.BufferInfo	A										<section class="prog__container">Per buffer metadata includes an offset and size specifying the range of valid data in the associated codec (output) buffer.<pre><code>public static final class MediaCodec.BufferInfo</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodec.BufferInfo.html
MediaCodec.Callback	A										<section class="prog__container">MediaCodec callback interface. Used to notify the user asynchronously of various MediaCodec events.<pre><code>public static abstract class MediaCodec.Callback</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodec.Callback.html
MediaCodec.CodecException	A										<section class="prog__container">Thrown when an internal codec error occurs.<pre><code>public static final class MediaCodec.CodecException</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodec.CodecException.html
MediaCodec.CryptoException	A										<section class="prog__container">Thrown when a crypto error occurs while queueing a secure input buffer.<pre><code>public static final class MediaCodec.CryptoException</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodec.CryptoException.html
MediaCodec.CryptoInfo	A										<section class="prog__container">Metadata describing the structure of a (at least partially) encrypted input sample. A buffer's data is considered to be partitioned into "subSamples", each subSample starts with a (potentially empty) run of plain, unencrypted bytes followed by a (also potentially empty) run of encrypted bytes. If pattern encryption applies, each of the latter runs is encrypted only partly, according to a repeating pattern of "encrypt" and "skip" blocks. numBytesOfClearData can be null to indicate that all data is encrypted. This information encapsulates per-sample metadata as outlined in ISO/IEC FDIS 23001-7:2011 "Common encryption in ISO base media file format files".<pre><code>public static final class MediaCodec.CryptoInfo</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodec.CryptoInfo.html
MediaCodec.CryptoInfo.Pattern	A										<section class="prog__container">Metadata describing an encryption pattern for the protected bytes in a subsample. An encryption pattern consists of a repeating sequence of crypto blocks comprised of a number of encrypted blocks followed by a number of unencrypted, or skipped, blocks.<pre><code>public static final class MediaCodec.CryptoInfo.Pattern</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodec.CryptoInfo.Pattern.html
MediaCodec	A										<section class="prog__container">MediaCodec class can be used to access low-level media codecs, i.e. encoder/decoder components. It is part of the Android low-level multimedia support infrastructure (normally used together with <pre><code>MediaExtractor</code></pre>, <pre><code>MediaSync</code></pre>, <pre><code>MediaMuxer</code></pre>, <pre><code>MediaCrypto</code></pre>, <pre><code>MediaDrm</code></pre>, <pre><code>Image</code></pre>, <pre><code>Surface</code></pre>, and <pre><code>AudioTrack</code></pre>.)<pre><code>public final class MediaCodec</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodec.html
MediaCodec.OnFrameRenderedListener	A										<section class="prog__container">Listener to be called when an output frame has rendered on the output surface<pre><code>public static interface MediaCodec.OnFrameRenderedListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodec.OnFrameRenderedListener.html
MediaCodecInfo.AudioCapabilities	A										<section class="prog__container">A class that supports querying the audio capabilities of a codec.<pre><code>public static final class MediaCodecInfo.AudioCapabilities</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodecInfo.AudioCapabilities.html
MediaCodecInfo.CodecCapabilities	A										<section class="prog__container">Encapsulates the capabilities of a given codec component. For example, what profile/level combinations it supports and what colorspaces it is capable of providing the decoded data in, as well as some codec-type specific capability flags.<pre><code>public static final class MediaCodecInfo.CodecCapabilities</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodecInfo.CodecCapabilities.html
MediaCodecInfo.CodecProfileLevel	A										<section class="prog__container">Encapsulates the profiles available for a codec component.<pre><code>public static final class MediaCodecInfo.CodecProfileLevel</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodecInfo.CodecProfileLevel.html
MediaCodecInfo.EncoderCapabilities	A										<section class="prog__container">A class that supports querying the encoding capabilities of a codec.<pre><code>public static final class MediaCodecInfo.EncoderCapabilities</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodecInfo.EncoderCapabilities.html
MediaCodecInfo	A										<section class="prog__container">Provides information about a given media codec available on the device. You can iterate through all codecs available by querying <pre><code>MediaCodecList</code></pre>. For example, here's how to find an encoder that supports a given MIME type: <pre> private static MediaCodecInfo selectCodec(String mimeType) { int numCodecs = MediaCodecList.getCodecCount(); for (int i = 0; i &lt; numCodecs; i++) { MediaCodecInfo codecInfo = MediaCodecList.getCodecInfoAt(i); if (!codecInfo.isEncoder()) { continue; } String[] types = codecInfo.getSupportedTypes(); for (int j = 0; j &lt; types.length; j++) { if (types[j].equalsIgnoreCase(mimeType)) { return codecInfo; } } } return null; }</pre><pre><code>public final class MediaCodecInfo</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodecInfo.html
MediaCodecInfo.VideoCapabilities	A										<section class="prog__container">A class that supports querying the video capabilities of a codec.<pre><code>public static final class MediaCodecInfo.VideoCapabilities</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodecInfo.VideoCapabilities.html
MediaCodecList	A										<section class="prog__container">Allows you to enumerate available codecs, each specified as a <pre><code>MediaCodecInfo</code></pre> object, find a codec supporting a given format and query the capabilities of a given codec.<pre><code>public final class MediaCodecList</code></pre></section>	https://developer.android.com/reference/android/media/MediaCodecList.html
MediaCrypto	A										<section class="prog__container">MediaCrypto class can be used in conjunction with <pre><code>MediaCodec</code></pre> to decode encrypted media data. Crypto schemes are assigned 16 byte UUIDs, the method <pre><code>isCryptoSchemeSupported(UUID)</code></pre> can be used to query if a given scheme is supported on the device.<pre><code>public final class MediaCrypto</code></pre></section>	https://developer.android.com/reference/android/media/MediaCrypto.html
MediaCryptoException	A										<section class="prog__container">Exception thrown if MediaCrypto object could not be instantiated or if unable to perform an operation on the MediaCrypto object.<pre><code>public final class MediaCryptoException</code></pre></section>	https://developer.android.com/reference/android/media/MediaCryptoException.html
MediaDataSource	A										<section class="prog__container">For supplying media data to the framework. Implement this if your app has special requirements for the way media data is obtained. <p class="note">Methods of this interface may be called on multiple different threads. There will be a thread synchronization point between each call to ensure that modifications to the state of your MediaDataSource are visible to future calls. This means you don't need to do your own synchronization unless you're modifying the MediaDataSource from another thread while it's being used by the framework.<pre><code>public abstract class MediaDataSource</code></pre></section>	https://developer.android.com/reference/android/media/MediaDataSource.html
MediaDescription.Builder	A										<section class="prog__container">Builder for <pre><code>MediaDescription</code></pre> objects.<pre><code>public static class MediaDescription.Builder</code></pre></section>	https://developer.android.com/reference/android/media/MediaDescription.Builder.html
MediaDescription	A										<section class="prog__container">A simple set of metadata for a media item suitable for display. This can be created using the Builder or retrieved from existing metadata using <pre><code>getDescription()</code></pre>.<pre><code>public class MediaDescription</code></pre></section>	https://developer.android.com/reference/android/media/MediaDescription.html
MediaDrm.CryptoSession	A										<section class="prog__container">In addition to supporting decryption of DASH Common Encrypted Media, the MediaDrm APIs provide the ability to securely deliver session keys from an operator's session key server to a client device, based on the factory-installed root of trust, and then perform encrypt, decrypt, sign and verify operations with the session key on arbitrary user data.<pre><code>public final class MediaDrm.CryptoSession</code></pre></section>	https://developer.android.com/reference/android/media/MediaDrm.CryptoSession.html
MediaDrm	A										<section class="prog__container">MediaDrm can be used to obtain keys for decrypting protected media streams, in conjunction with <pre><code>MediaCrypto</code></pre>. The MediaDrm APIs are designed to support the ISO/IEC 23001-7: Common Encryption standard, but may also be used to implement other encryption schemes.<pre><code>public final class MediaDrm</code></pre></section>	https://developer.android.com/reference/android/media/MediaDrm.html
MediaDrm.KeyRequest	A										<section class="prog__container">Contains the opaque data an app uses to request keys from a license server<pre><code>public static final class MediaDrm.KeyRequest</code></pre></section>	https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html
MediaDrm.KeyStatus	A										<section class="prog__container">Defines the status of a key. A KeyStatus for each key in a session is provided to the <pre><code>onKeyStatusChange(MediaDrm, byte[], List<mediadrm.keystatus>, boolean)</mediadrm.keystatus></code></pre> listener.<pre><code>public static final class MediaDrm.KeyStatus</code></pre></section>	https://developer.android.com/reference/android/media/MediaDrm.KeyStatus.html
MediaDrm.MediaDrmStateException	A										<section class="prog__container">Thrown when an unrecoverable failure occurs during a MediaDrm operation. Extends java.lang.IllegalStateException with the addition of an error code that may be useful in diagnosing the failure.<pre><code>public static final class MediaDrm.MediaDrmStateException</code></pre></section>	https://developer.android.com/reference/android/media/MediaDrm.MediaDrmStateException.html
MediaDrm.OnEventListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a drm event occurs<pre><code>public static interface MediaDrm.OnEventListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaDrm.OnEventListener.html
MediaDrm.OnExpirationUpdateListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a drm session expiration update occurs<pre><code>public static interface MediaDrm.OnExpirationUpdateListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaDrm.OnExpirationUpdateListener.html
MediaDrm.OnKeyStatusChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the keys in a drm session change states.<pre><code>public static interface MediaDrm.OnKeyStatusChangeListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaDrm.OnKeyStatusChangeListener.html
MediaDrm.ProvisionRequest	A										<section class="prog__container">Contains the opaque data an app uses to request a certificate from a provisioning server<pre><code>public static final class MediaDrm.ProvisionRequest</code></pre></section>	https://developer.android.com/reference/android/media/MediaDrm.ProvisionRequest.html
MediaDrmException	A										<section class="prog__container">Base class for MediaDrm exceptions<pre><code>public class MediaDrmException</code></pre></section>	https://developer.android.com/reference/android/media/MediaDrmException.html
MediaDrmResetException	A										<section class="prog__container">This exception is thrown when the MediaDrm instance has become unusable due to a restart of the mediaserver process. To continue, the app must release the MediaDrm object, then create and initialize a new one.<pre><code>public class MediaDrmResetException</code></pre></section>	https://developer.android.com/reference/android/media/MediaDrmResetException.html
MediaExtractor	A										<section class="prog__container">MediaExtractor facilitates extraction of demuxed, typically encoded, media data from a data source.<pre><code>public final class MediaExtractor</code></pre></section>	https://developer.android.com/reference/android/media/MediaExtractor.html
MediaFormat	A										<section class="prog__container">Encapsulates the information describing the format of media data, be it audio or video. The format of the media data is specified as string/value pairs. Keys common to all audio/video formats, <b>all keys not marked optional are mandatory</b>: <table> <tr><th>Name</th><th>Value Type</th><th>Description</th></tr> <tr><td><pre><code>KEY_MIME</code></pre></td><td>String</td><td>The type of the format.</td></tr> <tr><td><pre><code>KEY_MAX_INPUT_SIZE</code></pre></td><td>Integer</td><td>optional, maximum size of a buffer of input data</td></tr> <tr><td><pre><code>KEY_BIT_RATE</code></pre></td><td>Integer</td><td><b>encoder-only</b>, desired bitrate in bits/second</td></tr> </table> Video formats have the following keys: <table> <tr><th>Name</th><th>Value Type</th><th>Description</th></tr> <tr><td><pre><code>KEY_WIDTH</code></pre></td><td>Integer</td><td></td></tr> <tr><td><pre><code>KEY_HEIGHT</code></pre></td><td>Integer</td><td></td></tr> <tr><td><pre><code>KEY_COLOR_FORMAT</code></pre></td><td>Integer</td><td>set by the user for encoders, readable in the output format of decoders</td></tr></table><pre><code>public final class MediaFormat</code></pre></section>	https://developer.android.com/reference/android/media/MediaFormat.html
MediaMetadata.Builder	A										<section class="prog__container">Use to build MediaMetadata objects. The system defined metadata keys must use the appropriate data type.<pre><code>public static final class MediaMetadata.Builder</code></pre></section>	https://developer.android.com/reference/android/media/MediaMetadata.Builder.html
MediaMetadata	A										<section class="prog__container">Contains metadata about an item, such as the title, artist, etc.<pre><code>public final class MediaMetadata</code></pre></section>	https://developer.android.com/reference/android/media/MediaMetadata.html
MediaMetadataEditor	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> Use <pre><code>MediaMetadata</code></pre> instead together with <pre><code>MediaSession</code></pre>.<pre><code>public abstract class MediaMetadataEditor</code></pre></section>	https://developer.android.com/reference/android/media/MediaMetadataEditor.html
MediaMetadataRetriever	A										<section class="prog__container">MediaMetadataRetriever class provides a unified interface for retrieving frame and meta data from an input media file.<pre><code>public class MediaMetadataRetriever</code></pre></section>	https://developer.android.com/reference/android/media/MediaMetadataRetriever.html
MediaMuxer	A										<section class="prog__container">MediaMuxer facilitates muxing elementary streams. Currently supports mp4 or webm file as the output and at most one audio and/or one video elementary stream. MediaMuxer does not support muxing B-frames.<pre><code>public final class MediaMuxer</code></pre></section>	https://developer.android.com/reference/android/media/MediaMuxer.html
MediaMuxer.OutputFormat	A										<section class="prog__container">Defines the output format. These constants are used with constructor.<pre><code>public static final class MediaMuxer.OutputFormat</code></pre></section>	https://developer.android.com/reference/android/media/MediaMuxer.OutputFormat.html
MediaPlayer	A										<section class="prog__container">MediaPlayer class can be used to control playback of audio/video files and streams. An example on how to use the methods in this class can be found in <pre><code>VideoView</code></pre>.<pre><code>public class MediaPlayer</code></pre></section>	https://developer.android.com/reference/android/media/MediaPlayer.html
MediaPlayer.OnBufferingUpdateListener	A										<section class="prog__container">Interface definition of a callback to be invoked indicating buffering status of a media resource being streamed over the network.<pre><code>public static interface MediaPlayer.OnBufferingUpdateListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaPlayer.OnBufferingUpdateListener.html
MediaPlayer.OnCompletionListener	A										<section class="prog__container">Interface definition for a callback to be invoked when playback of a media source has completed.<pre><code>public static interface MediaPlayer.OnCompletionListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaPlayer.OnCompletionListener.html
MediaPlayer.OnErrorListener	A										<section class="prog__container">Interface definition of a callback to be invoked when there has been an error during an asynchronous operation (other errors will throw exceptions at method call time).<pre><code>public static interface MediaPlayer.OnErrorListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaPlayer.OnErrorListener.html
MediaPlayer.OnInfoListener	A										<section class="prog__container">Interface definition of a callback to be invoked to communicate some info and/or warning about the media or its playback.<pre><code>public static interface MediaPlayer.OnInfoListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaPlayer.OnInfoListener.html
MediaPlayer.OnPreparedListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the media source is ready for playback.<pre><code>public static interface MediaPlayer.OnPreparedListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaPlayer.OnPreparedListener.html
MediaPlayer.OnSeekCompleteListener	A										<section class="prog__container">Interface definition of a callback to be invoked indicating the completion of a seek operation.<pre><code>public static interface MediaPlayer.OnSeekCompleteListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaPlayer.OnSeekCompleteListener.html
MediaPlayer.OnTimedMetaDataAvailableListener	A										<section class="prog__container">Interface definition of a callback to be invoked when a track has timed metadata available.<pre><code>public static interface MediaPlayer.OnTimedMetaDataAvailableListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaPlayer.OnTimedMetaDataAvailableListener.html
MediaPlayer.OnTimedTextListener	A										<section class="prog__container">Interface definition of a callback to be invoked when a timed text is available for display.<pre><code>public static interface MediaPlayer.OnTimedTextListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaPlayer.OnTimedTextListener.html
MediaPlayer.OnVideoSizeChangedListener	A										<section class="prog__container">Interface definition of a callback to be invoked when the video size is first known or updated<pre><code>public static interface MediaPlayer.OnVideoSizeChangedListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaPlayer.OnVideoSizeChangedListener.html
MediaPlayer.TrackInfo	A										<section class="prog__container">Class for MediaPlayer to return each audio/video/subtitle track's metadata.<pre><code>public static class MediaPlayer.TrackInfo</code></pre></section>	https://developer.android.com/reference/android/media/MediaPlayer.TrackInfo.html
MediaRecorder.AudioEncoder	A										<section class="prog__container">Defines the audio encoding. These constants are used with <pre><code>setAudioEncoder(int)</code></pre>.<pre><code>public final class MediaRecorder.AudioEncoder</code></pre></section>	https://developer.android.com/reference/android/media/MediaRecorder.AudioEncoder.html
MediaRecorder.AudioSource	A										<section class="prog__container">Defines the audio source. An audio source defines both a default physical source of audio signal, and a recording configuration. These constants are for instance used in <pre><code>setAudioSource(int)</code></pre> or <pre><code>setAudioSource(int)</code></pre>.<pre><code>public final class MediaRecorder.AudioSource</code></pre></section>	https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html
MediaRecorder	A										<section class="prog__container">Used to record audio and video. The recording control is based on a simple state machine (see below).<pre><code>public class MediaRecorder</code></pre></section>	https://developer.android.com/reference/android/media/MediaRecorder.html
MediaRecorder.OnErrorListener	A										<section class="prog__container">Interface definition for a callback to be invoked when an error occurs while recording.<pre><code>public static interface MediaRecorder.OnErrorListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaRecorder.OnErrorListener.html
MediaRecorder.OnInfoListener	A										<section class="prog__container">Interface definition for a callback to be invoked when an error occurs while recording.<pre><code>public static interface MediaRecorder.OnInfoListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaRecorder.OnInfoListener.html
MediaRecorder.OutputFormat	A										<section class="prog__container">Defines the output format. These constants are used with <pre><code>setOutputFormat(int)</code></pre>.<pre><code>public final class MediaRecorder.OutputFormat</code></pre></section>	https://developer.android.com/reference/android/media/MediaRecorder.OutputFormat.html
MediaRecorder.VideoEncoder	A										<section class="prog__container">Defines the video encoding. These constants are used with <pre><code>setVideoEncoder(int)</code></pre>.<pre><code>public final class MediaRecorder.VideoEncoder</code></pre></section>	https://developer.android.com/reference/android/media/MediaRecorder.VideoEncoder.html
MediaRecorder.VideoSource	A										<section class="prog__container">Defines the video source. These constants are used with <pre><code>setVideoSource(int)</code></pre>.<pre><code>public final class MediaRecorder.VideoSource</code></pre></section>	https://developer.android.com/reference/android/media/MediaRecorder.VideoSource.html
MediaRouter.Callback	A										<section class="prog__container">Interface for receiving events about media routing changes. All methods of this interface will be called from the application's main thread.<pre><code>public static abstract class MediaRouter.Callback</code></pre></section>	https://developer.android.com/reference/android/media/MediaRouter.Callback.html
MediaRouter	A										<section class="prog__container">MediaRouter allows applications to control the routing of media channels and streams from the current device to external speakers and destination devices.<pre><code>public class MediaRouter</code></pre></section>	https://developer.android.com/reference/android/media/MediaRouter.html
MediaRouter.RouteCategory	A										<section class="prog__container">Definition of a category of routes. All routes belong to a category.<pre><code>public static class MediaRouter.RouteCategory</code></pre></section>	https://developer.android.com/reference/android/media/MediaRouter.RouteCategory.html
MediaRouter.RouteGroup	A										<section class="prog__container">Information about a route that consists of multiple other routes in a group.<pre><code>public static class MediaRouter.RouteGroup</code></pre></section>	https://developer.android.com/reference/android/media/MediaRouter.RouteGroup.html
MediaRouter.RouteInfo	A										<section class="prog__container">Information about a media route.<pre><code>public static class MediaRouter.RouteInfo</code></pre></section>	https://developer.android.com/reference/android/media/MediaRouter.RouteInfo.html
MediaRouter.SimpleCallback	A										<section class="prog__container">Stub implementation of <pre><code>MediaRouter.Callback</code></pre>. Each abstract method is defined as a no-op. Override just the ones you need.<pre><code>public static class MediaRouter.SimpleCallback</code></pre></section>	https://developer.android.com/reference/android/media/MediaRouter.SimpleCallback.html
MediaRouter.UserRouteInfo	A										<section class="prog__container">Information about a route that the application may define and modify. A user route defaults to <pre><code>PLAYBACK_TYPE_REMOTE</code></pre> and <pre><code>PLAYBACK_VOLUME_FIXED</code></pre>.<pre><code>public static class MediaRouter.UserRouteInfo</code></pre></section>	https://developer.android.com/reference/android/media/MediaRouter.UserRouteInfo.html
MediaRouter.VolumeCallback	A										<section class="prog__container">Interface for receiving events about volume changes. All methods of this interface will be called from the application's main thread.<pre><code>public static abstract class MediaRouter.VolumeCallback</code></pre></section>	https://developer.android.com/reference/android/media/MediaRouter.VolumeCallback.html
MediaScannerConnection	A										<section class="prog__container">MediaScannerConnection provides a way for applications to pass a newly created or downloaded media file to the media scanner service. The media scanner service will read metadata from the file and add the file to the media content provider. The MediaScannerConnectionClient provides an interface for the media scanner service to return the Uri for a newly scanned file to the client of the MediaScannerConnection class.<pre><code>public class MediaScannerConnection</code></pre></section>	https://developer.android.com/reference/android/media/MediaScannerConnection.html
MediaScannerConnection.MediaScannerConnectionClient	A										<section class="prog__container">An interface for notifying clients of MediaScannerConnection when a connection to the MediaScanner service has been established and when the scanning of a file has completed.<pre><code>public static interface MediaScannerConnection.MediaScannerConnectionClient</code></pre></section>	https://developer.android.com/reference/android/media/MediaScannerConnection.MediaScannerConnectionClient.html
MediaScannerConnection.OnScanCompletedListener	A										<section class="prog__container">Interface for notifying clients of the result of scanning a requested media file.<pre><code>public static interface MediaScannerConnection.OnScanCompletedListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaScannerConnection.OnScanCompletedListener.html
MediaSync.Callback	A										<section class="prog__container">MediaSync callback interface. Used to notify the user asynchronously of various MediaSync events.<pre><code>public static abstract class MediaSync.Callback</code></pre></section>	https://developer.android.com/reference/android/media/MediaSync.Callback.html
MediaSync	A										<section class="prog__container">MediaSync class can be used to synchronously playback audio and video streams. It can be used to play audio-only or video-only stream, too.<pre><code>public final class MediaSync</code></pre></section>	https://developer.android.com/reference/android/media/MediaSync.html
MediaSync.OnErrorListener	A										<section class="prog__container">Interface definition of a callback to be invoked when there has been an error during an asynchronous operation (other errors will throw exceptions at method call time).<pre><code>public static interface MediaSync.OnErrorListener</code></pre></section>	https://developer.android.com/reference/android/media/MediaSync.OnErrorListener.html
MediaSyncEvent	A										<section class="prog__container">The MediaSyncEvent class defines events that can be used to synchronize playback or capture actions between different players and recorders.<pre><code>public class MediaSyncEvent</code></pre></section>	https://developer.android.com/reference/android/media/MediaSyncEvent.html
MediaTimestamp	A										<section class="prog__container">An immutable object that represents the linear correlation between the media time and the system time. It contains the media clock rate, together with the media timestamp of an anchor frame and the system time when that frame was presented or is committed to be presented.<pre><code>public final class MediaTimestamp</code></pre></section>	https://developer.android.com/reference/android/media/MediaTimestamp.html
NotProvisionedException	A										<section class="prog__container">Exception thrown when an operation on a MediaDrm object is attempted and the device does not have a certificate. The app should obtain and install a certificate using the MediaDrm provisioning methods then retry the operation.<pre><code>public final class NotProvisionedException</code></pre></section>	https://developer.android.com/reference/android/media/NotProvisionedException.html
android.media	A										<section class="prog__container">The Media APIs are used to play and, in some cases, record media files. This includes audio (e.g., play MP3s or other music files, ringtones, game sound effects, or DTMF tones) and video (e.g., play a video streamed over the web or from local storage). </section>	https://developer.android.com/reference/android/media/package-summary.html
PlaybackParams	A										<section class="prog__container">Structure for common playback params. Used by <pre><code>AudioTrack</code></pre> <pre><code>getPlaybackParams()</code></pre> and <pre><code>setPlaybackParams(PlaybackParams)</code></pre> to control playback behavior.<pre><code>public final class PlaybackParams</code></pre></section>	https://developer.android.com/reference/android/media/PlaybackParams.html
Rating	A										<section class="prog__container">A class to encapsulate rating information used as content metadata. A rating is defined by its rating style (see <pre><code>RATING_HEART</code></pre>, <pre><code>RATING_THUMB_UP_DOWN</code></pre>, <pre><code>RATING_3_STARS</code></pre>, <pre><code>RATING_4_STARS</code></pre>, <pre><code>RATING_5_STARS</code></pre> or <pre><code>RATING_PERCENTAGE</code></pre>) and the actual rating value (which may be defined as "unrated"), both of which are defined when the rating instance is constructed through one of the factory methods.<pre><code>public final class Rating</code></pre></section>	https://developer.android.com/reference/android/media/Rating.html
RemoteControlClient	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> Use <pre><code>MediaSession</code></pre> instead.<pre><code>public class RemoteControlClient</code></pre></section>	https://developer.android.com/reference/android/media/RemoteControlClient.html
RemoteControlClient.MetadataEditor	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> Use <pre><code>MediaMetadata</code></pre> and <pre><code>MediaSession</code></pre> instead.<pre><code>public class RemoteControlClient.MetadataEditor</code></pre></section>	https://developer.android.com/reference/android/media/RemoteControlClient.MetadataEditor.html
RemoteControlClient.OnGetPlaybackPositionListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the media playback position is queried.<pre><code>public static interface RemoteControlClient.OnGetPlaybackPositionListener</code></pre></section>	https://developer.android.com/reference/android/media/RemoteControlClient.OnGetPlaybackPositionListener.html
RemoteControlClient.OnMetadataUpdateListener	A										<section class="prog__container">Interface definition for a callback to be invoked when one of the metadata values has been updated. Implement this interface to receive metadata updates after registering your listener through <pre><code>setMetadataUpdateListener(OnMetadataUpdateListener)</code></pre>.<pre><code>public static interface RemoteControlClient.OnMetadataUpdateListener</code></pre></section>	https://developer.android.com/reference/android/media/RemoteControlClient.OnMetadataUpdateListener.html
RemoteControlClient.OnPlaybackPositionUpdateListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the media playback position is requested to be updated.<pre><code>public static interface RemoteControlClient.OnPlaybackPositionUpdateListener</code></pre></section>	https://developer.android.com/reference/android/media/RemoteControlClient.OnPlaybackPositionUpdateListener.html
RemoteController	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> Use <pre><code>MediaController</code></pre> instead.<pre><code>public final class RemoteController</code></pre></section>	https://developer.android.com/reference/android/media/RemoteController.html
RemoteController.MetadataEditor	A										<section class="prog__container">A class to read the metadata published by a <pre><code>RemoteControlClient</code></pre>, or send a <pre><code>RemoteControlClient</code></pre> new values for keys that can be edited.<pre><code>public class RemoteController.MetadataEditor</code></pre></section>	https://developer.android.com/reference/android/media/RemoteController.MetadataEditor.html
RemoteController.OnClientUpdateListener	A										<section class="prog__container">Interface definition for the callbacks to be invoked whenever media events, metadata and playback status are available.<pre><code>public static interface RemoteController.OnClientUpdateListener</code></pre></section>	https://developer.android.com/reference/android/media/RemoteController.OnClientUpdateListener.html
ResourceBusyException	A										<section class="prog__container">Exception thrown when an operation on a MediaDrm object is attempted and hardware resources are not available, due to being in use.<pre><code>public final class ResourceBusyException</code></pre></section>	https://developer.android.com/reference/android/media/ResourceBusyException.html
Ringtone	A										<section class="prog__container">Ringtone provides a quick method for playing a ringtone, notification, or other similar types of sounds.<pre><code>public class Ringtone</code></pre></section>	https://developer.android.com/reference/android/media/Ringtone.html
RingtoneManager	A										<section class="prog__container">RingtoneManager provides access to ringtones, notification, and other types of sounds. It manages querying the different media providers and combines the results into a single cursor. It also provides a <pre><code>Ringtone</code></pre> for each ringtone. We generically call these sounds ringtones, however the <pre><code>TYPE_RINGTONE</code></pre> refers to the type of sounds that are suitable for the phone ringer.<pre><code>public class RingtoneManager</code></pre></section>	https://developer.android.com/reference/android/media/RingtoneManager.html
SoundPool.Builder	A										<section class="prog__container">Builder class for <pre><code>SoundPool</code></pre> objects.<pre><code>public static class SoundPool.Builder</code></pre></section>	https://developer.android.com/reference/android/media/SoundPool.Builder.html
SoundPool	A										<section class="prog__container">The SoundPool class manages and plays audio resources for applications.<pre><code>public class SoundPool</code></pre></section>	https://developer.android.com/reference/android/media/SoundPool.html
SoundPool.OnLoadCompleteListener	A										<section class="prog__container"><pre><code>public static interface SoundPool.OnLoadCompleteListener</code></pre></section>	https://developer.android.com/reference/android/media/SoundPool.OnLoadCompleteListener.html
SyncParams	A										<section class="prog__container">Structure for common A/V sync params. Used by <pre><code>MediaSync</code></pre> {link MediaSync#getSyncParams()} and {link MediaSync#setSyncParams(SyncParams)} to control A/V sync behavior.<pre><code>public final class SyncParams</code></pre></section>	https://developer.android.com/reference/android/media/SyncParams.html
ThumbnailUtils	A										<section class="prog__container">Thumbnail generation routines for media provider.<pre><code>public class ThumbnailUtils</code></pre></section>	https://developer.android.com/reference/android/media/ThumbnailUtils.html
TimedMetaData	A										<section class="prog__container">Class that embodies one timed metadata access unit, including <ul> <li> a time stamp, and </li> <li> raw uninterpreted byte-array extracted directly from the container. </li> </ul><pre><code>public final class TimedMetaData</code></pre></section>	https://developer.android.com/reference/android/media/TimedMetaData.html
TimedText	A										<section class="prog__container">Class to hold the timed text's metadata, including: <ul> <li> The characters for rendering</li> <li> The rendering position for the timed text</li> </ul><pre><code>public final class TimedText</code></pre></section>	https://developer.android.com/reference/android/media/TimedText.html
ToneGenerator	A										<section class="prog__container">This class provides methods to play DTMF tones (ITU-T Recommendation Q.23), call supervisory tones (3GPP TS 22.001, CEPT) and proprietary tones (3GPP TS 31.111). Depending on call state and routing options, tones are mixed to the downlink audio or output to the speaker phone or headset. This API is not for generating tones over the uplink audio path.<pre><code>public class ToneGenerator</code></pre></section>	https://developer.android.com/reference/android/media/ToneGenerator.html
UnsupportedSchemeException	A										<section class="prog__container">Exception thrown when an attempt is made to construct a MediaDrm object using a crypto scheme UUID that is not supported by the device<pre><code>public final class UnsupportedSchemeException</code></pre></section>	https://developer.android.com/reference/android/media/UnsupportedSchemeException.html
VolumeProvider	A										<section class="prog__container">Handles requests to adjust or set the volume on a session. This is also used to push volume updates back to the session. The provider must call <pre><code>setCurrentVolume(int)</code></pre> each time the volume being provided changes.<pre><code>public abstract class VolumeProvider</code></pre></section>	https://developer.android.com/reference/android/media/VolumeProvider.html
AcousticEchoCanceler	A										<section class="prog__container">Acoustic Echo Canceler (AEC).<pre><code>public class AcousticEchoCanceler</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/AcousticEchoCanceler.html
AudioEffect.Descriptor	A										<section class="prog__container">The effect descriptor contains information on a particular effect implemented in the audio framework:<br> <ul> <li>type: UUID identifying the effect type. May be one of: <pre><code>EFFECT_TYPE_AEC</code></pre>, <pre><code>EFFECT_TYPE_AGC</code></pre>, <pre><code>EFFECT_TYPE_BASS_BOOST</code></pre>, <pre><code>EFFECT_TYPE_ENV_REVERB</code></pre>, <pre><code>EFFECT_TYPE_EQUALIZER</code></pre>, <pre><code>EFFECT_TYPE_NS</code></pre>, <pre><code>EFFECT_TYPE_PRESET_REVERB</code></pre>, <pre><code>EFFECT_TYPE_VIRTUALIZER</code></pre>. </li> <li>uuid: UUID for this particular implementation</li> <li>connectMode: <pre><code>EFFECT_INSERT</code></pre> or <pre><code>EFFECT_AUXILIARY</code></pre></li> <li>name: human readable effect name</li> <li>implementor: human readable effect implementor name</li> </ul> The method <pre><code>queryEffects()</code></pre> returns an array of Descriptors to facilitate effects enumeration. </br><pre><code>public static class AudioEffect.Descriptor</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/AudioEffect.Descriptor.html
AudioEffect	A										<section class="prog__container">AudioEffect is the base class for controlling audio effects provided by the android audio framework.<pre><code>public class AudioEffect</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/AudioEffect.html
AudioEffect.OnControlStatusChangeListener	A										<section class="prog__container">The OnControlStatusChangeListener interface defines a method called by the AudioEffect when a the control of the effect engine is gained or lost by the application<pre><code>public static interface AudioEffect.OnControlStatusChangeListener</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/AudioEffect.OnControlStatusChangeListener.html
AudioEffect.OnEnableStatusChangeListener	A										<section class="prog__container">The OnEnableStatusChangeListener interface defines a method called by the AudioEffect when a the enabled state of the effect engine was changed by the controlling application.<pre><code>public static interface AudioEffect.OnEnableStatusChangeListener</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/AudioEffect.OnEnableStatusChangeListener.html
AutomaticGainControl	A										<section class="prog__container">Automatic Gain Control (AGC).<pre><code>public class AutomaticGainControl</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/AutomaticGainControl.html
BassBoost	A										<section class="prog__container">Bass boost is an audio effect to boost or amplify low frequencies of the sound. It is comparable to a simple equalizer but limited to one band amplification in the low frequency range.<pre><code>public class BassBoost</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/BassBoost.html
BassBoost.OnParameterChangeListener	A										<section class="prog__container">The OnParameterChangeListener interface defines a method called by the BassBoost when a parameter value has changed.<pre><code>public static interface BassBoost.OnParameterChangeListener</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/BassBoost.OnParameterChangeListener.html
BassBoost.Settings	A										<section class="prog__container">The Settings class regroups all bass boost parameters. It is used in conjuntion with getProperties() and setProperties() methods to backup and restore all parameters in a single call.<pre><code>public static class BassBoost.Settings</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/BassBoost.Settings.html
EnvironmentalReverb	A										<section class="prog__container">A sound generated within a room travels in many directions. The listener first hears the direct sound from the source itself. Later, he or she hears discrete echoes caused by sound bouncing off nearby walls, the ceiling and the floor. As sound waves arrive after undergoing more and more reflections, individual reflections become indistinguishable and the listener hears continuous reverberation that decays over time. Reverb is vital for modeling a listener's environment. It can be used in music applications to simulate music being played back in various environments, or in games to immerse the listener within the game's environment. The EnvironmentalReverb class allows an application to control each reverb engine property in a global reverb environment and is more suitable for games. For basic control, more suitable for music applications, it is recommended to use the <pre><code>PresetReverb</code></pre> class.<pre><code>public class EnvironmentalReverb</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/EnvironmentalReverb.html
EnvironmentalReverb.OnParameterChangeListener	A										<section class="prog__container">The OnParameterChangeListener interface defines a method called by the EnvironmentalReverb when a parameter value has changed.<pre><code>public static interface EnvironmentalReverb.OnParameterChangeListener</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/EnvironmentalReverb.OnParameterChangeListener.html
EnvironmentalReverb.Settings	A										<section class="prog__container">The Settings class regroups all environmental reverb parameters. It is used in conjuntion with getProperties() and setProperties() methods to backup and restore all parameters in a single call.<pre><code>public static class EnvironmentalReverb.Settings</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/EnvironmentalReverb.Settings.html
Equalizer	A										<section class="prog__container">An Equalizer is used to alter the frequency response of a particular music source or of the main output mix.<pre><code>public class Equalizer</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/Equalizer.html
Equalizer.OnParameterChangeListener	A										<section class="prog__container">The OnParameterChangeListener interface defines a method called by the Equalizer when a parameter value has changed.<pre><code>public static interface Equalizer.OnParameterChangeListener</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/Equalizer.OnParameterChangeListener.html
Equalizer.Settings	A										<section class="prog__container">The Settings class regroups all equalizer parameters. It is used in conjuntion with getProperties() and setProperties() methods to backup and restore all parameters in a single call.<pre><code>public static class Equalizer.Settings</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/Equalizer.Settings.html
LoudnessEnhancer	A										<section class="prog__container">LoudnessEnhancer is an audio effect for increasing audio loudness. The processing is parametrized by a target gain value, which determines the maximum amount by which an audio signal will be amplified; signals amplified outside of the sample range supported by the platform are compressed. An application creates a LoudnessEnhancer object to instantiate and control a this audio effect in the audio framework. To attach the LoudnessEnhancer to a particular AudioTrack or MediaPlayer, specify the audio session ID of this AudioTrack or MediaPlayer when constructing the effect (see <pre><code>getAudioSessionId()</code></pre> and <pre><code>getAudioSessionId()</code></pre>).<pre><code>public class LoudnessEnhancer</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/LoudnessEnhancer.html
NoiseSuppressor	A										<section class="prog__container">Noise Suppressor (NS).<pre><code>public class NoiseSuppressor</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/NoiseSuppressor.html
PresetReverb	A										<section class="prog__container">A sound generated within a room travels in many directions. The listener first hears the direct sound from the source itself. Later, he or she hears discrete echoes caused by sound bouncing off nearby walls, the ceiling and the floor. As sound waves arrive after undergoing more and more reflections, individual reflections become indistinguishable and the listener hears continuous reverberation that decays over time. Reverb is vital for modeling a listener's environment. It can be used in music applications to simulate music being played back in various environments, or in games to immerse the listener within the game's environment. The PresetReverb class allows an application to configure the global reverb using a reverb preset. This is primarily used for adding some reverb in a music playback context. Applications requiring control over a more advanced environmental reverb are advised to use the <pre><code>EnvironmentalReverb</code></pre> class.<pre><code>public class PresetReverb</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/PresetReverb.html
PresetReverb.OnParameterChangeListener	A										<section class="prog__container">The OnParameterChangeListener interface defines a method called by the PresetReverb when a parameter value has changed.<pre><code>public static interface PresetReverb.OnParameterChangeListener</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/PresetReverb.OnParameterChangeListener.html
PresetReverb.Settings	A										<section class="prog__container">The Settings class regroups all preset reverb parameters. It is used in conjuntion with getProperties() and setProperties() methods to backup and restore all parameters in a single call.<pre><code>public static class PresetReverb.Settings</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/PresetReverb.Settings.html
Virtualizer	A										<section class="prog__container">An audio virtualizer is a general name for an effect to spatialize audio channels. The exact behavior of this effect is dependent on the number of audio input channels and the types and number of audio output channels of the device. For example, in the case of a stereo input and stereo headphone output, a stereo widening effect is used when this effect is turned on.<pre><code>public class Virtualizer</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/Virtualizer.html
Virtualizer.OnParameterChangeListener	A										<section class="prog__container">The OnParameterChangeListener interface defines a method called by the Virtualizer when a parameter value has changed.<pre><code>public static interface Virtualizer.OnParameterChangeListener</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/Virtualizer.OnParameterChangeListener.html
Virtualizer.Settings	A										<section class="prog__container">The Settings class regroups all virtualizer parameters. It is used in conjuntion with getProperties() and setProperties() methods to backup and restore all parameters in a single call.<pre><code>public static class Virtualizer.Settings</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/Virtualizer.Settings.html
Visualizer	A										<section class="prog__container">The Visualizer class enables application to retrieve part of the currently playing audio for visualization purpose. It is not an audio recording interface and only returns partial and low quality audio content. However, to protect privacy of certain audio data (e.g voice mail) the use of the visualizer requires the permission android.permission.RECORD_AUDIO.<pre><code>public class Visualizer</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/Visualizer.html
Visualizer.MeasurementPeakRms	A										<section class="prog__container">A class to store peak and RMS values. Peak and RMS are expressed in mB, as described in the <pre><code>MEASUREMENT_MODE_PEAK_RMS</code></pre> measurement mode.<pre><code>public static final class Visualizer.MeasurementPeakRms</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/Visualizer.MeasurementPeakRms.html
Visualizer.OnDataCaptureListener	A										<section class="prog__container">The OnDataCaptureListener interface defines methods called by the Visualizer to periodically update the audio visualization capture. The client application can implement this interface and register the listener with the <pre><code>setDataCaptureListener(OnDataCaptureListener, int, boolean, boolean)</code></pre> method.<pre><code>public static interface Visualizer.OnDataCaptureListener</code></pre></section>	https://developer.android.com/reference/android/media/audiofx/Visualizer.OnDataCaptureListener.html
MediaBrowser.ConnectionCallback	A										<section class="prog__container">Callbacks for connection related events.<pre><code>public static class MediaBrowser.ConnectionCallback</code></pre></section>	https://developer.android.com/reference/android/media/browse/MediaBrowser.ConnectionCallback.html
MediaBrowser	A										<section class="prog__container">Browses media content offered by a link MediaBrowserService.<pre><code>public final class MediaBrowser</code></pre></section>	https://developer.android.com/reference/android/media/browse/MediaBrowser.html
MediaBrowser.ItemCallback	A										<section class="prog__container">Callback for receiving the result of <pre><code>getItem(String, MediaBrowser.ItemCallback)</code></pre>.<pre><code>public static abstract class MediaBrowser.ItemCallback</code></pre></section>	https://developer.android.com/reference/android/media/browse/MediaBrowser.ItemCallback.html
MediaBrowser.MediaItem	A										<section class="prog__container">A class with information on a single media item for use in browsing media.<pre><code>public static class MediaBrowser.MediaItem</code></pre></section>	https://developer.android.com/reference/android/media/browse/MediaBrowser.MediaItem.html
MediaBrowser.SubscriptionCallback	A										<section class="prog__container">Callbacks for subscription related events.<pre><code>public static abstract class MediaBrowser.SubscriptionCallback</code></pre></section>	https://developer.android.com/reference/android/media/browse/MediaBrowser.SubscriptionCallback.html
Effect	A										<section class="prog__container"><pre><code>public abstract class Effect</code></pre></section>	https://developer.android.com/reference/android/media/effect/Effect.html
EffectContext	A										<section class="prog__container"><pre><code>public class EffectContext</code></pre></section>	https://developer.android.com/reference/android/media/effect/EffectContext.html
EffectFactory	A										<section class="prog__container"><pre><code>public class EffectFactory</code></pre></section>	https://developer.android.com/reference/android/media/effect/EffectFactory.html
EffectUpdateListener	A										<section class="prog__container">Some effects may issue callbacks to inform the host of changes to the effect state. This is the listener interface for receiving those callbacks.<pre><code>public interface EffectUpdateListener</code></pre></section>	https://developer.android.com/reference/android/media/effect/EffectUpdateListener.html
android.media.effect	A										<section class="prog__container">Provides classes that allow you to apply a variety of visual effects to images and videos. For example, you can easily fix red-eye, convert an image to grayscale, adjust brightness, adjust saturation, rotate an image, apply a fisheye effect, and much more. The system performs all effects processing on the GPU to obtain maximum performance.</section>	https://developer.android.com/reference/android/media/effect/package-summary.html
MidiDevice	A										<section class="prog__container">This class is used for sending and receiving data to and from a MIDI device Instances of this class are created by <pre><code>openDevice(MidiDeviceInfo, MidiManager.OnDeviceOpenedListener, Handler)</code></pre>.<pre><code>public final class MidiDevice</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiDevice.html
MidiDevice.MidiConnection	A										<section class="prog__container">This class represents a connection between the output port of one device and the input port of another. Created by <pre><code>connectPorts(MidiInputPort, int)</code></pre>. Close this object to terminate the connection.<pre><code>public class MidiDevice.MidiConnection</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiDevice.MidiConnection.html
MidiDeviceInfo	A										<section class="prog__container">This class contains information to describe a MIDI device. For now we only have information that can be retrieved easily for USB devices, but we will probably expand this in the future. This class is just an immutable object to encapsulate the MIDI device description. Use the MidiDevice class to actually communicate with devices.<pre><code>public final class MidiDeviceInfo</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiDeviceInfo.html
MidiDeviceInfo.PortInfo	A										<section class="prog__container">Contains information about an input or output port.<pre><code>public static final class MidiDeviceInfo.PortInfo</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiDeviceInfo.PortInfo.html
MidiDeviceService	A										<section class="prog__container">A service that implements a virtual MIDI device. Subclasses must implement the <pre><code>onGetInputPortReceivers()</code></pre> method to provide a list of <pre><code>MidiReceiver</code></pre>s to receive data sent to the device's input ports. Similarly, subclasses can call <pre><code>getOutputPortReceivers()</code></pre> to fetch a list of <pre><code>MidiReceiver</code></pre>s for sending data out the output ports.<pre><code>public abstract class MidiDeviceService</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiDeviceService.html
MidiDeviceStatus	A										<section class="prog__container">This is an immutable class that describes the current status of a MIDI device's ports.<pre><code>public final class MidiDeviceStatus</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiDeviceStatus.html
MidiInputPort	A										<section class="prog__container">This class is used for sending data to a port on a MIDI device<pre><code>public final class MidiInputPort</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiInputPort.html
MidiManager.DeviceCallback	A										<section class="prog__container">Callback class used for clients to receive MIDI device added and removed notifications<pre><code>public static class MidiManager.DeviceCallback</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiManager.DeviceCallback.html
MidiManager	A										<section class="prog__container">This class is the public application interface to the MIDI service.<pre><code>public final class MidiManager</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiManager.html
MidiManager.OnDeviceOpenedListener	A										<section class="prog__container">Listener class used for receiving the results of <pre><code>openDevice(MidiDeviceInfo, MidiManager.OnDeviceOpenedListener, Handler)</code></pre> and <pre><code>openBluetoothDevice(BluetoothDevice, MidiManager.OnDeviceOpenedListener, Handler)</code></pre><pre><code>public static interface MidiManager.OnDeviceOpenedListener</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiManager.OnDeviceOpenedListener.html
MidiOutputPort	A										<section class="prog__container">This class is used for receiving data from a port on a MIDI device<pre><code>public final class MidiOutputPort</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiOutputPort.html
MidiReceiver	A										<section class="prog__container">Interface for sending and receiving data to and from a MIDI device.<pre><code>public abstract class MidiReceiver</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiReceiver.html
MidiSender	A										<section class="prog__container">Interface provided by a device to allow attaching MidiReceivers to a MIDI device.<pre><code>public abstract class MidiSender</code></pre></section>	https://developer.android.com/reference/android/media/midi/MidiSender.html
android.media.midi	A										<section class="prog__container"> Provides classes for sending and receiving messages using the standard MIDI event protocol over USB, Bluetooth LE, and virtual (inter-app) transports. </section>	https://developer.android.com/reference/android/media/midi/package-summary.html
MediaProjection.Callback	A										<section class="prog__container">Callbacks for the projection session.<pre><code>public static abstract class MediaProjection.Callback</code></pre></section>	https://developer.android.com/reference/android/media/projection/MediaProjection.Callback.html
MediaProjection	A										<section class="prog__container">A token granting applications the ability to capture screen contents and/or record system audio. The exact capabilities granted depend on the type of MediaProjection.<pre><code>public final class MediaProjection</code></pre></section>	https://developer.android.com/reference/android/media/projection/MediaProjection.html
MediaProjectionManager	A										<section class="prog__container">Manages the retrieval of certain types of <pre><code>MediaProjection</code></pre> tokens.<pre><code>public final class MediaProjectionManager</code></pre></section>	https://developer.android.com/reference/android/media/projection/MediaProjectionManager.html
MediaController.Callback	A										<section class="prog__container">Callback for receiving updates from the session. A Callback can be registered using <pre><code>registerCallback(MediaController.Callback)</code></pre>.<pre><code>public static abstract class MediaController.Callback</code></pre></section>	https://developer.android.com/reference/android/media/session/MediaController.Callback.html
MediaController	A										<section class="prog__container">Allows an app to interact with an ongoing media session. Media buttons and other commands can be sent to the session. A callback may be registered to receive updates from the session, such as metadata and play state changes.<pre><code>public final class MediaController</code></pre></section>	https://developer.android.com/reference/android/media/session/MediaController.html
MediaController.PlaybackInfo	A										<section class="prog__container">Holds information about the current playback and how audio is handled for this session.<pre><code>public static final class MediaController.PlaybackInfo</code></pre></section>	https://developer.android.com/reference/android/media/session/MediaController.PlaybackInfo.html
MediaController.TransportControls	A										<section class="prog__container">Interface for controlling media playback on a session. This allows an app to send media transport commands to the session.<pre><code>public final class MediaController.TransportControls</code></pre></section>	https://developer.android.com/reference/android/media/session/MediaController.TransportControls.html
MediaSession.Callback	A										<section class="prog__container">Receives media buttons, transport controls, and commands from controllers and the system. A callback may be set using <pre><code>setCallback(MediaSession.Callback)</code></pre>.<pre><code>public static abstract class MediaSession.Callback</code></pre></section>	https://developer.android.com/reference/android/media/session/MediaSession.Callback.html
MediaSession	A										<section class="prog__container">Allows interaction with media controllers, volume keys, media buttons, and transport controls.<pre><code>public final class MediaSession</code></pre></section>	https://developer.android.com/reference/android/media/session/MediaSession.html
MediaSession.QueueItem	A										<section class="prog__container">A single item that is part of the play queue. It contains a description of the item and its id in the queue.<pre><code>public static final class MediaSession.QueueItem</code></pre></section>	https://developer.android.com/reference/android/media/session/MediaSession.QueueItem.html
MediaSession.Token	A										<section class="prog__container">Represents an ongoing session. This may be passed to apps by the session owner to allow them to create a <pre><code>MediaController</code></pre> to communicate with the session.<pre><code>public static final class MediaSession.Token</code></pre></section>	https://developer.android.com/reference/android/media/session/MediaSession.Token.html
MediaSessionManager	A										<section class="prog__container">Provides support for interacting with <pre><code>media sessions</code></pre> that applications have published to express their ongoing media playback state.<pre><code>public final class MediaSessionManager</code></pre></section>	https://developer.android.com/reference/android/media/session/MediaSessionManager.html
MediaSessionManager.OnActiveSessionsChangedListener	A										<section class="prog__container">Listens for changes to the list of active sessions. This can be added using <pre><code>addOnActiveSessionsChangedListener(MediaSessionManager.OnActiveSessionsChangedListener, ComponentName)</code></pre>.<pre><code>public static interface MediaSessionManager.OnActiveSessionsChangedListener</code></pre></section>	https://developer.android.com/reference/android/media/session/MediaSessionManager.OnActiveSessionsChangedListener.html
PlaybackState.Builder	A										<section class="prog__container">Builder for <pre><code>PlaybackState</code></pre> objects.<pre><code>public static final class PlaybackState.Builder</code></pre></section>	https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html
PlaybackState.CustomAction.Builder	A										<section class="prog__container">Builder for <pre><code>PlaybackState.CustomAction</code></pre> objects.<pre><code>public static final class PlaybackState.CustomAction.Builder</code></pre></section>	https://developer.android.com/reference/android/media/session/PlaybackState.CustomAction.Builder.html
PlaybackState.CustomAction	A										<section class="prog__container"><pre><code>CustomActions</code></pre> can be used to extend the capabilities of the standard transport controls by exposing app specific actions to <pre><code>MediaControllers</code></pre>.<pre><code>public static final class PlaybackState.CustomAction</code></pre></section>	https://developer.android.com/reference/android/media/session/PlaybackState.CustomAction.html
PlaybackState	A										<section class="prog__container">Playback state for a <pre><code>MediaSession</code></pre>. This includes a state like <pre><code>STATE_PLAYING</code></pre>, the current playback position, and the current control capabilities.<pre><code>public final class PlaybackState</code></pre></section>	https://developer.android.com/reference/android/media/session/PlaybackState.html
TvContentRating	A										<section class="prog__container">A class representing a TV content rating. When a TV input service inserts the content rating information on a program into the database, this class can be used to generate the formatted string for <pre><code>TvContract.Programs.COLUMN_CONTENT_RATING</code></pre>. To create a <pre><code>TvContentRating</code></pre> object, use the <pre><code>TvContentRating.createRating</code></pre> method with valid rating system string constants.<pre><code>public final class TvContentRating</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvContentRating.html
TvContract.BaseTvColumns	A										<section class="prog__container">Common base for the tables of TV channels/programs.<pre><code>public static interface TvContract.BaseTvColumns</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvContract.BaseTvColumns.html
TvContract.Channels	A										<section class="prog__container">Column definitions for the TV channels table.<pre><code>public static final class TvContract.Channels</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvContract.Channels.html
TvContract.Channels.Logo	A										<section class="prog__container">A sub-directory of a single TV channel that represents its primary logo.<pre><code>public static final class TvContract.Channels.Logo</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvContract.Channels.Logo.html
TvContract	A										<section class="prog__container">The contract between the TV provider and applications. Contains definitions for the supported URIs and columns. <h3>Overview</h3><pre><code>public final class TvContract</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvContract.html
TvContract.Programs.Genres	A										<section class="prog__container">Canonical genres for TV programs.<pre><code>public static final class TvContract.Programs.Genres</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvContract.Programs.Genres.html
TvContract.Programs	A										<section class="prog__container">Column definitions for the TV programs table.<pre><code>public static final class TvContract.Programs</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvContract.Programs.html
TvContract.RecordedPrograms	A										<section class="prog__container">Column definitions for the recorded TV programs table.<pre><code>public static final class TvContract.RecordedPrograms</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvContract.RecordedPrograms.html
TvInputInfo.Builder	A										<section class="prog__container">A convenience builder for creating <pre><code>TvInputInfo</code></pre> objects.<pre><code>public static final class TvInputInfo.Builder</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvInputInfo.Builder.html
TvInputInfo	A										<section class="prog__container">This class is used to specify meta information of a TV input.<pre><code>public final class TvInputInfo</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvInputInfo.html
TvInputManager	A										<section class="prog__container">Central system API to the overall TV input framework (TIF) architecture, which arbitrates interaction between applications and the selected TV inputs. You can retrieve an instance of this interface with <pre><code>Context.getSystemService(Context.TV_INPUT_SERVICE)</code></pre>.<pre><code>public final class TvInputManager</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvInputManager.html
TvInputManager.TvInputCallback	A										<section class="prog__container">Callback used to monitor status of the TV inputs.<pre><code>public static abstract class TvInputManager.TvInputCallback</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvInputManager.TvInputCallback.html
TvInputService.HardwareSession	A										<section class="prog__container">Base class for a TV input session which represents an external device connected to a hardware TV input.<pre><code>public static abstract class TvInputService.HardwareSession</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvInputService.HardwareSession.html
TvInputService	A										<section class="prog__container">The TvInputService class represents a TV input or source such as HDMI or built-in tuner which provides pass-through video or broadcast TV programs.<pre><code>public abstract class TvInputService</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvInputService.html
TvInputService.RecordingSession	A										<section class="prog__container">Base class for derived classes to implement to provide a TV input recording session.<pre><code>public static abstract class TvInputService.RecordingSession</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvInputService.RecordingSession.html
TvInputService.Session	A										<section class="prog__container">Base class for derived classes to implement to provide a TV input session.<pre><code>public static abstract class TvInputService.Session</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvInputService.Session.html
TvRecordingClient	A										<section class="prog__container">The public interface object used to interact with a specific TV input service for TV program recording.<pre><code>public class TvRecordingClient</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvRecordingClient.html
TvRecordingClient.RecordingCallback	A										<section class="prog__container">Callback used to receive various status updates on the <pre><code>TvInputService.RecordingSession</code></pre><pre><code>public static abstract class TvRecordingClient.RecordingCallback</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvRecordingClient.RecordingCallback.html
TvTrackInfo.Builder	A										<section class="prog__container">A builder class for creating <pre><code>TvTrackInfo</code></pre> objects.<pre><code>public static final class TvTrackInfo.Builder</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvTrackInfo.Builder.html
TvTrackInfo	A										<section class="prog__container">Encapsulates the format of tracks played in <pre><code>TvInputService</code></pre>.<pre><code>public final class TvTrackInfo</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvTrackInfo.html
TvView	A										<section class="prog__container">Displays TV contents. The TvView class provides a high level interface for applications to show TV programs from various TV sources that implement <pre><code>TvInputService</code></pre>. (Note that the list of TV inputs available on the system can be obtained by calling <pre><code>TvInputManager.getTvInputList()</code></pre>.)<pre><code>public class TvView</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvView.html
TvView.OnUnhandledInputEventListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the unhandled input event is received.<pre><code>public static interface TvView.OnUnhandledInputEventListener</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvView.OnUnhandledInputEventListener.html
TvView.TimeShiftPositionCallback	A										<section class="prog__container">Callback used to receive time shift position changes.<pre><code>public static abstract class TvView.TimeShiftPositionCallback</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvView.TimeShiftPositionCallback.html
TvView.TvInputCallback	A										<section class="prog__container">Callback used to receive various status updates on the <pre><code>TvView</code></pre>.<pre><code>public static abstract class TvView.TvInputCallback</code></pre></section>	https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html
MtpConstants	A										<section class="prog__container">A class containing constants in the MTP and PTP specifications.<pre><code>public final class MtpConstants</code></pre></section>	https://developer.android.com/reference/android/mtp/MtpConstants.html
MtpDevice	A										<section class="prog__container">This class represents an MTP or PTP device connected on the USB host bus. An application can instantiate an object of this type, by referencing an attached <pre><code>UsbDevice</code></pre> and then use methods in this class to get information about the device and objects stored on it, as well as open the connection and transfer data.<pre><code>public final class MtpDevice</code></pre></section>	https://developer.android.com/reference/android/mtp/MtpDevice.html
MtpDeviceInfo	A										<section class="prog__container">This class encapsulates information about an MTP device. This corresponds to the DeviceInfo Dataset described in section 5.1.1 of the MTP specification.<pre><code>public class MtpDeviceInfo</code></pre></section>	https://developer.android.com/reference/android/mtp/MtpDeviceInfo.html
MtpEvent	A										<section class="prog__container">This class encapsulates information about a MTP event. This corresponds to the events described in appendix G of the MTP specification.<pre><code>public class MtpEvent</code></pre></section>	https://developer.android.com/reference/android/mtp/MtpEvent.html
MtpObjectInfo.Builder	A										<section class="prog__container">Builds a new object info instance.<pre><code>public static class MtpObjectInfo.Builder</code></pre></section>	https://developer.android.com/reference/android/mtp/MtpObjectInfo.Builder.html
MtpObjectInfo	A										<section class="prog__container">This class encapsulates information about an object on an MTP device. This corresponds to the ObjectInfo Dataset described in section 5.3.1 of the MTP specification.<pre><code>public final class MtpObjectInfo</code></pre></section>	https://developer.android.com/reference/android/mtp/MtpObjectInfo.html
MtpStorageInfo	A										<section class="prog__container">This class encapsulates information about a storage unit on an MTP device. This corresponds to the StorageInfo Dataset described in section 5.2.2 of the MTP specification.<pre><code>public final class MtpStorageInfo</code></pre></section>	https://developer.android.com/reference/android/mtp/MtpStorageInfo.html
android.mtp	A										<section class="prog__container">Provides APIs that let you interact directly with connected cameras and other devices, using the PTP (Picture Transfer Protocol) subset of the MTP (Media Transfer Protocol) specification. Your application can receive notifications when devices are attached and removed, manage files and storage on those devices, and transfer files and metadata from the devices.</section>	https://developer.android.com/reference/android/mtp/package-summary.html
CaptivePortal	A										<section class="prog__container">A class allowing apps handling the <pre><code>ACTION_CAPTIVE_PORTAL_SIGN_IN</code></pre> activity to indicate to the system different outcomes of captive portal sign in. This class is passed as an extra named <pre><code>EXTRA_CAPTIVE_PORTAL</code></pre> with the <pre><code>ACTION_CAPTIVE_PORTAL_SIGN_IN</code></pre> activity.<pre><code>public class CaptivePortal</code></pre></section>	https://developer.android.com/reference/android/net/CaptivePortal.html
ConnectivityManager	A										<section class="prog__container">Class that answers queries about the state of network connectivity. It also notifies applications when network connectivity changes. Get an instance of this class by calling <pre><code>Context.getSystemService(Context.CONNECTIVITY_SERVICE)</code></pre>.<pre><code>public class ConnectivityManager</code></pre></section>	https://developer.android.com/reference/android/net/ConnectivityManager.html
ConnectivityManager.NetworkCallback	A										<section class="prog__container">Base class for NetworkRequest callbacks. Used for notifications about network changes. Should be extended by applications wanting notifications.<pre><code>public static class ConnectivityManager.NetworkCallback</code></pre></section>	https://developer.android.com/reference/android/net/ConnectivityManager.NetworkCallback.html
ConnectivityManager.OnNetworkActiveListener	A										<section class="prog__container">Callback for use with <pre><code>addDefaultNetworkActiveListener(ConnectivityManager.OnNetworkActiveListener)</code></pre> to find out when the system default network has gone in to a high power state.<pre><code>public static interface ConnectivityManager.OnNetworkActiveListener</code></pre></section>	https://developer.android.com/reference/android/net/ConnectivityManager.OnNetworkActiveListener.html
Credentials	A										<section class="prog__container">A class for representing UNIX credentials passed via ancillary data on UNIX domain sockets. See "man 7 unix" on a desktop linux distro.<pre><code>public class Credentials</code></pre></section>	https://developer.android.com/reference/android/net/Credentials.html
DhcpInfo	A										<section class="prog__container">A simple object for retrieving the results of a DHCP request.<pre><code>public class DhcpInfo</code></pre></section>	https://developer.android.com/reference/android/net/DhcpInfo.html
IpPrefix	A										<section class="prog__container">This class represents an IP prefix, i.e., a contiguous block of IP addresses aligned on a power of two boundary (also known as an "IP subnet"). A prefix is specified by two pieces of information: <ul> <li>A starting IP address (IPv4 or IPv6). This is the first IP address of the prefix. <li>A prefix length. This specifies the length of the prefix by specifing the number of bits in the IP address, starting from the most significant bit in network byte order, that are constant for all addresses in the prefix. </li></li></ul> For example, the prefix <pre><code>192.0.2.0/24</code></pre> covers the 256 IPv4 addresses from <pre><code>192.0.2.0</code></pre> to <pre><code>192.0.2.255</code></pre>, inclusive, and the prefix <pre><code>2001:db8:1:2</code></pre> covers the 2^64 IPv6 addresses from <pre><code>2001:db8:1:2::</code></pre> to <pre><code>2001:db8:1:2:ffff:ffff:ffff:ffff</code></pre>, inclusive. Objects of this class are immutable.<pre><code>public final class IpPrefix</code></pre></section>	https://developer.android.com/reference/android/net/IpPrefix.html
LinkAddress	A										<section class="prog__container">Identifies an IP address on a network link. A <pre><code>LinkAddress</code></pre> consists of: <ul> <li>An IP address and prefix length (e.g., <pre><code>2001:db8::1/64</code></pre> or <pre><code>192.0.2.1/24</code></pre>). The address must be unicast, as multicast addresses cannot be assigned to interfaces. <li>Address flags: A bitmask of <pre><code>OsConstants.IFA_F_*</code></pre> values representing properties of the address (e.g., <pre><code>android.system.OsConstants.IFA_F_OPTIMISTIC</code></pre>). <li>Address scope: One of the <pre><code>OsConstants.IFA_F_*</code></pre> values; defines the scope in which the address is unique (e.g., <pre><code>android.system.OsConstants.RT_SCOPE_LINK</code></pre> or <pre><code>android.system.OsConstants.RT_SCOPE_UNIVERSE</code></pre>). </li></li></li></ul><pre><code>public class LinkAddress</code></pre></section>	https://developer.android.com/reference/android/net/LinkAddress.html
LinkProperties	A										<section class="prog__container">Describes the properties of a network link. A link represents a connection to a network. It may have multiple addresses and multiple gateways, multiple dns servers but only one http proxy and one network interface. Note that this is just a holder of data. Modifying it does not affect live networks.<pre><code>public final class LinkProperties</code></pre></section>	https://developer.android.com/reference/android/net/LinkProperties.html
LocalServerSocket	A										<section class="prog__container">Non-standard class for creating an inbound UNIX-domain socket in the Linux abstract namespace.<pre><code>public class LocalServerSocket</code></pre></section>	https://developer.android.com/reference/android/net/LocalServerSocket.html
LocalSocket	A										<section class="prog__container">Creates a (non-server) socket in the UNIX-domain namespace. The interface here is not entirely unlike that of java.net.Socket. This class and the streams returned from it may be used from multiple threads.<pre><code>public class LocalSocket</code></pre></section>	https://developer.android.com/reference/android/net/LocalSocket.html
LocalSocketAddress	A										<section class="prog__container">A UNIX-domain (AF_LOCAL) socket address. For use with android.net.LocalSocket and android.net.LocalServerSocket. On the Android system, these names refer to names in the Linux abstract (non-filesystem) UNIX domain namespace.<pre><code>public class LocalSocketAddress</code></pre></section>	https://developer.android.com/reference/android/net/LocalSocketAddress.html
LocalSocketAddress.Namespace	A										<section class="prog__container">The namespace that this address exists in. See also include/cutils/sockets.h ANDROID_SOCKET_NAMESPACE_*<pre><code>public static final enum LocalSocketAddress.Namespace</code></pre></section>	https://developer.android.com/reference/android/net/LocalSocketAddress.Namespace.html
MailTo	A										<section class="prog__container">MailTo URL parser This class parses a mailto scheme URL and then can be queried for the parsed parameters. This implements RFC 2368.<pre><code>public class MailTo</code></pre></section>	https://developer.android.com/reference/android/net/MailTo.html
Network	A										<section class="prog__container">Identifies a <pre><code>Network</code></pre>. This is supplied to applications via <pre><code>ConnectivityManager.NetworkCallback</code></pre> in response to the active <pre><code>requestNetwork(NetworkRequest, PendingIntent)</code></pre> or passive <pre><code>registerNetworkCallback(NetworkRequest, PendingIntent)</code></pre> calls. It is used to direct traffic to the given <pre><code>Network</code></pre>, either on a <pre><code>Socket</code></pre> basis through a targeted <pre><code>SocketFactory</code></pre> or process-wide via <pre><code>bindProcessToNetwork(Network)</code></pre>.<pre><code>public class Network</code></pre></section>	https://developer.android.com/reference/android/net/Network.html
NetworkCapabilities	A										<section class="prog__container">This class represents the capabilities of a network. This is used both to specify needs to <pre><code>ConnectivityManager</code></pre> and when inspecting a network. Note that this replaces the old <pre><code>TYPE_MOBILE</code></pre> method of network selection. Rather than indicate a need for Wi-Fi because an application needs high bandwidth and risk obsolescence when a new, fast network appears (like LTE), the application should specify it needs high bandwidth. Similarly if an application needs an unmetered network for a bulk transfer it can specify that rather than assuming all cellular based connections are metered and all Wi-Fi based connections are not.<pre><code>public final class NetworkCapabilities</code></pre></section>	https://developer.android.com/reference/android/net/NetworkCapabilities.html
NetworkInfo.DetailedState	A										<section class="prog__container">The fine-grained state of a network connection. This level of detail is probably of interest to few applications. Most should use <pre><code>State</code></pre> instead.<pre><code>public static final enum NetworkInfo.DetailedState</code></pre></section>	https://developer.android.com/reference/android/net/NetworkInfo.DetailedState.html
NetworkInfo	A										<section class="prog__container">Describes the status of a network interface.<pre><code>public class NetworkInfo</code></pre></section>	https://developer.android.com/reference/android/net/NetworkInfo.html
NetworkInfo.State	A										<section class="prog__container">Coarse-grained network state. This is probably what most applications should use, rather than <pre><code>DetailedState</code></pre>. The mapping between the two is as follows: <br/><br/> <table> <tr><td><b>Detailed state</b></td><td><b>Coarse-grained state</b></td></tr> <tr><td><pre><code>IDLE</code></pre></td><td><pre><code>DISCONNECTED</code></pre></td></tr> <tr><td><pre><code>SCANNING</code></pre></td><td><pre><code>CONNECTING</code></pre></td></tr> <tr><td><pre><code>CONNECTING</code></pre></td><td><pre><code>CONNECTING</code></pre></td></tr> <tr><td><pre><code>AUTHENTICATING</code></pre></td><td><pre><code>CONNECTING</code></pre></td></tr> <tr><td><pre><code>CONNECTED</code></pre></td><td><pre><code>CONNECTED</code></pre></td></tr> <tr><td><pre><code>DISCONNECTING</code></pre></td><td><pre><code>DISCONNECTING</code></pre></td></tr> <tr><td><pre><code>DISCONNECTED</code></pre></td><td><pre><code>DISCONNECTED</code></pre></td></tr> <tr><td><pre><code>UNAVAILABLE</code></pre></td><td><pre><code>DISCONNECTED</code></pre></td></tr> <tr><td><pre><code>FAILED</code></pre></td><td><pre><code>DISCONNECTED</code></pre></td></tr> </table><pre><code>public static final enum NetworkInfo.State</code></pre></section>	https://developer.android.com/reference/android/net/NetworkInfo.State.html
NetworkRequest.Builder	A										<section class="prog__container">Builder used to create <pre><code>NetworkRequest</code></pre> objects. Specify the Network features needed in terms of <pre><code>NetworkCapabilities</code></pre> features<pre><code>public static class NetworkRequest.Builder</code></pre></section>	https://developer.android.com/reference/android/net/NetworkRequest.Builder.html
NetworkRequest	A										<section class="prog__container">Defines a request for a network, made through <pre><code>NetworkRequest.Builder</code></pre> and used to request a network via <pre><code>requestNetwork(NetworkRequest, PendingIntent)</code></pre> or listen for changes via <pre><code>registerNetworkCallback(NetworkRequest, PendingIntent)</code></pre>.<pre><code>public class NetworkRequest</code></pre></section>	https://developer.android.com/reference/android/net/NetworkRequest.html
ParseException	A										<section class="prog__container">Thrown when parsing a URL fails.<pre><code>public class ParseException</code></pre></section>	https://developer.android.com/reference/android/net/ParseException.html
Proxy	A										<section class="prog__container">A convenience class for accessing the user and default proxy settings.<pre><code>public final class Proxy</code></pre></section>	https://developer.android.com/reference/android/net/Proxy.html
ProxyInfo	A										<section class="prog__container">Describes a proxy configuration. Proxy configurations are already integrated within the <pre><code>java.net</code></pre> and Apache HTTP stack. So <pre><code>URLConnection</code></pre> and Apache's <pre><code>HttpClient</code></pre> will use them automatically. Other HTTP stacks will need to obtain the proxy info from <pre><code>PROXY_CHANGE_ACTION</code></pre> broadcast as the extra <pre><code>EXTRA_PROXY_INFO</code></pre>.<pre><code>public class ProxyInfo</code></pre></section>	https://developer.android.com/reference/android/net/ProxyInfo.html
PskKeyManager	A										<section class="prog__container">Provider of key material for pre-shared key (PSK) key exchange used in TLS-PSK cipher suites. <h3>Overview of TLS-PSK</h3><pre><code>public abstract class PskKeyManager</code></pre></section>	https://developer.android.com/reference/android/net/PskKeyManager.html
RouteInfo	A										<section class="prog__container">Represents a network route.<pre><code>public final class RouteInfo</code></pre></section>	https://developer.android.com/reference/android/net/RouteInfo.html
SSLCertificateSocketFactory	A										<section class="prog__container">SSLSocketFactory implementation with several extra features: <ul> <li>Timeout specification for SSL handshake operations <li>Hostname verification in most cases (see WARNINGs below) <li>Optional SSL session caching with <pre><code>SSLSessionCache</code></pre> <li>Optionally bypass all SSL certificate checks </li></li></li></li></ul> The handshake timeout does not apply to actual TCP socket connection. If you want a connection timeout as well, use <pre><code>createSocket()</code></pre> and <pre><code>connect(SocketAddress, int)</code></pre>, after which you must verify the identity of the server you are connected to. <p class="caution"><b>Most <pre><code>SSLSocketFactory</code></pre> implementations do not verify the server's identity, allowing man-in-the-middle attacks.</b> This implementation does check the server's certificate hostname, but only for createSocket variants that specify a hostname. When using methods that use <pre><code>InetAddress</code></pre> or which return an unconnected socket, you MUST verify the server's identity yourself to ensure a secure connection.<pre><code>public class SSLCertificateSocketFactory</code></pre></section>	https://developer.android.com/reference/android/net/SSLCertificateSocketFactory.html
SSLSessionCache	A										<section class="prog__container">File-based cache of established SSL sessions. When re-establishing a connection to the same server, using an SSL session cache can save some time, power, and bandwidth by skipping directly to an encrypted stream. This is a persistent cache which can span executions of the application.<pre><code>public final class SSLSessionCache</code></pre></section>	https://developer.android.com/reference/android/net/SSLSessionCache.html
TrafficStats	A										<section class="prog__container">Class that provides network traffic statistics. These statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per-UID basis.<pre><code>public class TrafficStats</code></pre></section>	https://developer.android.com/reference/android/net/TrafficStats.html
Uri.Builder	A										<section class="prog__container">Helper class for building or manipulating URI references. Not safe for concurrent use.<pre><code>public static final class Uri.Builder</code></pre></section>	https://developer.android.com/reference/android/net/Uri.Builder.html
Uri	A										<section class="prog__container">Immutable URI reference. A URI reference includes a URI and a fragment, the component of the URI following a '#'. Builds and parses URI references which conform to RFC 2396.<pre><code>public abstract class Uri</code></pre></section>	https://developer.android.com/reference/android/net/Uri.html
UrlQuerySanitizer	A										<section class="prog__container">Sanitizes the Query portion of a URL. Simple example: <pre><code> UrlQuerySanitizer sanitizer = new UrlQuerySanitizer(); sanitizer.setAllowUnregisteredParamaters(true); sanitizer.parseUrl("http://example.com/?name=Joe+User"); String name = sanitizer.getValue("name")); // name now contains "Joe_User" </code></pre> Register ValueSanitizers to customize the way individual parameters are sanitized: <pre><code> UrlQuerySanitizer sanitizer = new UrlQuerySanitizer(); sanitizer.registerParamater("name", UrlQuerySanitizer.createSpaceLegal()); sanitizer.parseUrl("http://example.com/?name=Joe+User"); String name = sanitizer.getValue("name")); // name now contains "Joe User". (The string is first decoded, which // converts the '+' to a ' '. Then the string is sanitized, which // converts the ' ' to an '_'. (The ' ' is converted because the default unregistered parameter sanitizer does not allow any special characters, and ' ' is a special character.) </code></pre> There are several ways to create ValueSanitizers. In order of increasing sophistication: <ol> <li>Call one of the UrlQuerySanitizer.createXXX() methods. <li>Construct your own instance of UrlQuerySanitizer.IllegalCharacterValueSanitizer. <li>Subclass UrlQuerySanitizer.ValueSanitizer to define your own value sanitizer. </li></li></li></ol><pre><code>public class UrlQuerySanitizer</code></pre></section>	https://developer.android.com/reference/android/net/UrlQuerySanitizer.html
UrlQuerySanitizer.IllegalCharacterValueSanitizer	A										<section class="prog__container">Sanitize values based on which characters they contain. Illegal characters are replaced with either space or '_', depending upon whether space is a legal character or not.<pre><code>public static class UrlQuerySanitizer.IllegalCharacterValueSanitizer</code></pre></section>	https://developer.android.com/reference/android/net/UrlQuerySanitizer.IllegalCharacterValueSanitizer.html
UrlQuerySanitizer.ParameterValuePair	A										<section class="prog__container">A simple tuple that holds parameter-value pairs.<pre><code>public class UrlQuerySanitizer.ParameterValuePair</code></pre></section>	https://developer.android.com/reference/android/net/UrlQuerySanitizer.ParameterValuePair.html
UrlQuerySanitizer.ValueSanitizer	A										<section class="prog__container">A functor used to sanitize a single query value.<pre><code>public static interface UrlQuerySanitizer.ValueSanitizer</code></pre></section>	https://developer.android.com/reference/android/net/UrlQuerySanitizer.ValueSanitizer.html
VpnService.Builder	A										<section class="prog__container">Helper class to create a VPN interface. This class should be always used within the scope of the outer <pre><code>VpnService</code></pre>.<pre><code>public class VpnService.Builder</code></pre></section>	https://developer.android.com/reference/android/net/VpnService.Builder.html
VpnService	A										<section class="prog__container">VpnService is a base class for applications to extend and build their own VPN solutions. In general, it creates a virtual network interface, configures addresses and routing rules, and returns a file descriptor to the application. Each read from the descriptor retrieves an outgoing packet which was routed to the interface. Each write to the descriptor injects an incoming packet just like it was received from the interface. The interface is running on Internet Protocol (IP), so packets are always started with IP headers. The application then completes a VPN connection by processing and exchanging packets with the remote server over a tunnel.<pre><code>public class VpnService</code></pre></section>	https://developer.android.com/reference/android/net/VpnService.html
HttpResponseCache	A										<section class="prog__container">Caches HTTP and HTTPS responses to the filesystem so they may be reused, saving time and bandwidth. This class supports <pre><code>HttpURLConnection</code></pre> and <pre><code>HttpsURLConnection</code></pre>; there is no platform-provided cache for <pre><code>DefaultHttpClient</code></pre> or <pre><code>AndroidHttpClient</code></pre>. Installation and instances are thread safe. <h3>Installing an HTTP response cache</h3> Enable caching of all of your application's HTTP requests by installing the cache at application startup. For example, this code installs a 10 MiB cache in the <pre><code>application-specific cache directory</code></pre> of the filesystem}: <pre> <pre><code>protected void onCreate(Bundle savedInstanceState) { ... try { File httpCacheDir = new File(context.getCacheDir(), "http"); long httpCacheSize = 10 * 1024 * 1024; // 10 MiB HttpResponseCache.install(httpCacheDir, httpCacheSize); } catch (IOException e) { Log.i(TAG, "HTTP response cache installation failed:" + e); } } protected void onStop() { ... HttpResponseCache cache = HttpResponseCache.getInstalled(); if (cache != null) { cache.flush(); } }</code></pre></pre> This cache will evict entries as necessary to keep its size from exceeding 10 MiB. The best cache size is application specific and depends on the size and frequency of the files being downloaded. Increasing the limit may improve the hit rate, but it may also just waste filesystem space!<pre><code>public final class HttpResponseCache</code></pre></section>	https://developer.android.com/reference/android/net/http/HttpResponseCache.html
SslCertificate.DName	A										<section class="prog__container">A distinguished name helper class: a 3-tuple of: <ul> <li>the most specific common name (CN)</li> <li>the most specific organization (O)</li> <li>the most specific organizational unit (OU)</li> <ul> </ul></ul><pre><code>public class SslCertificate.DName</code></pre></section>	https://developer.android.com/reference/android/net/http/SslCertificate.DName.html
SslCertificate	A										<section class="prog__container">SSL certificate info (certificate details) class<pre><code>public class SslCertificate</code></pre></section>	https://developer.android.com/reference/android/net/http/SslCertificate.html
SslError	A										<section class="prog__container">This class represents a set of one or more SSL errors and the associated SSL certificate.<pre><code>public class SslError</code></pre></section>	https://developer.android.com/reference/android/net/http/SslError.html
X509TrustManagerExtensions	A										<section class="prog__container">X509TrustManager wrapper exposing Android-added features.<pre><code>public class X509TrustManagerExtensions</code></pre></section>	https://developer.android.com/reference/android/net/http/X509TrustManagerExtensions.html
NsdManager.DiscoveryListener	A										<section class="prog__container">Interface for callback invocation for service discovery<pre><code>public static interface NsdManager.DiscoveryListener</code></pre></section>	https://developer.android.com/reference/android/net/nsd/NsdManager.DiscoveryListener.html
NsdManager	A										<section class="prog__container">The Network Service Discovery Manager class provides the API to discover services on a network. As an example, if device A and device B are connected over a Wi-Fi network, a game registered on device A can be discovered by a game on device B. Another example use case is an application discovering printers on the network.<pre><code>public final class NsdManager</code></pre></section>	https://developer.android.com/reference/android/net/nsd/NsdManager.html
NsdManager.RegistrationListener	A										<section class="prog__container">Interface for callback invocation for service registration<pre><code>public static interface NsdManager.RegistrationListener</code></pre></section>	https://developer.android.com/reference/android/net/nsd/NsdManager.RegistrationListener.html
NsdManager.ResolveListener	A										<section class="prog__container">Interface for callback invocation for service resolution<pre><code>public static interface NsdManager.ResolveListener</code></pre></section>	https://developer.android.com/reference/android/net/nsd/NsdManager.ResolveListener.html
NsdServiceInfo	A										<section class="prog__container">A class representing service information for network service discovery<pre><code>public final class NsdServiceInfo</code></pre></section>	https://developer.android.com/reference/android/net/nsd/NsdServiceInfo.html
AudioCodec	A										<section class="prog__container">This class defines a collection of audio codecs to be used with <pre><code>AudioStream</code></pre>s. Their parameters are designed to be exchanged using Session Description Protocol (SDP). Most of the values listed here can be found in RFC 3551, while others are described in separated standards.<pre><code>public class AudioCodec</code></pre></section>	https://developer.android.com/reference/android/net/rtp/AudioCodec.html
AudioGroup	A										<section class="prog__container">An AudioGroup is an audio hub for the speaker, the microphone, and <pre><code>AudioStream</code></pre>s. Each of these components can be logically turned on or off by calling <pre><code>setMode(int)</code></pre> or <pre><code>setMode(int)</code></pre>. The AudioGroup will go through these components and process them one by one within its execution loop. The loop consists of four steps. First, for each AudioStream not in <pre><code>MODE_SEND_ONLY</code></pre>, decodes its incoming packets and stores in its buffer. Then, if the microphone is enabled, processes the recorded audio and stores in its buffer. Third, if the speaker is enabled, mixes all AudioStream buffers and plays back. Finally, for each AudioStream not in <pre><code>MODE_RECEIVE_ONLY</code></pre>, mixes all other buffers and sends back the encoded packets. An AudioGroup does nothing if there is no AudioStream in it.<pre><code>public class AudioGroup</code></pre></section>	https://developer.android.com/reference/android/net/rtp/AudioGroup.html
AudioStream	A										<section class="prog__container">An AudioStream is a <pre><code>RtpStream</code></pre> which carrys audio payloads over Real-time Transport Protocol (RTP). Two different classes are developed in order to support various usages such as audio conferencing. An AudioStream represents a remote endpoint which consists of a network mapping and a configured <pre><code>AudioCodec</code></pre>. On the other side, An <pre><code>AudioGroup</code></pre> represents a local endpoint which mixes all the AudioStreams and optionally interacts with the speaker and the microphone at the same time. The simplest usage includes one for each endpoints. For other combinations, developers should be aware of the limitations described in <pre><code>AudioGroup</code></pre>.<pre><code>public class AudioStream</code></pre></section>	https://developer.android.com/reference/android/net/rtp/AudioStream.html
android.net.rtp	A										<section class="prog__container">Provides APIs for RTP (Real-time Transport Protocol), allowing applications to manage on-demand or interactive data streaming. In particular, apps that provide VOIP, push-to-talk, conferencing, and audio streaming can use these APIs to initiate sessions and transmit or receive data streams over any available network.</section>	https://developer.android.com/reference/android/net/rtp/package-summary.html
RtpStream	A										<section class="prog__container">RtpStream represents the base class of streams which send and receive network packets with media payloads over Real-time Transport Protocol (RTP). <p class="note">Using this class requires <pre><code>INTERNET</code></pre> permission.<pre><code>public class RtpStream</code></pre></section>	https://developer.android.com/reference/android/net/rtp/RtpStream.html
android.net.sip	A										<section class="prog__container">Provides access to Session Initiation Protocol (SIP) functionality, such as making and answering VOIP calls using SIP.</section>	https://developer.android.com/reference/android/net/sip/package-summary.html
SipAudioCall	A										<section class="prog__container">Handles an Internet audio call over SIP. You can instantiate this class with <pre><code>SipManager</code></pre>, using <pre><code>makeAudioCall()</code></pre> and <pre><code>takeAudioCall()</code></pre>. <p class="note"><strong>Note:</strong> Using this class require the <pre><code>INTERNET</code></pre> and <pre><code>USE_SIP</code></pre> permissions. In addition, <pre><code>startAudio()</code></pre> requires the <pre><code>RECORD_AUDIO</code></pre>, <pre><code>ACCESS_WIFI_STATE</code></pre>, and <pre><code>WAKE_LOCK</code></pre> permissions; and <pre><code>setSpeakerMode()</code></pre> requires the <pre><code>MODIFY_AUDIO_SETTINGS</code></pre> permission.<pre><code>public class SipAudioCall</code></pre></section>	https://developer.android.com/reference/android/net/sip/SipAudioCall.html
SipAudioCall.Listener	A										<section class="prog__container">Listener for events relating to a SIP call, such as when a call is being recieved ("on ringing") or a call is outgoing ("on calling").<pre><code>public static class SipAudioCall.Listener</code></pre></section>	https://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html
SipErrorCode	A										<section class="prog__container">Defines error codes returned during SIP actions. For example, during <pre><code>onRegistrationFailed()</code></pre>, <pre><code>onError()</code></pre>, <pre><code>onCallChangeFailed()</code></pre> and <pre><code>onRegistrationFailed()</code></pre>.<pre><code>public class SipErrorCode</code></pre></section>	https://developer.android.com/reference/android/net/sip/SipErrorCode.html
SipException	A										<section class="prog__container">Indicates a general SIP-related exception.<pre><code>public class SipException</code></pre></section>	https://developer.android.com/reference/android/net/sip/SipException.html
SipManager	A										<section class="prog__container">Provides APIs for SIP tasks, such as initiating SIP connections, and provides access to related SIP services. This class is the starting point for any SIP actions. You can acquire an instance of it with <pre><code>newInstance()</code></pre>.<pre><code>public class SipManager</code></pre></section>	https://developer.android.com/reference/android/net/sip/SipManager.html
SipProfile.Builder	A										<section class="prog__container">Helper class for creating a <pre><code>SipProfile</code></pre>.<pre><code>public static class SipProfile.Builder</code></pre></section>	https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html
SipProfile	A										<section class="prog__container">Defines a SIP profile, including a SIP account, domain and server information.<pre><code>public class SipProfile</code></pre></section>	https://developer.android.com/reference/android/net/sip/SipProfile.html
SipRegistrationListener	A										<section class="prog__container">Listener for SIP registration events.<pre><code>public interface SipRegistrationListener</code></pre></section>	https://developer.android.com/reference/android/net/sip/SipRegistrationListener.html
SipSession	A										<section class="prog__container">Represents a SIP session that is associated with a SIP dialog or a standalone transaction not within a dialog.<pre><code>public final class SipSession</code></pre></section>	https://developer.android.com/reference/android/net/sip/SipSession.html
SipSession.Listener	A										<section class="prog__container">Listener for events relating to a SIP session, such as when a session is being registered ("on registering") or a call is outgoing ("on calling").<pre><code>public static class SipSession.Listener</code></pre></section>	https://developer.android.com/reference/android/net/sip/SipSession.Listener.html
SipSession.State	A										<section class="prog__container">Defines SIP session states, such as "registering", "outgoing call", and "in call".<pre><code>public static class SipSession.State</code></pre></section>	https://developer.android.com/reference/android/net/sip/SipSession.State.html
android.net.wifi	A										<section class="prog__container">Provides classes to manage Wi-Fi functionality on the device.</section>	https://developer.android.com/reference/android/net/wifi/package-summary.html
ScanResult	A										<section class="prog__container">Describes information about a detected access point. In addition to the attributes described here, the supplicant keeps track of <pre><code>quality</code></pre>, <pre><code>noise</code></pre>, and <pre><code>maxbitrate</code></pre> attributes, but does not currently report them to external clients.<pre><code>public class ScanResult</code></pre></section>	https://developer.android.com/reference/android/net/wifi/ScanResult.html
SupplicantState	A										<section class="prog__container">From <pre><code>defs.h</code></pre> in <pre><code>wpa_supplicant</code></pre>.<pre><code>public final enum SupplicantState</code></pre></section>	https://developer.android.com/reference/android/net/wifi/SupplicantState.html
WifiConfiguration.AuthAlgorithm	A										<section class="prog__container">Recognized IEEE 802.11 authentication algorithms.<pre><code>public static class WifiConfiguration.AuthAlgorithm</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.AuthAlgorithm.html
WifiConfiguration.GroupCipher	A										<section class="prog__container">Recognized group ciphers. <pre> CCMP = AES in Counter mode with CBC-MAC [RFC 3610, IEEE 802.11i/D7.0] TKIP = Temporal Key Integrity Protocol [IEEE 802.11i/D7.0] WEP104 = WEP (Wired Equivalent Privacy) with 104-bit key WEP40 = WEP (Wired Equivalent Privacy) with 40-bit key (original 802.11) </pre><pre><code>public static class WifiConfiguration.GroupCipher</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.GroupCipher.html
WifiConfiguration	A										<section class="prog__container">A class representing a configured Wi-Fi network, including the security configuration.<pre><code>public class WifiConfiguration</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.html
WifiConfiguration.KeyMgmt	A										<section class="prog__container">Recognized key management schemes.<pre><code>public static class WifiConfiguration.KeyMgmt</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.KeyMgmt.html
WifiConfiguration.PairwiseCipher	A										<section class="prog__container">Recognized pairwise ciphers for WPA.<pre><code>public static class WifiConfiguration.PairwiseCipher</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.PairwiseCipher.html
WifiConfiguration.Protocol	A										<section class="prog__container">Recognized security protocols.<pre><code>public static class WifiConfiguration.Protocol</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.Protocol.html
WifiConfiguration.Status	A										<section class="prog__container">Possible status of a network configuration.<pre><code>public static class WifiConfiguration.Status</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.Status.html
WifiEnterpriseConfig.Eap	A										<section class="prog__container">The Extensible Authentication Protocol method used<pre><code>public static final class WifiEnterpriseConfig.Eap</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html
WifiEnterpriseConfig	A										<section class="prog__container">Enterprise configuration details for Wi-Fi. Stores details about the EAP method and any associated credentials.<pre><code>public class WifiEnterpriseConfig</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html
WifiEnterpriseConfig.Phase2	A										<section class="prog__container">The inner authentication method used<pre><code>public static final class WifiEnterpriseConfig.Phase2</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Phase2.html
WifiInfo	A										<section class="prog__container">Describes the state of any Wifi connection that is active or is in the process of being set up.<pre><code>public class WifiInfo</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiInfo.html
WifiManager	A										<section class="prog__container">This class provides the primary API for managing all aspects of Wi-Fi connectivity. Get an instance of this class by calling <pre><code>Context.getSystemService(Context.WIFI_SERVICE)</code></pre>. On releases before NYC, it should only be obtained from an application context, and not from any other derived context to avoid memory leaks within the calling process. It deals with several categories of items: <ul> <li>The list of configured networks. The list can be viewed and updated, and attributes of individual entries can be modified.</li> <li>The currently active Wi-Fi network, if any. Connectivity can be established or torn down, and dynamic information about the state of the network can be queried.</li> <li>Results of access point scans, containing enough information to make decisions about what access point to connect to.</li> <li>It defines the names of various Intent actions that are broadcast upon any sort of change in Wi-Fi state. </li></ul> This is the API to use when performing Wi-Fi specific operations. To perform operations that pertain to network connectivity at an abstract level, use <pre><code>ConnectivityManager</code></pre>.<pre><code>public class WifiManager</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiManager.html
WifiManager.MulticastLock	A										<section class="prog__container">Allows an application to receive Wifi Multicast packets. Normally the Wifi stack filters out packets not explicitly addressed to this device. Acquring a MulticastLock will cause the stack to receive packets addressed to multicast addresses. Processing these extra packets can cause a noticable battery drain and should be disabled when not needed.<pre><code>public class WifiManager.MulticastLock</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html
WifiManager.WifiLock	A										<section class="prog__container">Allows an application to keep the Wi-Fi radio awake. Normally the Wi-Fi radio may turn off when the user has not used the device in a while. Acquiring a WifiLock will keep the radio on until the lock is released. Multiple applications may hold WifiLocks, and the radio will only be allowed to turn off when no WifiLocks are held in any application.<pre><code>public class WifiManager.WifiLock</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiManager.WifiLock.html
WifiManager.WpsCallback	A										<section class="prog__container">Interface for callback invocation on a start WPS action<pre><code>public static abstract class WifiManager.WpsCallback</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WifiManager.WpsCallback.html
WpsInfo	A										<section class="prog__container">A class representing Wi-Fi Protected Setup<pre><code>public class WpsInfo</code></pre></section>	https://developer.android.com/reference/android/net/wifi/WpsInfo.html
android.net.wifi.p2p	A										<section class="prog__container">Provides classes to create peer-to-peer (P2P) connections with Wi-Fi Direct.</section>	https://developer.android.com/reference/android/net/wifi/p2p/package-summary.html
WifiP2pConfig	A										<section class="prog__container">A class representing a Wi-Fi P2p configuration for setting up a connection<pre><code>public class WifiP2pConfig</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pConfig.html
WifiP2pDevice	A										<section class="prog__container">A class representing a Wi-Fi p2p device Note that the operations are not thread safe<pre><code>public class WifiP2pDevice</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pDevice.html
WifiP2pDeviceList	A										<section class="prog__container">A class representing a Wi-Fi P2p device list. Note that the operations are not thread safe.<pre><code>public class WifiP2pDeviceList</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pDeviceList.html
WifiP2pGroup	A										<section class="prog__container">A class representing a Wi-Fi P2p group. A p2p group consists of a single group owner and one or more clients. In the case of a group with only two devices, one will be the group owner and the other will be a group client.<pre><code>public class WifiP2pGroup</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pGroup.html
WifiP2pInfo	A										<section class="prog__container">A class representing connection information about a Wi-Fi p2p group<pre><code>public class WifiP2pInfo</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pInfo.html
WifiP2pManager.ActionListener	A										<section class="prog__container">Interface for callback invocation on an application action<pre><code>public static interface WifiP2pManager.ActionListener</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.ActionListener.html
WifiP2pManager.Channel	A										<section class="prog__container">A channel that connects the application to the Wifi p2p framework. Most p2p operations require a Channel as an argument. An instance of Channel is obtained by doing a call on <pre><code>initialize(Context, Looper, WifiP2pManager.ChannelListener)</code></pre><pre><code>public static class WifiP2pManager.Channel</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.Channel.html
WifiP2pManager.ChannelListener	A										<section class="prog__container">Interface for callback invocation when framework channel is lost<pre><code>public static interface WifiP2pManager.ChannelListener</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.ChannelListener.html
WifiP2pManager.ConnectionInfoListener	A										<section class="prog__container">Interface for callback invocation when connection info is available<pre><code>public static interface WifiP2pManager.ConnectionInfoListener</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.ConnectionInfoListener.html
WifiP2pManager.DnsSdServiceResponseListener	A										<section class="prog__container">Interface for callback invocation when Bonjour service discovery response is received<pre><code>public static interface WifiP2pManager.DnsSdServiceResponseListener</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.DnsSdServiceResponseListener.html
WifiP2pManager.DnsSdTxtRecordListener	A										<section class="prog__container">Interface for callback invocation when Bonjour TXT record is available for a service<pre><code>public static interface WifiP2pManager.DnsSdTxtRecordListener</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.DnsSdTxtRecordListener.html
WifiP2pManager.GroupInfoListener	A										<section class="prog__container">Interface for callback invocation when group info is available<pre><code>public static interface WifiP2pManager.GroupInfoListener</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.GroupInfoListener.html
WifiP2pManager	A										<section class="prog__container">This class provides the API for managing Wi-Fi peer-to-peer connectivity. This lets an application discover available peers, setup connection to peers and query for the list of peers. When a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device.<pre><code>public class WifiP2pManager</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html
WifiP2pManager.PeerListListener	A										<section class="prog__container">Interface for callback invocation when peer list is available<pre><code>public static interface WifiP2pManager.PeerListListener</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.PeerListListener.html
WifiP2pManager.ServiceResponseListener	A										<section class="prog__container">Interface for callback invocation when service discovery response other than Upnp or Bonjour is received<pre><code>public static interface WifiP2pManager.ServiceResponseListener</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.ServiceResponseListener.html
WifiP2pManager.UpnpServiceResponseListener	A										<section class="prog__container">Interface for callback invocation when upnp service discovery response is received<pre><code>public static interface WifiP2pManager.UpnpServiceResponseListener</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.UpnpServiceResponseListener.html
WifiP2pDnsSdServiceInfo	A										<section class="prog__container">A class for storing Bonjour service information that is advertised over a Wi-Fi peer-to-peer setup.<pre><code>public class WifiP2pDnsSdServiceInfo</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceInfo.html
WifiP2pDnsSdServiceRequest	A										<section class="prog__container">A class for creating a Bonjour service discovery request for use with <pre><code>addServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code></pre> and <pre><code>removeServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code></pre><pre><code>public class WifiP2pDnsSdServiceRequest</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest.html
WifiP2pServiceInfo	A										<section class="prog__container">A class for storing service information that is advertised over a Wi-Fi peer-to-peer setup<pre><code>public class WifiP2pServiceInfo</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pServiceInfo.html
WifiP2pServiceRequest	A										<section class="prog__container">A class for creating a service discovery request for use with <pre><code>addServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code></pre> and <pre><code>removeServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code></pre><pre><code>public class WifiP2pServiceRequest</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pServiceRequest.html
WifiP2pUpnpServiceInfo	A										<section class="prog__container">A class for storing Upnp service information that is advertised over a Wi-Fi peer-to-peer setup.<pre><code>public class WifiP2pUpnpServiceInfo</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pUpnpServiceInfo.html
WifiP2pUpnpServiceRequest	A										<section class="prog__container">A class for creating a Upnp service discovery request for use with <pre><code>addServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code></pre> and <pre><code>removeServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code></pre><pre><code>public class WifiP2pUpnpServiceRequest</code></pre></section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pUpnpServiceRequest.html
FormatException	A										<section class="prog__container"><pre><code>public class FormatException</code></pre></section>	https://developer.android.com/reference/android/nfc/FormatException.html
NdefMessage	A										<section class="prog__container">Represents an immutable NDEF Message.<pre><code>public final class NdefMessage</code></pre></section>	https://developer.android.com/reference/android/nfc/NdefMessage.html
NdefRecord	A										<section class="prog__container">Represents an immutable NDEF Record.<pre><code>public final class NdefRecord</code></pre></section>	https://developer.android.com/reference/android/nfc/NdefRecord.html
NfcAdapter.CreateBeamUrisCallback	A										<section class="prog__container"><pre><code>public static interface NfcAdapter.CreateBeamUrisCallback</code></pre></section>	https://developer.android.com/reference/android/nfc/NfcAdapter.CreateBeamUrisCallback.html
NfcAdapter.CreateNdefMessageCallback	A										<section class="prog__container">A callback to be invoked when another NFC device capable of NDEF push (Android Beam) is within range.<pre><code>public static interface NfcAdapter.CreateNdefMessageCallback</code></pre></section>	https://developer.android.com/reference/android/nfc/NfcAdapter.CreateNdefMessageCallback.html
NfcAdapter	A										<section class="prog__container">Represents the local NFC adapter.<pre><code>public final class NfcAdapter</code></pre></section>	https://developer.android.com/reference/android/nfc/NfcAdapter.html
NfcAdapter.OnNdefPushCompleteCallback	A										<section class="prog__container">A callback to be invoked when the system successfully delivers your <pre><code>NdefMessage</code></pre> to another device.<pre><code>public static interface NfcAdapter.OnNdefPushCompleteCallback</code></pre></section>	https://developer.android.com/reference/android/nfc/NfcAdapter.OnNdefPushCompleteCallback.html
NfcAdapter.OnTagRemovedListener	A										<section class="prog__container">A callback that is invoked when a tag is removed from the field.<pre><code>public static interface NfcAdapter.OnTagRemovedListener</code></pre></section>	https://developer.android.com/reference/android/nfc/NfcAdapter.OnTagRemovedListener.html
NfcAdapter.ReaderCallback	A										<section class="prog__container">A callback to be invoked when the system finds a tag while the foreground activity is operating in reader mode.<pre><code>public static interface NfcAdapter.ReaderCallback</code></pre></section>	https://developer.android.com/reference/android/nfc/NfcAdapter.ReaderCallback.html
NfcEvent	A										<section class="prog__container">Wraps information associated with any NFC event.<pre><code>public final class NfcEvent</code></pre></section>	https://developer.android.com/reference/android/nfc/NfcEvent.html
NfcManager	A										<section class="prog__container">High level manager used to obtain an instance of an <pre><code>NfcAdapter</code></pre>.<pre><code>public final class NfcManager</code></pre></section>	https://developer.android.com/reference/android/nfc/NfcManager.html
android.nfc	A										<section class="prog__container">Provides access to Near Field Communication (NFC) functionality, allowing applications to read NDEF message in NFC tags. A "tag" may actually be another device that appears as a tag.</section>	https://developer.android.com/reference/android/nfc/package-summary.html
Tag	A										<section class="prog__container">Represents an NFC tag that has been discovered.<pre><code>public final class Tag</code></pre></section>	https://developer.android.com/reference/android/nfc/Tag.html
TagLostException	A										<section class="prog__container"><pre><code>public class TagLostException</code></pre></section>	https://developer.android.com/reference/android/nfc/TagLostException.html
CardEmulation	A										<section class="prog__container">This class can be used to query the state of NFC card emulation services. For a general introduction into NFC card emulation, please read the NFC card emulation developer guide.<pre><code>public final class CardEmulation</code></pre></section>	https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation.html
HostApduService	A										<section class="prog__container"><pre><code>public abstract class HostApduService</code></pre></section>	https://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html
HostNfcFService	A										<section class="prog__container"><pre><code>public abstract class HostNfcFService</code></pre></section>	https://developer.android.com/reference/android/nfc/cardemulation/HostNfcFService.html
NfcFCardEmulation	A										<section class="prog__container">This class can be used to query the state of NFC-F card emulation services. For a general introduction into NFC card emulation, please read the NFC card emulation developer guide.<pre><code>public final class NfcFCardEmulation</code></pre></section>	https://developer.android.com/reference/android/nfc/cardemulation/NfcFCardEmulation.html
OffHostApduService	A										<section class="prog__container"><pre><code>public abstract class OffHostApduService</code></pre></section>	https://developer.android.com/reference/android/nfc/cardemulation/OffHostApduService.html
IsoDep	A										<section class="prog__container">Provides access to ISO-DEP (ISO 14443-4) properties and I/O operations on a <pre><code>Tag</code></pre>.<pre><code>public final class IsoDep</code></pre></section>	https://developer.android.com/reference/android/nfc/tech/IsoDep.html
MifareClassic	A										<section class="prog__container">Provides access to MIFARE Classic properties and I/O operations on a <pre><code>Tag</code></pre>.<pre><code>public final class MifareClassic</code></pre></section>	https://developer.android.com/reference/android/nfc/tech/MifareClassic.html
MifareUltralight	A										<section class="prog__container">Provides access to MIFARE Ultralight properties and I/O operations on a <pre><code>Tag</code></pre>.<pre><code>public final class MifareUltralight</code></pre></section>	https://developer.android.com/reference/android/nfc/tech/MifareUltralight.html
Ndef	A										<section class="prog__container">Provides access to NDEF content and operations on a <pre><code>Tag</code></pre>.<pre><code>public final class Ndef</code></pre></section>	https://developer.android.com/reference/android/nfc/tech/Ndef.html
NdefFormatable	A										<section class="prog__container">Provide access to NDEF format operations on a <pre><code>Tag</code></pre>.<pre><code>public final class NdefFormatable</code></pre></section>	https://developer.android.com/reference/android/nfc/tech/NdefFormatable.html
NfcA	A										<section class="prog__container">Provides access to NFC-A (ISO 14443-3A) properties and I/O operations on a <pre><code>Tag</code></pre>.<pre><code>public final class NfcA</code></pre></section>	https://developer.android.com/reference/android/nfc/tech/NfcA.html
NfcB	A										<section class="prog__container">Provides access to NFC-B (ISO 14443-3B) properties and I/O operations on a <pre><code>Tag</code></pre>.<pre><code>public final class NfcB</code></pre></section>	https://developer.android.com/reference/android/nfc/tech/NfcB.html
NfcBarcode	A										<section class="prog__container">Provides access to tags containing just a barcode.<pre><code>public final class NfcBarcode</code></pre></section>	https://developer.android.com/reference/android/nfc/tech/NfcBarcode.html
NfcF	A										<section class="prog__container">Provides access to NFC-F (JIS 6319-4) properties and I/O operations on a <pre><code>Tag</code></pre>.<pre><code>public final class NfcF</code></pre></section>	https://developer.android.com/reference/android/nfc/tech/NfcF.html
NfcV	A										<section class="prog__container">Provides access to NFC-V (ISO 15693) properties and I/O operations on a <pre><code>Tag</code></pre>.<pre><code>public final class NfcV</code></pre></section>	https://developer.android.com/reference/android/nfc/tech/NfcV.html
android.nfc.tech	A										<section class="prog__container"> These classes provide access to a tag technology's features, which vary by the type of tag that is scanned. A scanned tag can support multiple technologies, and you can find out what they are by calling getTechList().</section>	https://developer.android.com/reference/android/nfc/tech/package-summary.html
TagTechnology	A										<section class="prog__container"><pre><code>TagTechnology</code></pre> is an interface to a technology in a <pre><code>Tag</code></pre>.<pre><code>public interface TagTechnology</code></pre></section>	https://developer.android.com/reference/android/nfc/tech/TagTechnology.html
EGL14	A										<section class="prog__container">EGL 1.4<pre><code>public class EGL14</code></pre></section>	https://developer.android.com/reference/android/opengl/EGL14.html
EGLConfig	A										<section class="prog__container">Wrapper class for native EGLConfig objects.<pre><code>public class EGLConfig</code></pre></section>	https://developer.android.com/reference/android/opengl/EGLConfig.html
EGLContext	A										<section class="prog__container">Wrapper class for native EGLContext objects.<pre><code>public class EGLContext</code></pre></section>	https://developer.android.com/reference/android/opengl/EGLContext.html
EGLDisplay	A										<section class="prog__container">Wrapper class for native EGLDisplay objects.<pre><code>public class EGLDisplay</code></pre></section>	https://developer.android.com/reference/android/opengl/EGLDisplay.html
EGLExt	A										<section class="prog__container">EGL Extensions<pre><code>public class EGLExt</code></pre></section>	https://developer.android.com/reference/android/opengl/EGLExt.html
EGLObjectHandle	A										<section class="prog__container">Base class for wrapped EGL objects.<pre><code>public abstract class EGLObjectHandle</code></pre></section>	https://developer.android.com/reference/android/opengl/EGLObjectHandle.html
EGLSurface	A										<section class="prog__container">Wrapper class for native EGLSurface objects.<pre><code>public class EGLSurface</code></pre></section>	https://developer.android.com/reference/android/opengl/EGLSurface.html
ETC1	A										<section class="prog__container">Methods for encoding and decoding ETC1 textures.<pre><code>public class ETC1</code></pre></section>	https://developer.android.com/reference/android/opengl/ETC1.html
ETC1Util.ETC1Texture	A										<section class="prog__container">A utility class encapsulating a compressed ETC1 texture.<pre><code>public static class ETC1Util.ETC1Texture</code></pre></section>	https://developer.android.com/reference/android/opengl/ETC1Util.ETC1Texture.html
ETC1Util	A										<section class="prog__container">Utility methods for using ETC1 compressed textures.<pre><code>public class ETC1Util</code></pre></section>	https://developer.android.com/reference/android/opengl/ETC1Util.html
GLDebugHelper	A										<section class="prog__container">A helper class for debugging OpenGL ES applications. Wraps the supplied GL interface with a new GL interface that adds support for error checking and logging.<pre><code>public class GLDebugHelper</code></pre></section>	https://developer.android.com/reference/android/opengl/GLDebugHelper.html
GLES10	A										<section class="prog__container"><pre><code>public class GLES10</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES10.html
GLES10Ext	A										<section class="prog__container"><pre><code>public class GLES10Ext</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES10Ext.html
GLES11	A										<section class="prog__container"><pre><code>public class GLES11</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES11.html
GLES11Ext	A										<section class="prog__container"><pre><code>public class GLES11Ext</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES11Ext.html
GLES20	A										<section class="prog__container">OpenGL ES 2.0<pre><code>public class GLES20</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES20.html
GLES30	A										<section class="prog__container">OpenGL ES 3.0<pre><code>public class GLES30</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES30.html
GLES31	A										<section class="prog__container">OpenGL ES 3.1<pre><code>public class GLES31</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES31.html
GLES31Ext.DebugProcKHR	A										<section class="prog__container"><pre><code>public static interface GLES31Ext.DebugProcKHR</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES31Ext.DebugProcKHR.html
GLES31Ext	A										<section class="prog__container"><pre><code>public class GLES31Ext</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES31Ext.html
GLES32.DebugProc	A										<section class="prog__container"><pre><code>public static interface GLES32.DebugProc</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES32.DebugProc.html
GLES32	A										<section class="prog__container">OpenGL ES 3.2<pre><code>public class GLES32</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES32.html
GLException	A										<section class="prog__container">An exception class for OpenGL errors.<pre><code>public class GLException</code></pre></section>	https://developer.android.com/reference/android/opengl/GLException.html
GLSurfaceView.EGLConfigChooser	A										<section class="prog__container">An interface for choosing an EGLConfig configuration from a list of potential configurations.<pre><code>public static interface GLSurfaceView.EGLConfigChooser</code></pre></section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.EGLConfigChooser.html
GLSurfaceView.EGLContextFactory	A										<section class="prog__container">An interface for customizing the eglCreateContext and eglDestroyContext calls.<pre><code>public static interface GLSurfaceView.EGLContextFactory</code></pre></section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.EGLContextFactory.html
GLSurfaceView.EGLWindowSurfaceFactory	A										<section class="prog__container">An interface for customizing the eglCreateWindowSurface and eglDestroySurface calls.<pre><code>public static interface GLSurfaceView.EGLWindowSurfaceFactory</code></pre></section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.EGLWindowSurfaceFactory.html
GLSurfaceView.GLWrapper	A										<section class="prog__container">An interface used to wrap a GL interface.<pre><code>public static interface GLSurfaceView.GLWrapper</code></pre></section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.GLWrapper.html
GLSurfaceView	A										<section class="prog__container">An implementation of SurfaceView that uses the dedicated surface for displaying OpenGL rendering.<pre><code>public class GLSurfaceView</code></pre></section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.html
GLSurfaceView.Renderer	A										<section class="prog__container">A generic renderer interface.<pre><code>public static interface GLSurfaceView.Renderer</code></pre></section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.Renderer.html
GLU	A										<section class="prog__container">A set of GL utilities inspired by the OpenGL Utility Toolkit.<pre><code>public class GLU</code></pre></section>	https://developer.android.com/reference/android/opengl/GLU.html
GLUtils	A										<section class="prog__container">Utility class to help bridging OpenGL ES and Android APIs.<pre><code>public final class GLUtils</code></pre></section>	https://developer.android.com/reference/android/opengl/GLUtils.html
Matrix	A										<section class="prog__container">Matrix math utilities. These methods operate on OpenGL ES format matrices and vectors stored in float arrays.<pre><code>public class Matrix</code></pre></section>	https://developer.android.com/reference/android/opengl/Matrix.html
android.opengl	A										<section class="prog__container">Provides an OpenGL ES static interface and utilities.</section>	https://developer.android.com/reference/android/opengl/package-summary.html
Visibility	A										<section class="prog__container">A collection of utility methods for computing the visibility of triangle meshes.<pre><code>public class Visibility</code></pre></section>	https://developer.android.com/reference/android/opengl/Visibility.html
AsyncTask	A										<section class="prog__container"><pre><code>public abstract class AsyncTask</code></pre></section>	https://developer.android.com/reference/android/os/AsyncTask.html
AsyncTask.Status	A										<section class="prog__container">Indicates the current status of the task. Each status will be set only once during the lifetime of a task.<pre><code>public static final enum AsyncTask.Status</code></pre></section>	https://developer.android.com/reference/android/os/AsyncTask.Status.html
BadParcelableException	A										<section class="prog__container">Exception thrown when a <pre><code>Parcelable</code></pre> is malformed or otherwise invalid.<pre><code>public class BadParcelableException</code></pre></section>	https://developer.android.com/reference/android/os/BadParcelableException.html
BaseBundle	A										<section class="prog__container">A mapping from String keys to values of various types. In most cases, you should work directly with either the <pre><code>Bundle</code></pre> or <pre><code>PersistableBundle</code></pre> subclass.<pre><code>public class BaseBundle</code></pre></section>	https://developer.android.com/reference/android/os/BaseBundle.html
BatteryManager	A										<section class="prog__container">The BatteryManager class contains strings and constants used for values in the <pre><code>ACTION_BATTERY_CHANGED</code></pre> Intent, and provides a method for querying battery and charging properties.<pre><code>public class BatteryManager</code></pre></section>	https://developer.android.com/reference/android/os/BatteryManager.html
Binder	A										<section class="prog__container">Base class for a remotable object, the core part of a lightweight remote procedure call mechanism defined by <pre><code>IBinder</code></pre>. This class is an implementation of IBinder that provides standard local implementation of such an object.<pre><code>public class Binder</code></pre></section>	https://developer.android.com/reference/android/os/Binder.html
Build	A										<section class="prog__container">Information about the current build, extracted from system properties.<pre><code>public class Build</code></pre></section>	https://developer.android.com/reference/android/os/Build.html
Build.VERSION	A										<section class="prog__container">Various version strings.<pre><code>public static class Build.VERSION</code></pre></section>	https://developer.android.com/reference/android/os/Build.VERSION.html
Build.VERSION_CODES	A										<section class="prog__container">Enumeration of the currently known SDK version codes. These are the values that can be found in <pre><code>SDK</code></pre>. Version numbers increment monotonically with each official platform release.<pre><code>public static class Build.VERSION_CODES</code></pre></section>	https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
Bundle	A										<section class="prog__container">A mapping from String keys to various <pre><code>Parcelable</code></pre> values.<pre><code>public final class Bundle</code></pre></section>	https://developer.android.com/reference/android/os/Bundle.html
CancellationSignal	A										<section class="prog__container">Provides the ability to cancel an operation in progress.<pre><code>public final class CancellationSignal</code></pre></section>	https://developer.android.com/reference/android/os/CancellationSignal.html
CancellationSignal.OnCancelListener	A										<section class="prog__container">Listens for cancellation.<pre><code>public static interface CancellationSignal.OnCancelListener</code></pre></section>	https://developer.android.com/reference/android/os/CancellationSignal.OnCancelListener.html
ConditionVariable	A										<section class="prog__container">Class that implements the condition variable locking paradigm.<pre><code>public class ConditionVariable</code></pre></section>	https://developer.android.com/reference/android/os/ConditionVariable.html
CountDownTimer	A										<section class="prog__container">Schedule a countdown until a time in the future, with regular notifications on intervals along the way. Example of showing a 30 second countdown in a text field: <pre class="prettyprint"> new CountDownTimer(30000, 1000) { public void onTick(long millisUntilFinished) { mTextField.setText("seconds remaining: " + millisUntilFinished / 1000); } public void onFinish() { mTextField.setText("done!"); } }.start(); </pre> The calls to <pre><code>onTick(long)</code></pre> are synchronized to this object so that one call to <pre><code>onTick(long)</code></pre> won't ever occur before the previous callback is complete. This is only relevant when the implementation of <pre><code>onTick(long)</code></pre> takes an amount of time to execute that is significant compared to the countdown interval.<pre><code>public abstract class CountDownTimer</code></pre></section>	https://developer.android.com/reference/android/os/CountDownTimer.html
CpuUsageInfo	A										<section class="prog__container">CPU usage information per core.<pre><code>public final class CpuUsageInfo</code></pre></section>	https://developer.android.com/reference/android/os/CpuUsageInfo.html
DeadObjectException	A										<section class="prog__container">The object you are calling has died, because its hosting process no longer exists.<pre><code>public class DeadObjectException</code></pre></section>	https://developer.android.com/reference/android/os/DeadObjectException.html
DeadSystemException	A										<section class="prog__container">The core Android system has died and is going through a runtime restart. All running apps will be promptly killed.<pre><code>public class DeadSystemException</code></pre></section>	https://developer.android.com/reference/android/os/DeadSystemException.html
Debug	A										<section class="prog__container">Provides various debugging methods for Android applications, including tracing and allocation counts.<pre><code>public final class Debug</code></pre></section>	https://developer.android.com/reference/android/os/Debug.html
Debug.InstructionCount	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Instruction counting is no longer supported.<pre><code>public static class Debug.InstructionCount</code></pre></section>	https://developer.android.com/reference/android/os/Debug.InstructionCount.html
Debug.MemoryInfo	A										<section class="prog__container">This class is used to retrieved various statistics about the memory mappings for this process. The returned info is broken down by dalvik, native, and other. All results are in kB.<pre><code>public static class Debug.MemoryInfo</code></pre></section>	https://developer.android.com/reference/android/os/Debug.MemoryInfo.html
DropBoxManager.Entry	A										<section class="prog__container">A single entry retrieved from the drop box. This may include a reference to a stream, so you must call <pre><code>close()</code></pre> when you are done using it.<pre><code>public static class DropBoxManager.Entry</code></pre></section>	https://developer.android.com/reference/android/os/DropBoxManager.Entry.html
DropBoxManager	A										<section class="prog__container">Enqueues chunks of data (from various sources -- application crashes, kernel log records, etc.). The queue is size bounded and will drop old data if the enqueued data exceeds the maximum size. You can think of this as a persistent, system-wide, blob-oriented "logcat".<pre><code>public class DropBoxManager</code></pre></section>	https://developer.android.com/reference/android/os/DropBoxManager.html
Environment	A										<section class="prog__container">Provides access to environment variables.<pre><code>public class Environment</code></pre></section>	https://developer.android.com/reference/android/os/Environment.html
FileObserver	A										<section class="prog__container">Monitors files (using inotify) to fire an event after files are accessed or changed by by any process on the device (including this one). FileObserver is an abstract class; subclasses must implement the event handler <pre><code>onEvent(int, String)</code></pre>.<pre><code>public abstract class FileObserver</code></pre></section>	https://developer.android.com/reference/android/os/FileObserver.html
FileUriExposedException	A										<section class="prog__container">The exception that is thrown when an application exposes a <pre><code>file://</code></pre> <pre><code>Uri</code></pre> to another app.<pre><code>public class FileUriExposedException</code></pre></section>	https://developer.android.com/reference/android/os/FileUriExposedException.html
Handler.Callback	A										<section class="prog__container">Callback interface you can use when instantiating a Handler to avoid having to implement your own subclass of Handler.<pre><code>public static interface Handler.Callback</code></pre></section>	https://developer.android.com/reference/android/os/Handler.Callback.html
Handler	A										<section class="prog__container">A Handler allows you to send and process <pre><code>Message</code></pre> and Runnable objects associated with a thread's <pre><code>MessageQueue</code></pre>. Each Handler instance is associated with a single thread and that thread's message queue. When you create a new Handler, it is bound to the thread / message queue of the thread that is creating it -- from that point on, it will deliver messages and runnables to that message queue and execute them as they come out of the message queue.<pre><code>public class Handler</code></pre></section>	https://developer.android.com/reference/android/os/Handler.html
HandlerThread	A										<section class="prog__container">Handy class for starting a new thread that has a looper. The looper can then be used to create handler classes. Note that start() must still be called.<pre><code>public class HandlerThread</code></pre></section>	https://developer.android.com/reference/android/os/HandlerThread.html
HardwarePropertiesManager	A										<section class="prog__container">The HardwarePropertiesManager class provides a mechanism of accessing hardware state of a device: CPU, GPU and battery temperatures, CPU usage per core, fan speed, etc.<pre><code>public class HardwarePropertiesManager</code></pre></section>	https://developer.android.com/reference/android/os/HardwarePropertiesManager.html
IBinder.DeathRecipient	A										<section class="prog__container">Interface for receiving a callback when the process hosting an IBinder has gone away.<pre><code>public static interface IBinder.DeathRecipient</code></pre></section>	https://developer.android.com/reference/android/os/IBinder.DeathRecipient.html
IBinder	A										<section class="prog__container">Base interface for a remotable object, the core part of a lightweight remote procedure call mechanism designed for high performance when performing in-process and cross-process calls. This interface describes the abstract protocol for interacting with a remotable object. Do not implement this interface directly, instead extend from <pre><code>Binder</code></pre>.<pre><code>public interface IBinder</code></pre></section>	https://developer.android.com/reference/android/os/IBinder.html
IInterface	A										<section class="prog__container">Base class for Binder interfaces. When defining a new interface, you must derive it from IInterface.<pre><code>public interface IInterface</code></pre></section>	https://developer.android.com/reference/android/os/IInterface.html
LocaleList	A										<section class="prog__container">LocaleList is an immutable list of Locales, typically used to keep an ordered list of user preferences for locales.<pre><code>public final class LocaleList</code></pre></section>	https://developer.android.com/reference/android/os/LocaleList.html
Looper	A										<section class="prog__container">Class used to run a message loop for a thread. Threads by default do not have a message loop associated with them; to create one, call <pre><code>prepare()</code></pre> in the thread that is to run the loop, and then <pre><code>loop()</code></pre> to have it process messages until the loop is stopped.<pre><code>public final class Looper</code></pre></section>	https://developer.android.com/reference/android/os/Looper.html
MemoryFile	A										<section class="prog__container">MemoryFile is a wrapper for the Linux ashmem driver. MemoryFiles are backed by shared memory, which can be optionally set to be purgeable. Purgeable files may have their contents reclaimed by the kernel in low memory conditions (only if allowPurging is set to true). After a file is purged, attempts to read or write the file will cause an IOException to be thrown.<pre><code>public class MemoryFile</code></pre></section>	https://developer.android.com/reference/android/os/MemoryFile.html
Message	A										<section class="prog__container">Defines a message containing a description and arbitrary data object that can be sent to a <pre><code>Handler</code></pre>. This object contains two extra int fields and an extra object field that allow you to not do allocations in many cases. <p class="note">While the constructor of Message is public, the best way to get one of these is to call <pre><code>Message.obtain()</code></pre> or one of the <pre><code>Handler.obtainMessage()</code></pre> methods, which will pull them from a pool of recycled objects.<pre><code>public final class Message</code></pre></section>	https://developer.android.com/reference/android/os/Message.html
MessageQueue	A										<section class="prog__container">Low-level class holding the list of messages to be dispatched by a <pre><code>Looper</code></pre>. Messages are not added directly to a MessageQueue, but rather through <pre><code>Handler</code></pre> objects associated with the Looper.<pre><code>public final class MessageQueue</code></pre></section>	https://developer.android.com/reference/android/os/MessageQueue.html
MessageQueue.IdleHandler	A										<section class="prog__container">Callback interface for discovering when a thread is going to block waiting for more messages.<pre><code>public static interface MessageQueue.IdleHandler</code></pre></section>	https://developer.android.com/reference/android/os/MessageQueue.IdleHandler.html
MessageQueue.OnFileDescriptorEventListener	A										<section class="prog__container">A listener which is invoked when file descriptor related events occur.<pre><code>public static interface MessageQueue.OnFileDescriptorEventListener</code></pre></section>	https://developer.android.com/reference/android/os/MessageQueue.OnFileDescriptorEventListener.html
Messenger	A										<section class="prog__container">Reference to a Handler, which others can use to send messages to it. This allows for the implementation of message-based communication across processes, by creating a Messenger pointing to a Handler in one process, and handing that Messenger to another process.<pre><code>public final class Messenger</code></pre></section>	https://developer.android.com/reference/android/os/Messenger.html
NetworkOnMainThreadException	A										<section class="prog__container">The exception that is thrown when an application attempts to perform a networking operation on its main thread.<pre><code>public class NetworkOnMainThreadException</code></pre></section>	https://developer.android.com/reference/android/os/NetworkOnMainThreadException.html
OperationCanceledException	A										<section class="prog__container">An exception type that is thrown when an operation in progress is canceled.<pre><code>public class OperationCanceledException</code></pre></section>	https://developer.android.com/reference/android/os/OperationCanceledException.html
Parcel	A										<section class="prog__container">Container for a message (data and object references) that can be sent through an IBinder. A Parcel can contain both flattened data that will be unflattened on the other side of the IPC (using the various methods here for writing specific types, or the general <pre><code>Parcelable</code></pre> interface), and references to live <pre><code>IBinder</code></pre> objects that will result in the other side receiving a proxy IBinder connected with the original IBinder in the Parcel. <p class="note">Parcel is <strong>not</strong> a general-purpose serialization mechanism. This class (and the corresponding <pre><code>Parcelable</code></pre> API for placing arbitrary objects into a Parcel) is designed as a high-performance IPC transport. As such, it is not appropriate to place any Parcel data in to persistent storage: changes in the underlying implementation of any of the data in the Parcel can render older data unreadable.<pre><code>public final class Parcel</code></pre></section>	https://developer.android.com/reference/android/os/Parcel.html
Parcelable.ClassLoaderCreator	A										<section class="prog__container">Specialization of <pre><code>Parcelable.Creator</code></pre> that allows you to receive the ClassLoader the object is being created in.<pre><code>public static interface Parcelable.ClassLoaderCreator</code></pre></section>	https://developer.android.com/reference/android/os/Parcelable.ClassLoaderCreator.html
Parcelable.Creator	A										<section class="prog__container">Interface that must be implemented and provided as a public CREATOR field that generates instances of your Parcelable class from a Parcel.<pre><code>public static interface Parcelable.Creator</code></pre></section>	https://developer.android.com/reference/android/os/Parcelable.Creator.html
Parcelable	A										<section class="prog__container">Interface for classes whose instances can be written to and restored from a <pre><code>Parcel</code></pre>. Classes implementing the Parcelable interface must also have a non-null static field called <pre><code>CREATOR</code></pre> of a type that implements the <pre><code>Parcelable.Creator</code></pre> interface.<pre><code>public interface Parcelable</code></pre></section>	https://developer.android.com/reference/android/os/Parcelable.html
ParcelFileDescriptor.AutoCloseInputStream	A										<section class="prog__container">An InputStream you can create on a ParcelFileDescriptor, which will take care of calling <pre><code>ParcelFileDescriptor.close()</code></pre> for you when the stream is closed.<pre><code>public static class ParcelFileDescriptor.AutoCloseInputStream</code></pre></section>	https://developer.android.com/reference/android/os/ParcelFileDescriptor.AutoCloseInputStream.html
ParcelFileDescriptor.AutoCloseOutputStream	A										<section class="prog__container">An OutputStream you can create on a ParcelFileDescriptor, which will take care of calling <pre><code>ParcelFileDescriptor.close()</code></pre> for you when the stream is closed.<pre><code>public static class ParcelFileDescriptor.AutoCloseOutputStream</code></pre></section>	https://developer.android.com/reference/android/os/ParcelFileDescriptor.AutoCloseOutputStream.html
ParcelFileDescriptor.FileDescriptorDetachedException	A										<section class="prog__container">Exception that indicates that the file descriptor was detached.<pre><code>public static class ParcelFileDescriptor.FileDescriptorDetachedException</code></pre></section>	https://developer.android.com/reference/android/os/ParcelFileDescriptor.FileDescriptorDetachedException.html
ParcelFileDescriptor	A										<section class="prog__container">The FileDescriptor returned by <pre><code>readFileDescriptor()</code></pre>, allowing you to close it when done with it.<pre><code>public class ParcelFileDescriptor</code></pre></section>	https://developer.android.com/reference/android/os/ParcelFileDescriptor.html
ParcelFileDescriptor.OnCloseListener	A										<section class="prog__container">Callback indicating that a ParcelFileDescriptor has been closed.<pre><code>public static interface ParcelFileDescriptor.OnCloseListener</code></pre></section>	https://developer.android.com/reference/android/os/ParcelFileDescriptor.OnCloseListener.html
ParcelFormatException	A										<section class="prog__container">The contents of a Parcel (usually during unmarshalling) does not contain the expected data.<pre><code>public class ParcelFormatException</code></pre></section>	https://developer.android.com/reference/android/os/ParcelFormatException.html
ParcelUuid	A										<section class="prog__container">This class is a Parcelable wrapper around <pre><code>UUID</code></pre> which is an immutable representation of a 128-bit universally unique identifier.<pre><code>public final class ParcelUuid</code></pre></section>	https://developer.android.com/reference/android/os/ParcelUuid.html
PatternMatcher	A										<section class="prog__container">A simple pattern matcher, which is safe to use on untrusted data: it does not provide full reg-exp support, only simple globbing that can not be used maliciously.<pre><code>public class PatternMatcher</code></pre></section>	https://developer.android.com/reference/android/os/PatternMatcher.html
PersistableBundle	A										<section class="prog__container">A mapping from String keys to values of various types. The set of types supported by this class is purposefully restricted to simple objects that can safely be persisted to and restored from disk.<pre><code>public final class PersistableBundle</code></pre></section>	https://developer.android.com/reference/android/os/PersistableBundle.html
PowerManager	A										<section class="prog__container">This class gives you control of the power state of the device.<pre><code>public final class PowerManager</code></pre></section>	https://developer.android.com/reference/android/os/PowerManager.html
PowerManager.WakeLock	A										<section class="prog__container">A wake lock is a mechanism to indicate that your application needs to have the device stay on.<pre><code>public final class PowerManager.WakeLock</code></pre></section>	https://developer.android.com/reference/android/os/PowerManager.WakeLock.html
Process	A										<section class="prog__container">Tools for managing OS processes.<pre><code>public class Process</code></pre></section>	https://developer.android.com/reference/android/os/Process.html
RecoverySystem	A										<section class="prog__container">RecoverySystem contains methods for interacting with the Android recovery system (the separate partition that can be used to install system updates, wipe user data, etc.)<pre><code>public class RecoverySystem</code></pre></section>	https://developer.android.com/reference/android/os/RecoverySystem.html
RecoverySystem.ProgressListener	A										<section class="prog__container">Interface definition for a callback to be invoked regularly as verification proceeds.<pre><code>public static interface RecoverySystem.ProgressListener</code></pre></section>	https://developer.android.com/reference/android/os/RecoverySystem.ProgressListener.html
RemoteCallbackList	A										<section class="prog__container">Takes care of the grunt work of maintaining a list of remote interfaces, typically for the use of performing callbacks from a <pre><code>Service</code></pre> to its clients. In particular, this: <ul> <li> Keeps track of a set of registered <pre><code>IInterface</code></pre> callbacks, taking care to identify them through their underlying unique <pre><code>IBinder</code></pre> (by calling <pre><code>IInterface.asBinder()</code></pre>. <li> Attaches a <pre><code>IBinder.DeathRecipient</code></pre> to each registered interface, so that it can be cleaned out of the list if its process goes away. <li> Performs locking of the underlying list of interfaces to deal with multithreaded incoming calls, and a thread-safe way to iterate over a snapshot of the list without holding its lock. </li></li></li></ul><pre><code>public class RemoteCallbackList</code></pre></section>	https://developer.android.com/reference/android/os/RemoteCallbackList.html
RemoteException	A										<section class="prog__container">Parent exception for all Binder remote-invocation errors<pre><code>public class RemoteException</code></pre></section>	https://developer.android.com/reference/android/os/RemoteException.html
ResultReceiver	A										<section class="prog__container">Generic interface for receiving a callback result from someone. Use this by creating a subclass and implement <pre><code>onReceiveResult(int, Bundle)</code></pre>, which you can then pass to others and send through IPC, and receive results they supply with <pre><code>send(int, Bundle)</code></pre>.<pre><code>public class ResultReceiver</code></pre></section>	https://developer.android.com/reference/android/os/ResultReceiver.html
StatFs	A										<section class="prog__container">Retrieve overall information about the space on a filesystem. This is a wrapper for Unix statvfs().<pre><code>public class StatFs</code></pre></section>	https://developer.android.com/reference/android/os/StatFs.html
StrictMode	A										<section class="prog__container"><pre><code>public final class StrictMode</code></pre></section>	https://developer.android.com/reference/android/os/StrictMode.html
StrictMode.ThreadPolicy.Builder	A										<section class="prog__container">Creates <pre><code>StrictMode.ThreadPolicy</code></pre> instances. Methods whose names start with <pre><code>detect</code></pre> specify what problems we should look for. Methods whose names start with <pre><code>penalty</code></pre> specify what we should do when we detect a problem.<pre><code>public static final class StrictMode.ThreadPolicy.Builder</code></pre></section>	https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html
StrictMode.ThreadPolicy	A										<section class="prog__container"><pre><code>StrictMode</code></pre> policy applied to a certain thread.<pre><code>public static final class StrictMode.ThreadPolicy</code></pre></section>	https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.html
StrictMode.VmPolicy.Builder	A										<section class="prog__container">Creates <pre><code>StrictMode.VmPolicy</code></pre> instances. Methods whose names start with <pre><code>detect</code></pre> specify what problems we should look for. Methods whose names start with <pre><code>penalty</code></pre> specify what we should do when we detect a problem.<pre><code>public static final class StrictMode.VmPolicy.Builder</code></pre></section>	https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html
StrictMode.VmPolicy	A										<section class="prog__container"><pre><code>StrictMode</code></pre> policy applied to all threads in the virtual machine's process.<pre><code>public static final class StrictMode.VmPolicy</code></pre></section>	https://developer.android.com/reference/android/os/StrictMode.VmPolicy.html
SystemClock	A										<section class="prog__container">Core timekeeping facilities.<pre><code>public final class SystemClock</code></pre></section>	https://developer.android.com/reference/android/os/SystemClock.html
TokenWatcher	A										<section class="prog__container">Helper class that helps you use IBinder objects as reference counted tokens. IBinders make good tokens because we find out when they are removed<pre><code>public abstract class TokenWatcher</code></pre></section>	https://developer.android.com/reference/android/os/TokenWatcher.html
Trace	A										<section class="prog__container">Writes trace events to the system trace buffer. These trace events can be collected and visualized using the Systrace tool.<pre><code>public final class Trace</code></pre></section>	https://developer.android.com/reference/android/os/Trace.html
TransactionTooLargeException	A										<section class="prog__container">The Binder transaction failed because it was too large.<pre><code>public class TransactionTooLargeException</code></pre></section>	https://developer.android.com/reference/android/os/TransactionTooLargeException.html
UserHandle	A										<section class="prog__container">Representation of a user on the device.<pre><code>public final class UserHandle</code></pre></section>	https://developer.android.com/reference/android/os/UserHandle.html
UserManager	A										<section class="prog__container">Manages users and user details on a multi-user system. There are two major categories of users: fully customizable users with their own login, and managed profiles that share a workspace with a related user.<pre><code>public class UserManager</code></pre></section>	https://developer.android.com/reference/android/os/UserManager.html
Vibrator	A										<section class="prog__container">Class that operates the vibrator on the device.<pre><code>public abstract class Vibrator</code></pre></section>	https://developer.android.com/reference/android/os/Vibrator.html
WorkSource	A										<section class="prog__container">Describes the source of some work that may be done by someone else. Currently the public representation of what a work source is is not defined; this is an opaque container.<pre><code>public class WorkSource</code></pre></section>	https://developer.android.com/reference/android/os/WorkSource.html
HealthStats	A										<section class="prog__container">A HealthStats object contains system health data about an application.<pre><code>public class HealthStats</code></pre></section>	https://developer.android.com/reference/android/os/health/HealthStats.html
android.os.health	A										<section class="prog__container"> Applications running in the background are responsible for a significant amount of battery usage on a typical android device. There are several things that applications can do in order to reduce their impact. For example, by using JobScheduler, an application does not need to independently monitor whether the network is available, whether the device is plugged in, etc. In addition to being simpler to use, the application's services are only started when the required conditions have been met. But even when using the appropriate helper APIs, applications still can reduce their footprint. This package provides more insight into what is going on behind the scenes when an application is running. Application data is tracked by which user id (uid) is using particular resources. A snapshot of an application's measurements can be taken with the SystemHealth.takeMyUidSnapshot() method. The HealthStats object returned contains the statistics. HealthStats In order to be returned efficiently, the HealthStats class uses a set of int keys to identify the data returned. The UidHealthStats, PidHealthStats, PackageHealthStats , ProcessHealthStats, and ServiceHealthStats classes provide those constants. Each HealthStats object will be associated with exactly one of those classes. The object returned from SystemHealth.takeMyUidSnapshot() will be using the UidHealthStats keys, as it contains all of the data available for that uid. Classes HealthStats A HealthStats object contains system health data about an application. PackageHealthStats Keys for HealthStats returned from HealthStats.getStats(int) with the UidHealthStats.STATS_PACKAGES key. PidHealthStats Keys for HealthStats returned from HealthStats.getStats(int) with the UidHealthStats.STATS_PIDS key. ProcessHealthStats Keys for HealthStats returned from HealthStats.getStats(int) with the UidHealthStats.STATS_PROCESSES key. ServiceHealthStats Keys for HealthStats returned from HealthStats.getStats(int) with the PackageHealthStats.STATS_SERVICES key. SystemHealthManager Provides access to data about how various system resources are used by applications. TimerStat A TimerStat object stores a count and a time. UidHealthStats Keys for HealthStats returned from SystemHealthManager.takeUidSnapshot(int), SystemHealthManager.takeMyUidSnapshot(), and SystemHealthManager.takeUidSnapshots(int[]). </section>	https://developer.android.com/reference/android/os/health/package-summary.html
PackageHealthStats	A										<section class="prog__container">Keys for <pre><code>HealthStats</code></pre> returned from <pre><code>HealthStats.getStats(int)</code></pre> with the <pre><code>UidHealthStats.STATS_PACKAGES</code></pre> key.<pre><code>public final class PackageHealthStats</code></pre></section>	https://developer.android.com/reference/android/os/health/PackageHealthStats.html
PidHealthStats	A										<section class="prog__container">Keys for <pre><code>HealthStats</code></pre> returned from <pre><code>HealthStats.getStats(int)</code></pre> with the <pre><code>UidHealthStats.STATS_PIDS</code></pre> key.<pre><code>public final class PidHealthStats</code></pre></section>	https://developer.android.com/reference/android/os/health/PidHealthStats.html
ProcessHealthStats	A										<section class="prog__container">Keys for <pre><code>HealthStats</code></pre> returned from <pre><code>HealthStats.getStats(int)</code></pre> with the <pre><code>UidHealthStats.STATS_PROCESSES</code></pre> key.<pre><code>public final class ProcessHealthStats</code></pre></section>	https://developer.android.com/reference/android/os/health/ProcessHealthStats.html
ServiceHealthStats	A										<section class="prog__container">Keys for <pre><code>HealthStats</code></pre> returned from <pre><code>HealthStats.getStats(int)</code></pre> with the <pre><code>PackageHealthStats.STATS_SERVICES</code></pre> key.<pre><code>public final class ServiceHealthStats</code></pre></section>	https://developer.android.com/reference/android/os/health/ServiceHealthStats.html
SystemHealthManager	A										<section class="prog__container">Provides access to data about how various system resources are used by applications.<pre><code>public class SystemHealthManager</code></pre></section>	https://developer.android.com/reference/android/os/health/SystemHealthManager.html
TimerStat	A										<section class="prog__container">A TimerStat object stores a count and a time.<pre><code>public final class TimerStat</code></pre></section>	https://developer.android.com/reference/android/os/health/TimerStat.html
UidHealthStats	A										<section class="prog__container">Keys for <pre><code>HealthStats</code></pre> returned from <pre><code>SystemHealthManager.takeUidSnapshot(int)</code></pre>, <pre><code>SystemHealthManager.takeMyUidSnapshot()</code></pre>, and <pre><code>SystemHealthManager.takeUidSnapshots(int[])</code></pre>.<pre><code>public final class UidHealthStats</code></pre></section>	https://developer.android.com/reference/android/os/health/UidHealthStats.html
OnObbStateChangeListener	A										<section class="prog__container">Used for receiving notifications from <pre><code>StorageManager</code></pre> about OBB file states.<pre><code>public abstract class OnObbStateChangeListener</code></pre></section>	https://developer.android.com/reference/android/os/storage/OnObbStateChangeListener.html
android.os.storage	A										<section class="prog__container"> Contains classes for the system storage service, which manages binary asset filesystems known as Opaque Binary Blobs (OBBs). </section>	https://developer.android.com/reference/android/os/storage/package-summary.html
StorageManager	A										<section class="prog__container">StorageManager is the interface to the systems storage service. The storage manager handles storage-related items such as Opaque Binary Blobs (OBBs).<pre><code>public class StorageManager</code></pre></section>	https://developer.android.com/reference/android/os/storage/StorageManager.html
StorageVolume	A										<section class="prog__container">Information about a shared/external storage volume for a specific user.<pre><code>public final class StorageVolume</code></pre></section>	https://developer.android.com/reference/android/os/storage/StorageVolume.html
CheckBoxPreference	A										<section class="prog__container">A <pre><code>Preference</code></pre> that provides checkbox widget functionality.<pre><code>public class CheckBoxPreference</code></pre></section>	https://developer.android.com/reference/android/preference/CheckBoxPreference.html
DialogPreference	A										<section class="prog__container">A base class for <pre><code>Preference</code></pre> objects that are dialog-based. These preferences will, when clicked, open a dialog showing the actual preference controls.<pre><code>public abstract class DialogPreference</code></pre></section>	https://developer.android.com/reference/android/preference/DialogPreference.html
EditTextPreference	A										<section class="prog__container">A <pre><code>Preference</code></pre> that allows for string input.<pre><code>public class EditTextPreference</code></pre></section>	https://developer.android.com/reference/android/preference/EditTextPreference.html
ListPreference	A										<section class="prog__container">A <pre><code>Preference</code></pre> that displays a list of entries as a dialog.<pre><code>public class ListPreference</code></pre></section>	https://developer.android.com/reference/android/preference/ListPreference.html
MultiSelectListPreference	A										<section class="prog__container">A <pre><code>Preference</code></pre> that displays a list of entries as a dialog.<pre><code>public class MultiSelectListPreference</code></pre></section>	https://developer.android.com/reference/android/preference/MultiSelectListPreference.html
android.preference	A										<section class="prog__container"> The preferences portion of an application should be ran as a separate Activity that extends the PreferenceActivity class. In the PreferenceActivity, a PreferenceScreen object should be the root element of the layout. The PreferenceScreen contains Preference elements such as a CheckBoxPreference, EditTextPreference, ListPreference, PreferenceCategory, or RingtonePreference. </section>	https://developer.android.com/reference/android/preference/package-summary.html
Preference.BaseSavedState	A										<section class="prog__container">A base class for managing the instance state of a <pre><code>Preference</code></pre>.<pre><code>public static class Preference.BaseSavedState</code></pre></section>	https://developer.android.com/reference/android/preference/Preference.BaseSavedState.html
Preference	A										<section class="prog__container">Represents the basic Preference UI building block displayed by a <pre><code>PreferenceActivity</code></pre> in the form of a <pre><code>ListView</code></pre>. This class provides the <pre><code>View</code></pre> to be displayed in the activity and associates with a <pre><code>SharedPreferences</code></pre> to store/retrieve the preference data.<pre><code>public class Preference</code></pre></section>	https://developer.android.com/reference/android/preference/Preference.html
Preference.OnPreferenceChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the value of this <pre><code>Preference</code></pre> has been changed by the user and is about to be set and/or persisted. This gives the client a chance to prevent setting and/or persisting the value.<pre><code>public static interface Preference.OnPreferenceChangeListener</code></pre></section>	https://developer.android.com/reference/android/preference/Preference.OnPreferenceChangeListener.html
Preference.OnPreferenceClickListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a <pre><code>Preference</code></pre> is clicked.<pre><code>public static interface Preference.OnPreferenceClickListener</code></pre></section>	https://developer.android.com/reference/android/preference/Preference.OnPreferenceClickListener.html
PreferenceActivity.Header	A										<section class="prog__container">Description of a single Header item that the user can select.<pre><code>public static final class PreferenceActivity.Header</code></pre></section>	https://developer.android.com/reference/android/preference/PreferenceActivity.Header.html
PreferenceActivity	A										<section class="prog__container">This is the base class for an activity to show a hierarchy of preferences to the user. Prior to <pre><code>HONEYCOMB</code></pre> this class only allowed the display of a single set of preference; this functionality should now be found in the new <pre><code>PreferenceFragment</code></pre> class. If you are using PreferenceActivity in its old mode, the documentation there applies to the deprecated APIs here.<pre><code>public abstract class PreferenceActivity</code></pre></section>	https://developer.android.com/reference/android/preference/PreferenceActivity.html
PreferenceCategory	A										<section class="prog__container">Used to group <pre><code>Preference</code></pre> objects and provide a disabled title above the group. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class PreferenceCategory</code></pre></section>	https://developer.android.com/reference/android/preference/PreferenceCategory.html
PreferenceFragment	A										<section class="prog__container">Shows a hierarchy of <pre><code>Preference</code></pre> objects as lists. These preferences will automatically save to <pre><code>SharedPreferences</code></pre> as the user interacts with them. To retrieve an instance of <pre><code>SharedPreferences</code></pre> that the preference hierarchy in this fragment will use, call <pre><code>getDefaultSharedPreferences(android.content.Context)</code></pre> with a context in the same package as this fragment.<pre><code>public abstract class PreferenceFragment</code></pre></section>	https://developer.android.com/reference/android/preference/PreferenceFragment.html
PreferenceFragment.OnPreferenceStartFragmentCallback	A										<section class="prog__container">Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a new fragment.<pre><code>public static interface PreferenceFragment.OnPreferenceStartFragmentCallback</code></pre></section>	https://developer.android.com/reference/android/preference/PreferenceFragment.OnPreferenceStartFragmentCallback.html
PreferenceGroup	A										<section class="prog__container">A container for multiple <pre><code>Preference</code></pre> objects. It is a base class for Preference objects that are parents, such as <pre><code>PreferenceCategory</code></pre> and <pre><code>PreferenceScreen</code></pre>. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public abstract class PreferenceGroup</code></pre></section>	https://developer.android.com/reference/android/preference/PreferenceGroup.html
PreferenceManager	A										<section class="prog__container">Used to help create <pre><code>Preference</code></pre> hierarchies from activities or XML.<pre><code>public class PreferenceManager</code></pre></section>	https://developer.android.com/reference/android/preference/PreferenceManager.html
PreferenceManager.OnActivityDestroyListener	A										<section class="prog__container">Interface definition for a class that will be called when the container's activity is destroyed.<pre><code>public static interface PreferenceManager.OnActivityDestroyListener</code></pre></section>	https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityDestroyListener.html
PreferenceManager.OnActivityResultListener	A										<section class="prog__container">Interface definition for a class that will be called when the container's activity receives an activity result.<pre><code>public static interface PreferenceManager.OnActivityResultListener</code></pre></section>	https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityResultListener.html
PreferenceManager.OnActivityStopListener	A										<section class="prog__container">Interface definition for a class that will be called when the container's activity is stopped.<pre><code>public static interface PreferenceManager.OnActivityStopListener</code></pre></section>	https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityStopListener.html
PreferenceScreen	A										<section class="prog__container">Represents a top-level <pre><code>Preference</code></pre> that is the root of a Preference hierarchy. A <pre><code>PreferenceActivity</code></pre> points to an instance of this class to show the preferences. To instantiate this class, use <pre><code>createPreferenceScreen(Context)</code></pre>. <ul> This class can appear in two places: <li> When a <pre><code>PreferenceActivity</code></pre> points to this, it is used as the root and is not shown (only the contained preferences are shown). <li> When it appears inside another preference hierarchy, it is shown and serves as the gateway to another screen of preferences (either by showing another screen of preferences as a <pre><code>Dialog</code></pre> or via a <pre><code>startActivity(android.content.Intent)</code></pre> from the <pre><code>getIntent()</code></pre>). The children of this <pre><code>PreferenceScreen</code></pre> are NOT shown in the screen that this <pre><code>PreferenceScreen</code></pre> is shown in. Instead, a separate screen will be shown when this preference is clicked. </li></li></ul><pre><code>public final class PreferenceScreen</code></pre></section>	https://developer.android.com/reference/android/preference/PreferenceScreen.html
RingtonePreference	A										<section class="prog__container">A <pre><code>Preference</code></pre> that allows the user to choose a ringtone from those on the device. The chosen ringtone's URI will be persisted as a string.<pre><code>public class RingtonePreference</code></pre></section>	https://developer.android.com/reference/android/preference/RingtonePreference.html
SwitchPreference	A										<section class="prog__container">A <pre><code>Preference</code></pre> that provides a two-state toggleable option.<pre><code>public class SwitchPreference</code></pre></section>	https://developer.android.com/reference/android/preference/SwitchPreference.html
TwoStatePreference	A										<section class="prog__container">Common base class for preferences that have two selectable states, persist a boolean value in SharedPreferences, and may have dependent preferences that are enabled/disabled based on the current state.<pre><code>public abstract class TwoStatePreference</code></pre></section>	https://developer.android.com/reference/android/preference/TwoStatePreference.html
android.print	A										<section class="prog__container"> Provides classes for implementing print support in applications and also contains all base classes and abstractions involved in printing. These base classes are also used by other more specialized printing related packages. </section>	https://developer.android.com/reference/android/print/package-summary.html
PageRange	A										<section class="prog__container">Represents a range of pages. The start and end page indices of the range are zero based and inclusive.<pre><code>public final class PageRange</code></pre></section>	https://developer.android.com/reference/android/print/PageRange.html
PrintAttributes.Builder	A										<section class="prog__container">Builder for creating <pre><code>PrintAttributes</code></pre>.<pre><code>public static final class PrintAttributes.Builder</code></pre></section>	https://developer.android.com/reference/android/print/PrintAttributes.Builder.html
PrintAttributes	A										<section class="prog__container">This class represents the attributes of a print job. These attributes describe how the printed content should be laid out. For example, the print attributes may state that the content should be laid out on a letter size with 300 DPI (dots per inch) resolution, have a margin of 10 mills (thousand of an inch) on all sides, and be black and white.<pre><code>public final class PrintAttributes</code></pre></section>	https://developer.android.com/reference/android/print/PrintAttributes.html
PrintAttributes.Margins	A										<section class="prog__container">This class specifies content margins. Margins define the white space around the content where the left margin defines the amount of white space on the left of the content and so on.<pre><code>public static final class PrintAttributes.Margins</code></pre></section>	https://developer.android.com/reference/android/print/PrintAttributes.Margins.html
PrintAttributes.MediaSize	A										<section class="prog__container">This class specifies a supported media size. Media size is the dimension of the media on which the content is printed. For example, the <pre><code>NA_LETTER</code></pre> media size designates a page with size 8.5" x 11".<pre><code>public static final class PrintAttributes.MediaSize</code></pre></section>	https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html
PrintAttributes.Resolution	A										<section class="prog__container">This class specifies a supported resolution in DPI (dots per inch). Resolution defines how many points with different color can be placed on one inch in horizontal or vertical direction of the target media. For example, a printer with 600 DPI can produce higher quality images the one with 300 DPI resolution.<pre><code>public static final class PrintAttributes.Resolution</code></pre></section>	https://developer.android.com/reference/android/print/PrintAttributes.Resolution.html
PrintDocumentAdapter	A										<section class="prog__container">Base class that provides the content of a document to be printed. <h3>Lifecycle</h3><pre><code>public abstract class PrintDocumentAdapter</code></pre></section>	https://developer.android.com/reference/android/print/PrintDocumentAdapter.html
PrintDocumentAdapter.LayoutResultCallback	A										<section class="prog__container">Base class for implementing a callback for the result of <pre><code>onLayout(PrintAttributes, PrintAttributes, CancellationSignal, LayoutResultCallback, Bundle)</code></pre>.<pre><code>public static abstract class PrintDocumentAdapter.LayoutResultCallback</code></pre></section>	https://developer.android.com/reference/android/print/PrintDocumentAdapter.LayoutResultCallback.html
PrintDocumentAdapter.WriteResultCallback	A										<section class="prog__container">Base class for implementing a callback for the result of <pre><code>onWrite(PageRange[], ParcelFileDescriptor, CancellationSignal, WriteResultCallback)</code></pre>.<pre><code>public static abstract class PrintDocumentAdapter.WriteResultCallback</code></pre></section>	https://developer.android.com/reference/android/print/PrintDocumentAdapter.WriteResultCallback.html
PrintDocumentInfo.Builder	A										<section class="prog__container">Builder for creating a <pre><code>PrintDocumentInfo</code></pre>.<pre><code>public static final class PrintDocumentInfo.Builder</code></pre></section>	https://developer.android.com/reference/android/print/PrintDocumentInfo.Builder.html
PrintDocumentInfo	A										<section class="prog__container">This class encapsulates information about a document for printing purposes. This meta-data is used by the platform and print services, components that interact with printers. For example, this class contains the number of pages contained in the document it describes and this number of pages is shown to the user allowing him/her to select the range to print. Also a print service may optimize the printing process based on the content type, such as document or photo.<pre><code>public final class PrintDocumentInfo</code></pre></section>	https://developer.android.com/reference/android/print/PrintDocumentInfo.html
PrinterCapabilitiesInfo.Builder	A										<section class="prog__container">Builder for creating of a <pre><code>PrinterCapabilitiesInfo</code></pre>. This class is responsible to enforce that all required attributes have at least one default value. In other words, this class creates only well-formed <pre><code>PrinterCapabilitiesInfo</code></pre>s.<pre><code>public static final class PrinterCapabilitiesInfo.Builder</code></pre></section>	https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.Builder.html
PrinterCapabilitiesInfo	A										<section class="prog__container">This class represents the capabilities of a printer. Instances of this class are created by a print service to report the capabilities of a printer it manages. The capabilities of a printer specify how it can print content. For example, what are the media sizes supported by the printer, what are the minimal margins of the printer based on its technical design, etc.<pre><code>public final class PrinterCapabilitiesInfo</code></pre></section>	https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.html
PrinterId	A										<section class="prog__container">This class represents the unique id of a printer.<pre><code>public final class PrinterId</code></pre></section>	https://developer.android.com/reference/android/print/PrinterId.html
PrinterInfo.Builder	A										<section class="prog__container">Builder for creating of a <pre><code>PrinterInfo</code></pre>.<pre><code>public static final class PrinterInfo.Builder</code></pre></section>	https://developer.android.com/reference/android/print/PrinterInfo.Builder.html
PrinterInfo	A										<section class="prog__container">This class represents the description of a printer. Instances of this class are created by print services to report to the system the printers they manage. The information of this class has two major components, printer properties such as name, id, status, description and printer capabilities which describe the various print modes a printer supports such as media sizes, margins, etc.<pre><code>public final class PrinterInfo</code></pre></section>	https://developer.android.com/reference/android/print/PrinterInfo.html
PrintJob	A										<section class="prog__container">This class represents a print job from the perspective of an application. It contains behavior methods for performing operations on it as well as methods for querying its state. A snapshot of the print job state is represented by the <pre><code>PrintJobInfo</code></pre> class. The state of a print job may change over time. An application receives instances of this class when creating a print job or querying for its print jobs.<pre><code>public final class PrintJob</code></pre></section>	https://developer.android.com/reference/android/print/PrintJob.html
PrintJobId	A										<section class="prog__container">This class represents the id of a print job.<pre><code>public final class PrintJobId</code></pre></section>	https://developer.android.com/reference/android/print/PrintJobId.html
PrintJobInfo.Builder	A										<section class="prog__container">Builder for creating a <pre><code>PrintJobInfo</code></pre>.<pre><code>public static final class PrintJobInfo.Builder</code></pre></section>	https://developer.android.com/reference/android/print/PrintJobInfo.Builder.html
PrintJobInfo	A										<section class="prog__container">This class represents the description of a print job. The print job state includes properties such as its id, print attributes used for generating the content, and so on. Note that the print jobs state may change over time and this class represents a snapshot of this state.<pre><code>public final class PrintJobInfo</code></pre></section>	https://developer.android.com/reference/android/print/PrintJobInfo.html
PrintManager	A										<section class="prog__container">System level service for accessing the printing capabilities of the platform.<pre><code>public final class PrintManager</code></pre></section>	https://developer.android.com/reference/android/print/PrintManager.html
PrintedPdfDocument	A										<section class="prog__container">This class is a helper for creating a PDF file for given print attributes. It is useful for implementing printing via the native Android graphics APIs.<pre><code>public class PrintedPdfDocument</code></pre></section>	https://developer.android.com/reference/android/print/pdf/PrintedPdfDocument.html
CustomPrinterIconCallback	A										<section class="prog__container">Callback for <pre><code>onRequestCustomPrinterIcon(PrinterId, CancellationSignal, CustomPrinterIconCallback)</code></pre>.<pre><code>public final class CustomPrinterIconCallback</code></pre></section>	https://developer.android.com/reference/android/printservice/CustomPrinterIconCallback.html
android.printservice	A										<section class="prog__container"> Provides classes for implementing print services. Print services are plug-in components that know how to talk to printers via some standard protocols. These services serve as a bridge between the system and the printers. Hence, the printer and print protocol specific implementation is factored out of the system and can be independently developed and updated. </section>	https://developer.android.com/reference/android/printservice/package-summary.html
PrintDocument	A										<section class="prog__container">This class represents a printed document from the perspective of a print service. It exposes APIs to query the document and obtain its data.<pre><code>public final class PrintDocument</code></pre></section>	https://developer.android.com/reference/android/printservice/PrintDocument.html
PrinterDiscoverySession	A										<section class="prog__container">This class encapsulates the interaction between a print service and the system during printer discovery. During printer discovery you are responsible for adding discovered printers, removing previously added printers that disappeared, and updating already added printers.<pre><code>public abstract class PrinterDiscoverySession</code></pre></section>	https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html
PrintJob	A										<section class="prog__container">This class represents a print job from the perspective of a print service. It provides APIs for observing the print job state and performing operations on the print job.<pre><code>public final class PrintJob</code></pre></section>	https://developer.android.com/reference/android/printservice/PrintJob.html
PrintService	A										<section class="prog__container"><pre><code>public abstract class PrintService</code></pre></section>	https://developer.android.com/reference/android/printservice/PrintService.html
AlarmClock	A										<section class="prog__container">The AlarmClock provider contains an Intent action and extras that can be used to start an Activity to set a new alarm or timer in an alarm clock application. Applications that wish to receive the ACTION_SET_ALARM and ACTION_SET_TIMER Intents should create an activity to handle the Intent that requires the permission com.android.alarm.permission.SET_ALARM. Applications that wish to create a new alarm or timer should use <pre><code>Context.startActivity()</code></pre> so that the user has the option of choosing which alarm clock application to use.<pre><code>public final class AlarmClock</code></pre></section>	https://developer.android.com/reference/android/provider/AlarmClock.html
BaseColumns	A										<section class="prog__container"><pre><code>public interface BaseColumns</code></pre></section>	https://developer.android.com/reference/android/provider/BaseColumns.html
BlockedNumberContract.BlockedNumbers	A										<section class="prog__container">Constants to interact with the blocked numbers list.<pre><code>public static class BlockedNumberContract.BlockedNumbers</code></pre></section>	https://developer.android.com/reference/android/provider/BlockedNumberContract.BlockedNumbers.html
BlockedNumberContract	A										<section class="prog__container"><pre><code>public class BlockedNumberContract</code></pre></section>	https://developer.android.com/reference/android/provider/BlockedNumberContract.html
Browser	A										<section class="prog__container"><pre><code>public class Browser</code></pre></section>	https://developer.android.com/reference/android/provider/Browser.html
CalendarContract.Attendees	A										<section class="prog__container">Fields and helpers for interacting with Attendees. Each row of this table represents a single attendee or guest of an event. Calling <pre><code>query(ContentResolver, long, String[])</code></pre> will return a list of attendees for the event with the given eventId. Both apps and sync adapters may write to this table. There are six writable fields and all of them except <pre><code>ATTENDEE_NAME</code></pre> must be included when inserting a new attendee. They are: <ul> <li><pre><code>EVENT_ID</code></pre></li> <li><pre><code>ATTENDEE_NAME</code></pre></li> <li><pre><code>ATTENDEE_EMAIL</code></pre></li> <li><pre><code>ATTENDEE_RELATIONSHIP</code></pre></li> <li><pre><code>ATTENDEE_TYPE</code></pre></li> <li><pre><code>ATTENDEE_STATUS</code></pre></li> <li><pre><code>ATTENDEE_IDENTITY</code></pre></li> <li><pre><code>ATTENDEE_ID_NAMESPACE</code></pre></li> </ul><pre><code>public static final class CalendarContract.Attendees</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.Attendees.html
CalendarContract.AttendeesColumns	A										<section class="prog__container">Columns from the Attendees table that other tables join into themselves.<pre><code>protected static interface CalendarContract.AttendeesColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.AttendeesColumns.html
CalendarContract.CalendarAlerts	A										<section class="prog__container">Fields and helpers for accessing calendar alerts information. These fields are for tracking which alerts have been fired. Scheduled alarms will generate an intent using <pre><code>ACTION_EVENT_REMINDER</code></pre>. Apps that receive this action may update the <pre><code>STATE</code></pre> for the reminder when they have finished handling it. Apps that have their notifications disabled should not modify the table to ensure that they do not conflict with another app that is generating a notification. In general, apps should not need to write to this table directly except to update the state of a reminder.<pre><code>public static final class CalendarContract.CalendarAlerts</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarAlerts.html
CalendarContract.CalendarAlertsColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.CalendarAlertsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarAlertsColumns.html
CalendarContract.CalendarCache	A										<section class="prog__container">CalendarCache stores some settings for calendar including the current time zone for the instances. These settings are stored using a key/value scheme. A <pre><code>KEY</code></pre> must be specified when updating these values.<pre><code>public static final class CalendarContract.CalendarCache</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarCache.html
CalendarContract.CalendarCacheColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.CalendarCacheColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarCacheColumns.html
CalendarContract.CalendarColumns	A										<section class="prog__container">Columns specific to the Calendars Uri that other Uris can query.<pre><code>protected static interface CalendarContract.CalendarColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarColumns.html
CalendarContract.CalendarEntity	A										<section class="prog__container">Class that represents a Calendar Entity. There is one entry per calendar. This is a helper class to make batch operations easier.<pre><code>public static final class CalendarContract.CalendarEntity</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarEntity.html
CalendarContract.Calendars	A										<section class="prog__container">Constants and helpers for the Calendars table, which contains details for individual calendars. <h3>Operations</h3> All operations can be done either as an app or as a sync adapter. To perform an operation as a sync adapter <pre><code>CALLER_IS_SYNCADAPTER</code></pre> should be set to true and <pre><code>ACCOUNT_NAME</code></pre> and <pre><code>ACCOUNT_TYPE</code></pre> must be set in the Uri parameters. See <pre><code>appendQueryParameter(java.lang.String, java.lang.String)</code></pre> for details on adding parameters. Sync adapters have write access to more columns but are restricted to a single account at a time. Calendars are designed to be primarily managed by a sync adapter and inserting new calendars should be done as a sync adapter. For the most part, apps should only update calendars (such as changing the color or display name). If a local calendar is required an app can do so by inserting as a sync adapter and using an <pre><code>ACCOUNT_TYPE</code></pre> of <pre><code>ACCOUNT_TYPE_LOCAL</code></pre> . <dl> <dt><b>Insert</b></dt> <dd>When inserting a new calendar the following fields must be included: <ul> <li><pre><code>ACCOUNT_NAME</code></pre></li> <li><pre><code>ACCOUNT_TYPE</code></pre></li> <li><pre><code>NAME</code></pre></li> <li><pre><code>CALENDAR_DISPLAY_NAME</code></pre></li> <li><pre><code>CALENDAR_COLOR</code></pre></li> <li><pre><code>CALENDAR_ACCESS_LEVEL</code></pre></li> <li><pre><code>OWNER_ACCOUNT</code></pre></li> </ul> The following fields are not required when inserting a Calendar but are generally a good idea to include: <ul> <li><pre><code>SYNC_EVENTS</code></pre> set to 1</li> <li><pre><code>CALENDAR_TIME_ZONE</code></pre></li> <li><pre><code>ALLOWED_REMINDERS</code></pre></li> <li><pre><code>ALLOWED_AVAILABILITY</code></pre></li> <li><pre><code>ALLOWED_ATTENDEE_TYPES</code></pre></li> </ul> <dt><b>Update</b></dt> <dd>To perform an update on a calendar the <pre><code>_ID</code></pre> of the calendar should be provided either as an appended id to the Uri ( <pre><code>withAppendedId(Uri, long)</code></pre>) or as the first selection item--the selection should start with "_id=?" and the first selectionArg should be the _id of the calendar. Calendars may also be updated using a selection without the id. In general, the <pre><code>ACCOUNT_NAME</code></pre> and <pre><code>ACCOUNT_TYPE</code></pre> should not be changed after a calendar is created as this can cause issues for sync adapters. <dt><b>Delete</b></dt> <dd>Calendars can be deleted either by the <pre><code>_ID</code></pre> as an appended id on the Uri or using any standard selection. Deleting a calendar should generally be handled by a sync adapter as it will remove the calendar from the database and all associated data (aka events).</dd> <dt><b>Query</b></dt> <dd>Querying the Calendars table will get you all information about a set of calendars. There will be one row returned for each calendar that matches the query selection, or at most a single row if the <pre><code>_ID</code></pre> is appended to the Uri.</dd> </dd></dd></dl> <h3>Calendar Columns</h3> The following Calendar columns are writable by both an app and a sync adapter. <ul> <li><pre><code>NAME</code></pre></li> <li><pre><code>CALENDAR_DISPLAY_NAME</code></pre></li> <li><pre><code>VISIBLE</code></pre></li> <li><pre><code>SYNC_EVENTS</code></pre></li> </ul> The following Calendars columns are writable only by a sync adapter <ul> <li><pre><code>ACCOUNT_NAME</code></pre></li> <li><pre><code>ACCOUNT_TYPE</code></pre></li> <li><pre><code>CALENDAR_COLOR</code></pre></li> <li><pre><code>_SYNC_ID</code></pre></li> <li><pre><code>DIRTY</code></pre></li> <li><pre><code>MUTATORS</code></pre></li> <li><pre><code>OWNER_ACCOUNT</code></pre></li> <li><pre><code>MAX_REMINDERS</code></pre></li> <li><pre><code>ALLOWED_REMINDERS</code></pre></li> <li><pre><code>ALLOWED_AVAILABILITY</code></pre></li> <li><pre><code>ALLOWED_ATTENDEE_TYPES</code></pre></li> <li><pre><code>CAN_MODIFY_TIME_ZONE</code></pre></li> <li><pre><code>CAN_ORGANIZER_RESPOND</code></pre></li> <li><pre><code>CAN_PARTIALLY_UPDATE</code></pre></li> <li><pre><code>CALENDAR_LOCATION</code></pre></li> <li><pre><code>CALENDAR_TIME_ZONE</code></pre></li> <li><pre><code>CALENDAR_ACCESS_LEVEL</code></pre></li> <li><pre><code>DELETED</code></pre></li> <li><pre><code>CAL_SYNC1</code></pre></li> <li><pre><code>CAL_SYNC2</code></pre></li> <li><pre><code>CAL_SYNC3</code></pre></li> <li><pre><code>CAL_SYNC4</code></pre></li> <li><pre><code>CAL_SYNC5</code></pre></li> <li><pre><code>CAL_SYNC6</code></pre></li> <li><pre><code>CAL_SYNC7</code></pre></li> <li><pre><code>CAL_SYNC8</code></pre></li> <li><pre><code>CAL_SYNC9</code></pre></li> <li><pre><code>CAL_SYNC10</code></pre></li> </ul><pre><code>public static final class CalendarContract.Calendars</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.Calendars.html
CalendarContract.CalendarSyncColumns	A										<section class="prog__container">Generic columns for use by sync adapters. The specific functions of these columns are private to the sync adapter. Other clients of the API should not attempt to either read or write this column. These columns are editable as part of the Calendars Uri, but can only be read if accessed through any other Uri.<pre><code>protected static interface CalendarContract.CalendarSyncColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarSyncColumns.html
CalendarContract.Colors	A										<section class="prog__container">Fields for accessing colors available for a given account. Colors are referenced by <pre><code>COLOR_KEY</code></pre> which must be unique for a given account name/type. These values can only be updated by the sync adapter. Only <pre><code>COLOR</code></pre> may be updated after the initial insert. In addition, a row can only be deleted once all references to that color have been removed from the <pre><code>CalendarContract.Calendars</code></pre> or <pre><code>CalendarContract.Events</code></pre> tables.<pre><code>public static final class CalendarContract.Colors</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.Colors.html
CalendarContract.ColorsColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.ColorsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.ColorsColumns.html
CalendarContract.EventDays	A										<section class="prog__container">Fields and helpers for querying for a list of days that contain events.<pre><code>public static final class CalendarContract.EventDays</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.EventDays.html
CalendarContract.EventDaysColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.EventDaysColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.EventDaysColumns.html
CalendarContract.Events	A										<section class="prog__container">Constants and helpers for the Events table, which contains details for individual events. <h3>Operations</h3> All operations can be done either as an app or as a sync adapter. To perform an operation as a sync adapter <pre><code>CALLER_IS_SYNCADAPTER</code></pre> should be set to true and <pre><code>ACCOUNT_NAME</code></pre> and <pre><code>ACCOUNT_TYPE</code></pre> must be set in the Uri parameters. See <pre><code>appendQueryParameter(java.lang.String, java.lang.String)</code></pre> for details on adding parameters. Sync adapters have write access to more columns but are restricted to a single account at a time. <dl> <dt><b>Insert</b></dt> <dd>When inserting a new event the following fields must be included: <ul> <li>dtstart</li> <li>dtend if the event is non-recurring</li> <li>duration if the event is recurring</li> <li>rrule or rdate if the event is recurring</li> <li>eventTimezone</li> <li>a calendar_id</li> </ul> There are also further requirements when inserting or updating an event. See the section on Writing to Events.</dd> <dt><b>Update</b></dt> <dd>To perform an update of an Event the <pre><code>_ID</code></pre> of the event should be provided either as an appended id to the Uri ( <pre><code>withAppendedId(Uri, long)</code></pre>) or as the first selection item--the selection should start with "_id=?" and the first selectionArg should be the _id of the event. Updates may also be done using a selection and no id. Updating an event must respect the same rules as inserting and is further restricted in the fields that can be written. See the section on Writing to Events.</dd> <dt><b>Delete</b></dt> <dd>Events can be deleted either by the <pre><code>_ID</code></pre> as an appended id on the Uri or using any standard selection. If an appended id is used a selection is not allowed. There are two versions of delete: as an app and as a sync adapter. An app delete will set the deleted column on an event and remove all instances of that event. A sync adapter delete will remove the event from the database and all associated data.</dd> <dt><b>Query</b></dt> <dd>Querying the Events table will get you all information about a set of events except their reminders, attendees, and extended properties. There will be one row returned for each event that matches the query selection, or at most a single row if the <pre><code>_ID</code></pre> is appended to the Uri. Recurring events will only return a single row regardless of the number of times that event repeats.</dd> </dl> <h3>Writing to Events</h3> There are further restrictions on all Updates and Inserts in the Events table: <ul> <li>If allDay is set to 1 eventTimezone must be <pre><code>TIMEZONE_UTC</code></pre> and the time must correspond to a midnight boundary.</li> <li>Exceptions are not allowed to recur. If rrule or rdate is not empty, original_id and original_sync_id must be empty.</li> <li>In general a calendar_id should not be modified after insertion. This is not explicitly forbidden but many sync adapters will not behave in an expected way if the calendar_id is modified.</li> </ul> The following Events columns are writable by both an app and a sync adapter. <ul> <li><pre><code>CALENDAR_ID</code></pre></li> <li><pre><code>ORGANIZER</code></pre></li> <li><pre><code>TITLE</code></pre></li> <li><pre><code>EVENT_LOCATION</code></pre></li> <li><pre><code>DESCRIPTION</code></pre></li> <li><pre><code>EVENT_COLOR</code></pre></li> <li><pre><code>DTSTART</code></pre></li> <li><pre><code>DTEND</code></pre></li> <li><pre><code>EVENT_TIMEZONE</code></pre></li> <li><pre><code>EVENT_END_TIMEZONE</code></pre></li> <li><pre><code>DURATION</code></pre></li> <li><pre><code>ALL_DAY</code></pre></li> <li><pre><code>RRULE</code></pre></li> <li><pre><code>RDATE</code></pre></li> <li><pre><code>EXRULE</code></pre></li> <li><pre><code>EXDATE</code></pre></li> <li><pre><code>ORIGINAL_ID</code></pre></li> <li><pre><code>ORIGINAL_SYNC_ID</code></pre></li> <li><pre><code>ORIGINAL_INSTANCE_TIME</code></pre></li> <li><pre><code>ORIGINAL_ALL_DAY</code></pre></li> <li><pre><code>ACCESS_LEVEL</code></pre></li> <li><pre><code>AVAILABILITY</code></pre></li> <li><pre><code>GUESTS_CAN_MODIFY</code></pre></li> <li><pre><code>GUESTS_CAN_INVITE_OTHERS</code></pre></li> <li><pre><code>GUESTS_CAN_SEE_GUESTS</code></pre></li> <li><pre><code>CUSTOM_APP_PACKAGE</code></pre></li> <li><pre><code>CUSTOM_APP_URI</code></pre></li> <li><pre><code>UID_2445</code></pre></li> </ul> The following Events columns are writable only by a sync adapter <ul> <li><pre><code>DIRTY</code></pre></li> <li><pre><code>MUTATORS</code></pre></li> <li><pre><code>_SYNC_ID</code></pre></li> <li><pre><code>SYNC_DATA1</code></pre></li> <li><pre><code>SYNC_DATA2</code></pre></li> <li><pre><code>SYNC_DATA3</code></pre></li> <li><pre><code>SYNC_DATA4</code></pre></li> <li><pre><code>SYNC_DATA5</code></pre></li> <li><pre><code>SYNC_DATA6</code></pre></li> <li><pre><code>SYNC_DATA7</code></pre></li> <li><pre><code>SYNC_DATA8</code></pre></li> <li><pre><code>SYNC_DATA9</code></pre></li> <li><pre><code>SYNC_DATA10</code></pre></li> </ul> The remaining columns are either updated by the provider only or are views into other tables and cannot be changed through the Events table.<pre><code>public static final class CalendarContract.Events</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.Events.html
CalendarContract.EventsColumns	A										<section class="prog__container">Columns from the Events table that other tables join into themselves.<pre><code>protected static interface CalendarContract.EventsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.EventsColumns.html
CalendarContract.EventsEntity	A										<section class="prog__container">Class that represents an Event Entity. There is one entry per event. Recurring events show up as a single entry. This is a helper class to make batch operations easier. A <pre><code>ContentResolver</code></pre> or <pre><code>ContentProviderClient</code></pre> is required as the helper does additional queries to add reminders and attendees to each entry.<pre><code>public static final class CalendarContract.EventsEntity</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.EventsEntity.html
CalendarContract.ExtendedProperties	A										<section class="prog__container">Fields for accessing the Extended Properties. This is a generic set of name/value pairs for use by sync adapters to add extra information to events. There are three writable columns and all three must be present when inserting a new value. They are: <ul> <li><pre><code>EVENT_ID</code></pre></li> <li><pre><code>NAME</code></pre></li> <li><pre><code>VALUE</code></pre></li> </ul><pre><code>public static final class CalendarContract.ExtendedProperties</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.ExtendedProperties.html
CalendarContract.ExtendedPropertiesColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.ExtendedPropertiesColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.ExtendedPropertiesColumns.html
CalendarContract	A										<section class="prog__container"><pre><code>public final class CalendarContract</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.html
CalendarContract.Instances	A										<section class="prog__container">Fields and helpers for interacting with Instances. An instance is a single occurrence of an event including time zone specific start and end days and minutes. The instances table is not writable and only provides a way to query event occurrences.<pre><code>public static final class CalendarContract.Instances</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.Instances.html
CalendarContract.Reminders	A										<section class="prog__container">Fields and helpers for accessing reminders for an event. Each row of this table represents a single reminder for an event. Calling <pre><code>query(ContentResolver, long, String[])</code></pre> will return a list of reminders for the event with the given eventId. Both apps and sync adapters may write to this table. There are three writable fields and all of them must be included when inserting a new reminder. They are: <ul> <li><pre><code>EVENT_ID</code></pre></li> <li><pre><code>MINUTES</code></pre></li> <li><pre><code>METHOD</code></pre></li> </ul><pre><code>public static final class CalendarContract.Reminders</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.Reminders.html
CalendarContract.RemindersColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.RemindersColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.RemindersColumns.html
CalendarContract.SyncColumns	A										<section class="prog__container">Columns for Sync information used by Calendars and Events tables. These have specific uses which are expected to be consistent by the app and sync adapter.<pre><code>protected static interface CalendarContract.SyncColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.SyncColumns.html
CalendarContract.SyncState	A										<section class="prog__container">A table provided for sync adapters to use for storing private sync state data.<pre><code>public static final class CalendarContract.SyncState</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.SyncState.html
CallLog.Calls	A										<section class="prog__container">Contains the recent calls.<pre><code>public static class CallLog.Calls</code></pre></section>	https://developer.android.com/reference/android/provider/CallLog.Calls.html
CallLog	A										<section class="prog__container">The CallLog provider contains information about placed and received calls.<pre><code>public class CallLog</code></pre></section>	https://developer.android.com/reference/android/provider/CallLog.html
Contacts.ContactMethods	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.ContactMethods</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html
Contacts.ContactMethodsColumns	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static interface Contacts.ContactMethodsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html
Contacts.Extensions	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.Extensions</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.Extensions.html
Contacts.ExtensionsColumns	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static interface Contacts.ExtensionsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.ExtensionsColumns.html
Contacts.GroupMembership	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.GroupMembership</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html
Contacts.Groups	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.Groups</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.Groups.html
Contacts.GroupsColumns	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static interface Contacts.GroupsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.GroupsColumns.html
Contacts	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> The APIs have been superseded by <pre><code>ContactsContract</code></pre>. The newer APIs allow access multiple accounts and support aggregation of similar contacts. These APIs continue to work but will only return data for the first Google account created, which matches the original behavior.<pre><code>public class Contacts</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.html
Contacts.Intents	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.Intents</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.Intents.html
Contacts.Intents.Insert	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.Intents.Insert</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html
Contacts.Intents.UI	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> Do not use. This is not supported.<pre><code>public static final class Contacts.Intents.UI</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html
Contacts.OrganizationColumns	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static interface Contacts.OrganizationColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html
Contacts.Organizations	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.Organizations</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.Organizations.html
Contacts.People.ContactMethods	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.People.ContactMethods</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.People.ContactMethods.html
Contacts.People.Extensions	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static class Contacts.People.Extensions</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.People.Extensions.html
Contacts.People	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.People</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.People.html
Contacts.People.Phones	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.People.Phones</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.People.Phones.html
Contacts.PeopleColumns	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static interface Contacts.PeopleColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html
Contacts.Phones	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.Phones</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.Phones.html
Contacts.PhonesColumns	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static interface Contacts.PhonesColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html
Contacts.Photos	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.Photos</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.Photos.html
Contacts.PhotosColumns	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static interface Contacts.PhotosColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.PhotosColumns.html
Contacts.PresenceColumns	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static interface Contacts.PresenceColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html
Contacts.Settings	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static final class Contacts.Settings</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.Settings.html
Contacts.SettingsColumns	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <pre><code>ContactsContract</code></pre><pre><code>public static interface Contacts.SettingsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Contacts.SettingsColumns.html
ContactsContract.AggregationExceptions	A										<section class="prog__container"><pre><code>public static final class ContactsContract.AggregationExceptions</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.AggregationExceptions.html
ContactsContract.BaseSyncColumns	A										<section class="prog__container">Generic columns for use by sync adapters. The specific functions of these columns are private to the sync adapter. Other clients of the API should not attempt to either read or write this column.<pre><code>protected static interface ContactsContract.BaseSyncColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.BaseSyncColumns.html
ContactsContract.CommonDataKinds.BaseTypes	A										<section class="prog__container">The base types that all "Typed" data kinds support.<pre><code>public static interface ContactsContract.CommonDataKinds.BaseTypes</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.BaseTypes.html
ContactsContract.CommonDataKinds.Callable	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Callable</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Callable.html
ContactsContract.CommonDataKinds.CommonColumns	A										<section class="prog__container">Columns common across the specific types.<pre><code>protected static interface ContactsContract.CommonDataKinds.CommonColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.CommonColumns.html
ContactsContract.CommonDataKinds.Contactables	A										<section class="prog__container">A special class of data items, used to refer to types of data that can be used to attempt to start communicating with a person (<pre><code>ContactsContract.CommonDataKinds.Phone</code></pre> and <pre><code>ContactsContract.CommonDataKinds.Email</code></pre>). Note that this is NOT a separate data kind. This URI allows the ContactsProvider to return a unified result for data items that users can use to initiate communications with another contact. <pre><code>ContactsContract.CommonDataKinds.Phone</code></pre> and <pre><code>ContactsContract.CommonDataKinds.Email</code></pre> are the current data types in this category.<pre><code>public static final class ContactsContract.CommonDataKinds.Contactables</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Contactables.html
ContactsContract.CommonDataKinds.Email	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Email</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Email.html
ContactsContract.CommonDataKinds.Event	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Event</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Event.html
ContactsContract.CommonDataKinds.GroupMembership	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.GroupMembership</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.GroupMembership.html
ContactsContract.CommonDataKinds	A										<section class="prog__container">Container for definitions of common data types stored in the <pre><code>ContactsContract.Data</code></pre> table.<pre><code>public static final class ContactsContract.CommonDataKinds</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.html
ContactsContract.CommonDataKinds.Identity	A										<section class="prog__container">A data kind representing an Identity related to the contact.<pre><code>public static final class ContactsContract.CommonDataKinds.Identity</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Identity.html
ContactsContract.CommonDataKinds.Im	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Im</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Im.html
ContactsContract.CommonDataKinds.Nickname	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Nickname</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Nickname.html
ContactsContract.CommonDataKinds.Note	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Note</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Note.html
ContactsContract.CommonDataKinds.Organization	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Organization</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Organization.html
ContactsContract.CommonDataKinds.Phone	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Phone</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Phone.html
ContactsContract.CommonDataKinds.Photo	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Photo</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Photo.html
ContactsContract.CommonDataKinds.Relation	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Relation</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Relation.html
ContactsContract.CommonDataKinds.SipAddress	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.SipAddress</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.SipAddress.html
ContactsContract.CommonDataKinds.StructuredName	A										<section class="prog__container">A data kind representing the contact's proper name. You can use all columns defined for <pre><code>ContactsContract.Data</code></pre> as well as the following aliases. <h2>Column aliases</h2> <table class="jd-sumtable"> <tr> <th>Type</th><th>Alias</th><th colspan="2">Data column</th> </tr> <tr> <td>String</td> <td><pre><code>DISPLAY_NAME</code></pre></td> <td><pre><code>DATA1</code></pre></td> <td></td> </tr> <tr> <td>String</td> <td><pre><code>GIVEN_NAME</code></pre></td> <td><pre><code>DATA2</code></pre></td> <td></td> </tr> <tr> <td>String</td> <td><pre><code>FAMILY_NAME</code></pre></td> <td><pre><code>DATA3</code></pre></td> <td></td> </tr> <tr> <td>String</td> <td><pre><code>PREFIX</code></pre></td> <td><pre><code>DATA4</code></pre></td> <td>Common prefixes in English names are "Mr", "Ms", "Dr" etc.</td> </tr> <tr> <td>String</td> <td><pre><code>MIDDLE_NAME</code></pre></td> <td><pre><code>DATA5</code></pre></td> <td></td> </tr> <tr> <td>String</td> <td><pre><code>SUFFIX</code></pre></td> <td><pre><code>DATA6</code></pre></td> <td>Common suffixes in English names are "Sr", "Jr", "III" etc.</td> </tr> <tr> <td>String</td> <td><pre><code>PHONETIC_GIVEN_NAME</code></pre></td> <td><pre><code>DATA7</code></pre></td> <td>Used for phonetic spelling of the name, e.g. Pinyin, Katakana, Hiragana</td> </tr> <tr> <td>String</td> <td><pre><code>PHONETIC_MIDDLE_NAME</code></pre></td> <td><pre><code>DATA8</code></pre></td> <td></td> </tr> <tr> <td>String</td> <td><pre><code>PHONETIC_FAMILY_NAME</code></pre></td> <td><pre><code>DATA9</code></pre></td> <td></td> </tr> </table><pre><code>public static final class ContactsContract.CommonDataKinds.StructuredName</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.StructuredName.html
ContactsContract.CommonDataKinds.StructuredPostal	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.StructuredPostal</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.StructuredPostal.html
ContactsContract.CommonDataKinds.Website	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Website</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Website.html
ContactsContract.ContactNameColumns	A										<section class="prog__container">Contact name and contact name metadata columns in the RawContacts table.<pre><code>protected static interface ContactsContract.ContactNameColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.ContactNameColumns.html
ContactsContract.ContactOptionsColumns	A										<section class="prog__container">Columns of <pre><code>ContactsContract.Contacts</code></pre> that track the user's preferences for, or interactions with, the contact.<pre><code>protected static interface ContactsContract.ContactOptionsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.ContactOptionsColumns.html
ContactsContract.Contacts.AggregationSuggestions.Builder	A										<section class="prog__container">A convenience builder for aggregation suggestion content URIs.<pre><code>public static final class ContactsContract.Contacts.AggregationSuggestions.Builder</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.AggregationSuggestions.Builder.html
ContactsContract.Contacts.AggregationSuggestions	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Contacts.AggregationSuggestions</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.AggregationSuggestions.html
ContactsContract.Contacts.Data	A										<section class="prog__container">A sub-directory of a single contact that contains all of the constituent raw contact <pre><code>ContactsContract.Data</code></pre> rows. This directory can be used either with a <pre><code>CONTENT_URI</code></pre> or <pre><code>CONTENT_LOOKUP_URI</code></pre>.<pre><code>public static final class ContactsContract.Contacts.Data</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.Data.html
ContactsContract.Contacts.Entity	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Contacts.Entity</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.Entity.html
ContactsContract.Contacts	A										<section class="prog__container">Constants for the contacts table, which contains a record per aggregate of raw contacts representing the same person. <h3>Operations</h3> <dl> <dt><b>Insert</b></dt> <dd>A Contact cannot be created explicitly. When a raw contact is inserted, the provider will first try to find a Contact representing the same person. If one is found, the raw contact's <pre><code>CONTACT_ID</code></pre> column gets the _ID of the aggregate Contact. If no match is found, the provider automatically inserts a new Contact and puts its _ID into the <pre><code>CONTACT_ID</code></pre> column of the newly inserted raw contact.</dd> <dt><b>Update</b></dt> <dd>Only certain columns of Contact are modifiable: <pre><code>TIMES_CONTACTED</code></pre>, <pre><code>LAST_TIME_CONTACTED</code></pre>, <pre><code>STARRED</code></pre>, <pre><code>CUSTOM_RINGTONE</code></pre>, <pre><code>SEND_TO_VOICEMAIL</code></pre>. Changing any of these columns on the Contact also changes them on all constituent raw contacts.</dd> <dt><b>Delete</b></dt> <dd>Be careful with deleting Contacts! Deleting an aggregate contact deletes all constituent raw contacts. The corresponding sync adapters will notice the deletions of their respective raw contacts and remove them from their back end storage.</dd> <dt><b>Query</b></dt> <dd> <ul> <li>If you need to read an individual contact, consider using <pre><code>CONTENT_LOOKUP_URI</code></pre> instead of <pre><code>CONTENT_URI</code></pre>.</li> <li>If you need to look up a contact by the phone number, use <pre><code>PhoneLookup.CONTENT_FILTER_URI</code></pre>, which is optimized for this purpose.</li> <li>If you need to look up a contact by partial name, e.g. to produce filter-as-you-type suggestions, use the <pre><code>CONTENT_FILTER_URI</code></pre> URI. <li>If you need to look up a contact by some data element like email address, nickname, etc, use a query against the <pre><code>ContactsContract.Data</code></pre> table. The result will contain contact ID, name etc. </li></li></ul> </dd> </dl> <h2>Columns</h2> <table class="jd-sumtable"> <tr> <th colspan="4">Contacts</th> </tr> <tr> <td>long</td> <td><pre><code>_ID</code></pre></td> <td>read-only</td> <td>Row ID. Consider using <pre><code>LOOKUP_KEY</code></pre> instead.</td> </tr> <tr> <td>String</td> <td><pre><code>LOOKUP_KEY</code></pre></td> <td>read-only</td> <td>An opaque value that contains hints on how to find the contact if its row id changed as a result of a sync or aggregation.</td> </tr> <tr> <td>long</td> <td>NAME_RAW_CONTACT_ID</td> <td>read-only</td> <td>The ID of the raw contact that contributes the display name to the aggregate contact. During aggregation one of the constituent raw contacts is chosen using a heuristic: a longer name or a name with more diacritic marks or more upper case characters is chosen.</td> </tr> <tr> <td>String</td> <td>DISPLAY_NAME_PRIMARY</td> <td>read-only</td> <td>The display name for the contact. It is the display name contributed by the raw contact referred to by the NAME_RAW_CONTACT_ID column.</td> </tr> <tr> <td>long</td> <td><pre><code>PHOTO_ID</code></pre></td> <td>read-only</td> <td>Reference to the row in the <pre><code>ContactsContract.Data</code></pre> table holding the photo. That row has the mime type <pre><code>CONTENT_ITEM_TYPE</code></pre>. The value of this field is computed automatically based on the <pre><code>IS_SUPER_PRIMARY</code></pre> field of the data rows of that mime type.</td> </tr> <tr> <td>long</td> <td><pre><code>PHOTO_URI</code></pre></td> <td>read-only</td> <td>A URI that can be used to retrieve the contact's full-size photo. This column is the preferred method of retrieving the contact photo.</td> </tr> <tr> <td>long</td> <td><pre><code>PHOTO_THUMBNAIL_URI</code></pre></td> <td>read-only</td> <td>A URI that can be used to retrieve the thumbnail of contact's photo. This column is the preferred method of retrieving the contact photo.</td> </tr> <tr> <td>int</td> <td><pre><code>IN_VISIBLE_GROUP</code></pre></td> <td>read-only</td> <td>An indicator of whether this contact is supposed to be visible in the UI. "1" if the contact has at least one raw contact that belongs to a visible group; "0" otherwise.</td> </tr> <tr> <td>int</td> <td><pre><code>HAS_PHONE_NUMBER</code></pre></td> <td>read-only</td> <td>An indicator of whether this contact has at least one phone number. "1" if there is at least one phone number, "0" otherwise.</td> </tr> <tr> <td>int</td> <td><pre><code>TIMES_CONTACTED</code></pre></td> <td>read/write</td> <td>The number of times the contact has been contacted. See <pre><code>markAsContacted(ContentResolver, long)</code></pre>. When raw contacts are aggregated, this field is computed automatically as the maximum number of times contacted among all constituent raw contacts. Setting this field automatically changes the corresponding field on all constituent raw contacts.</td> </tr> <tr> <td>long</td> <td><pre><code>LAST_TIME_CONTACTED</code></pre></td> <td>read/write</td> <td>The timestamp of the last time the contact was contacted. See <pre><code>markAsContacted(ContentResolver, long)</code></pre>. Setting this field also automatically increments <pre><code>TIMES_CONTACTED</code></pre>. When raw contacts are aggregated, this field is computed automatically as the latest time contacted of all constituent raw contacts. Setting this field automatically changes the corresponding field on all constituent raw contacts.</td> </tr> <tr> <td>int</td> <td><pre><code>STARRED</code></pre></td> <td>read/write</td> <td>An indicator for favorite contacts: '1' if favorite, '0' otherwise. When raw contacts are aggregated, this field is automatically computed: if any constituent raw contacts are starred, then this field is set to '1'. Setting this field automatically changes the corresponding field on all constituent raw contacts.</td> </tr> <tr> <td>String</td> <td><pre><code>CUSTOM_RINGTONE</code></pre></td> <td>read/write</td> <td>A custom ringtone associated with a contact. Typically this is the URI returned by an activity launched with the <pre><code>ACTION_RINGTONE_PICKER</code></pre> intent.</td> </tr> <tr> <td>int</td> <td><pre><code>SEND_TO_VOICEMAIL</code></pre></td> <td>read/write</td> <td>An indicator of whether calls from this contact should be forwarded directly to voice mail ('1') or not ('0'). When raw contacts are aggregated, this field is automatically computed: if <i>all</i> constituent raw contacts have SEND_TO_VOICEMAIL=1, then this field is set to '1'. Setting this field automatically changes the corresponding field on all constituent raw contacts.</td> </tr> <tr> <td>int</td> <td><pre><code>CONTACT_PRESENCE</code></pre></td> <td>read-only</td> <td>Contact IM presence status. See <pre><code>ContactsContract.StatusUpdates</code></pre> for individual status definitions. Automatically computed as the highest presence of all constituent raw contacts. The provider may choose not to store this value in persistent storage. The expectation is that presence status will be updated on a regular basis.</td> </tr> <tr> <td>String</td> <td><pre><code>CONTACT_STATUS</code></pre></td> <td>read-only</td> <td>Contact's latest status update. Automatically computed as the latest of all constituent raw contacts' status updates.</td> </tr> <tr> <td>long</td> <td><pre><code>CONTACT_STATUS_TIMESTAMP</code></pre></td> <td>read-only</td> <td>The absolute time in milliseconds when the latest status was inserted/updated.</td> </tr> <tr> <td>String</td> <td><pre><code>CONTACT_STATUS_RES_PACKAGE</code></pre></td> <td>read-only</td> <td> The package containing resources for this status: label and icon.</td> </tr> <tr> <td>long</td> <td><pre><code>CONTACT_STATUS_LABEL</code></pre></td> <td>read-only</td> <td>The resource ID of the label describing the source of contact status, e.g. "Google Talk". This resource is scoped by the <pre><code>CONTACT_STATUS_RES_PACKAGE</code></pre>.</td> </tr> <tr> <td>long</td> <td><pre><code>CONTACT_STATUS_ICON</code></pre></td> <td>read-only</td> <td>The resource ID of the icon for the source of contact status. This resource is scoped by the <pre><code>CONTACT_STATUS_RES_PACKAGE</code></pre>.</td> </tr> </table><pre><code>public static class ContactsContract.Contacts</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html
ContactsContract.Contacts.Photo	A										<section class="prog__container">A <i>read-only</i> sub-directory of a single contact that contains the contact's primary photo. The photo may be stored in up to two ways - the default "photo" is a thumbnail-sized image stored directly in the data row, while the "display photo", if present, is a larger version stored as a file.<pre><code>public static final class ContactsContract.Contacts.Photo</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.Photo.html
ContactsContract.ContactsColumns	A										<section class="prog__container">Columns of <pre><code>ContactsContract.Contacts</code></pre> that refer to intrinsic properties of the contact, as opposed to the user-specified options found in <pre><code>ContactsContract.ContactOptionsColumns</code></pre>.<pre><code>protected static interface ContactsContract.ContactsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.ContactsColumns.html
ContactsContract.ContactStatusColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.ContactStatusColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.ContactStatusColumns.html
ContactsContract.Data	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Data</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Data.html
ContactsContract.DataColumns	A										<section class="prog__container">Columns in the Data table.<pre><code>protected static interface ContactsContract.DataColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.DataColumns.html
ContactsContract.DataColumnsWithJoins	A										<section class="prog__container">Combines all columns returned by <pre><code>ContactsContract.Data</code></pre> table queries.<pre><code>protected static interface ContactsContract.DataColumnsWithJoins</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.DataColumnsWithJoins.html
ContactsContract.DataUsageFeedback	A										<section class="prog__container"><pre><code>public static final class ContactsContract.DataUsageFeedback</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.DataUsageFeedback.html
ContactsContract.DataUsageStatColumns	A										<section class="prog__container">Columns in the Data_Usage_Stat table<pre><code>protected static interface ContactsContract.DataUsageStatColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.DataUsageStatColumns.html
ContactsContract.DeletedContacts	A										<section class="prog__container">Constants for the deleted contact table. This table holds a log of deleted contacts.<pre><code>public static final class ContactsContract.DeletedContacts</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.DeletedContacts.html
ContactsContract.DeletedContactsColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.DeletedContactsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.DeletedContactsColumns.html
ContactsContract.Directory	A										<section class="prog__container">A Directory represents a contacts corpus, e.g. Local contacts, Google Apps Global Address List or Corporate Global Address List.<pre><code>public static final class ContactsContract.Directory</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Directory.html
ContactsContract.DisplayNameSources	A										<section class="prog__container">Types of data used to produce the display name for a contact. In the order of increasing priority: <pre><code>EMAIL</code></pre>, <pre><code>PHONE</code></pre>, <pre><code>ORGANIZATION</code></pre>, <pre><code>NICKNAME</code></pre>, <pre><code>STRUCTURED_PHONETIC_NAME</code></pre>, <pre><code>STRUCTURED_NAME</code></pre>.<pre><code>public static interface ContactsContract.DisplayNameSources</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.DisplayNameSources.html
ContactsContract.DisplayPhoto	A										<section class="prog__container">Helper class for accessing full-size photos by photo file ID.<pre><code>public static final class ContactsContract.DisplayPhoto</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.DisplayPhoto.html
ContactsContract.FullNameStyle	A										<section class="prog__container">Constants for various styles of combining given name, family name etc into a full name. For example, the western tradition follows the pattern 'given name' 'middle name' 'family name' with the alternative pattern being 'family name', 'given name' 'middle name'. The CJK tradition is 'family name' 'middle name' 'given name', with Japanese favoring a space between the names and Chinese omitting the space.<pre><code>public static interface ContactsContract.FullNameStyle</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.FullNameStyle.html
ContactsContract.Groups	A										<section class="prog__container">Constants for the groups table. Only per-account groups are supported. <h2>Columns</h2> <table class="jd-sumtable"> <tr> <th colspan="4">Groups</th> </tr> <tr> <td>long</td> <td><pre><code>_ID</code></pre></td> <td>read-only</td> <td>Row ID. Sync adapter should try to preserve row IDs during updates. In other words, it would be a really bad idea to delete and reinsert a group. A sync adapter should always do an update instead.</td> </tr> # <tr> <td>String</td> <td><pre><code>DATA_SET</code></pre></td> <td>read/write-once</td> <td><pre><code>public static final class ContactsContract.Groups</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Groups.html
ContactsContract.GroupsColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.GroupsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.GroupsColumns.html
ContactsContract	A										<section class="prog__container"><pre><code>public final class ContactsContract</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.html
ContactsContract.Intents	A										<section class="prog__container">Contains helper classes used to create or manage <pre><code>Intents</code></pre> that involve contacts.<pre><code>public static final class ContactsContract.Intents</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Intents.html
ContactsContract.Intents.Insert	A										<section class="prog__container">Convenience class that contains string constants used to create contact <pre><code>Intents</code></pre>.<pre><code>public static final class ContactsContract.Intents.Insert</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Intents.Insert.html
ContactsContract.PhoneLookup	A										<section class="prog__container">A table that represents the result of looking up a phone number, for example for caller ID. To perform a lookup you must append the number you want to find to <pre><code>CONTENT_FILTER_URI</code></pre>. This query is highly optimized. <pre> Uri uri = Uri.withAppendedPath(PhoneLookup.CONTENT_FILTER_URI, Uri.encode(phoneNumber)); resolver.query(uri, new String[]{PhoneLookup.DISPLAY_NAME,... </pre> <h3>Columns</h3> <table class="jd-sumtable"> <tr> <th colspan="4">PhoneLookup</th> </tr> <tr> <td>String</td> <td><pre><code>NUMBER</code></pre></td> <td>read-only</td> <td>Phone number.</td> </tr> <tr> <td>String</td> <td><pre><code>TYPE</code></pre></td> <td>read-only</td> <td>Phone number type. See <pre><code>ContactsContract.CommonDataKinds.Phone</code></pre>.</td> </tr> <tr> <td>String</td> <td><pre><code>LABEL</code></pre></td> <td>read-only</td> <td>Custom label for the phone number. See <pre><code>ContactsContract.CommonDataKinds.Phone</code></pre>.</td> </tr> </table><pre><code>public static final class ContactsContract.PhoneLookup</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.PhoneLookup.html
ContactsContract.PhoneLookupColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.PhoneLookupColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.PhoneLookupColumns.html
ContactsContract.PhoneticNameStyle	A										<section class="prog__container">Constants for various styles of capturing the pronunciation of a person's name.<pre><code>public static interface ContactsContract.PhoneticNameStyle</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.PhoneticNameStyle.html
ContactsContract.PinnedPositions	A										<section class="prog__container"><pre><code>public static final class ContactsContract.PinnedPositions</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.PinnedPositions.html
ContactsContract.Presence	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> This old name was never meant to be made public. Do not use.<pre><code>public static final class ContactsContract.Presence</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Presence.html
ContactsContract.PresenceColumns	A										<section class="prog__container">Additional data mixed in with <pre><code>ContactsContract.StatusColumns</code></pre> to link back to specific <pre><code>_ID</code></pre> entries.<pre><code>protected static interface ContactsContract.PresenceColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.PresenceColumns.html
ContactsContract.Profile	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Profile</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Profile.html
ContactsContract.ProfileSyncState	A										<section class="prog__container">A table provided for sync adapters to use for storing private sync state data for the user's personal profile.<pre><code>public static final class ContactsContract.ProfileSyncState</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.ProfileSyncState.html
ContactsContract.ProviderStatus	A										<section class="prog__container">API for inquiring about the general status of the provider.<pre><code>public static final class ContactsContract.ProviderStatus</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.ProviderStatus.html
ContactsContract.QuickContact	A										<section class="prog__container">Helper methods to display QuickContact dialogs that display all the information belonging to a specific <pre><code>Contacts</code></pre> entry.<pre><code>public static final class ContactsContract.QuickContact</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.QuickContact.html
ContactsContract.RawContacts.Data	A										<section class="prog__container">A sub-directory of a single raw contact that contains all of its <pre><code>ContactsContract.Data</code></pre> rows. To access this directory append <pre><code>CONTENT_DIRECTORY</code></pre> to the raw contact URI.<pre><code>public static final class ContactsContract.RawContacts.Data</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContacts.Data.html
ContactsContract.RawContacts.DisplayPhoto	A										<section class="prog__container"><pre><code>public static final class ContactsContract.RawContacts.DisplayPhoto</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContacts.DisplayPhoto.html
ContactsContract.RawContacts.Entity	A										<section class="prog__container"><pre><code>public static final class ContactsContract.RawContacts.Entity</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContacts.Entity.html
ContactsContract.RawContacts	A										<section class="prog__container">Constants for the raw contacts table, which contains one row of contact information for each person in each synced account. Sync adapters and contact management apps are the primary consumers of this API. <h3>Aggregation</h3><pre><code>public static final class ContactsContract.RawContacts</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContacts.html
ContactsContract.RawContactsColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.RawContactsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContactsColumns.html
ContactsContract.RawContactsEntity	A										<section class="prog__container"><pre><code>public static final class ContactsContract.RawContactsEntity</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContactsEntity.html
ContactsContract.SearchSnippets	A										<section class="prog__container">Additional column returned by <pre><code>Contacts.CONTENT_FILTER_URI</code></pre> explaining why the filter matched the contact. This column will contain extracts from the contact's constituent <pre><code>Data</code></pre> items, formatted in a way that indicates the section of the snippet that matched the filter.<pre><code>public static class ContactsContract.SearchSnippets</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.SearchSnippets.html
ContactsContract.Settings	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Settings</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Settings.html
ContactsContract.SettingsColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.SettingsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.SettingsColumns.html
ContactsContract.StatusColumns	A										<section class="prog__container">Social status update columns.<pre><code>protected static interface ContactsContract.StatusColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.StatusColumns.html
ContactsContract.StatusUpdates	A										<section class="prog__container"><pre><code>public static class ContactsContract.StatusUpdates</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.StatusUpdates.html
ContactsContract.SyncColumns	A										<section class="prog__container">Columns that appear when each row of a table belongs to a specific account, including sync information that an account may need.<pre><code>protected static interface ContactsContract.SyncColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.SyncColumns.html
ContactsContract.SyncState	A										<section class="prog__container">A table provided for sync adapters to use for storing private sync state data for contacts.<pre><code>public static final class ContactsContract.SyncState</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.SyncState.html
DocumentsContract.Document	A										<section class="prog__container">Constants related to a document, including <pre><code>Cursor</code></pre> column names and flags.<pre><code>public static final class DocumentsContract.Document</code></pre></section>	https://developer.android.com/reference/android/provider/DocumentsContract.Document.html
DocumentsContract	A										<section class="prog__container">Defines the contract between a documents provider and the platform.<pre><code>public final class DocumentsContract</code></pre></section>	https://developer.android.com/reference/android/provider/DocumentsContract.html
DocumentsContract.Root	A										<section class="prog__container">Constants related to a root of documents, including <pre><code>Cursor</code></pre> column names and flags. A root is the start of a tree of documents, such as a physical storage device, or an account. Each root starts at the directory referenced by <pre><code>COLUMN_DOCUMENT_ID</code></pre>, which can recursively contain both documents and directories.<pre><code>public static final class DocumentsContract.Root</code></pre></section>	https://developer.android.com/reference/android/provider/DocumentsContract.Root.html
DocumentsProvider	A										<section class="prog__container">Base class for a document provider. A document provider offers read and write access to durable files, such as files stored on a local disk, or files in a cloud storage service. To create a document provider, extend this class, implement the abstract methods, and add it to your manifest like this: <pre class="prettyprint">&lt;manifest&gt; ... &lt;application&gt; ... &lt;provider android:name="com.example.MyCloudProvider" android:authorities="com.example.mycloudprovider" android:exported="true" android:grantUriPermissions="true" android:permission="android.permission.MANAGE_DOCUMENTS" android:enabled="@bool/isAtLeastKitKat"&gt; &lt;intent-filter&gt; &lt;action android:name="android.content.action.DOCUMENTS_PROVIDER" /&gt; &lt;/intent-filter&gt; &lt;/provider&gt; ... &lt;/application&gt; &lt;/manifest&gt;</pre><pre><code>public abstract class DocumentsProvider</code></pre></section>	https://developer.android.com/reference/android/provider/DocumentsProvider.html
LiveFolders	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 14.</strong><br/> Live folders are no longer supported by Android. These have been replaced by the new AppWidget Collection APIs introduced in <pre><code>HONEYCOMB</code></pre>. These provide all of the features of live folders plus many more. The use of live folders is greatly discouraged because of security issues they introduce -- publishing a live folder requires making all data show for the live folder available to all applications with no permissions protecting it.<pre><code>public final class LiveFolders</code></pre></section>	https://developer.android.com/reference/android/provider/LiveFolders.html
MediaStore.Audio.AlbumColumns	A										<section class="prog__container">Columns representing an album<pre><code>public static interface MediaStore.Audio.AlbumColumns</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.AlbumColumns.html
MediaStore.Audio.Albums	A										<section class="prog__container">Contains artists for audio files<pre><code>public static final class MediaStore.Audio.Albums</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Albums.html
MediaStore.Audio.ArtistColumns	A										<section class="prog__container">Columns representing an artist<pre><code>public static interface MediaStore.Audio.ArtistColumns</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.ArtistColumns.html
MediaStore.Audio.Artists.Albums	A										<section class="prog__container">Sub-directory of each artist containing all albums on which a song by the artist appears.<pre><code>public static final class MediaStore.Audio.Artists.Albums</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Artists.Albums.html
MediaStore.Audio.Artists	A										<section class="prog__container">Contains artists for audio files<pre><code>public static final class MediaStore.Audio.Artists</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Artists.html
MediaStore.Audio.AudioColumns	A										<section class="prog__container">Columns for audio file that show up in multiple tables.<pre><code>public static interface MediaStore.Audio.AudioColumns</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.AudioColumns.html
MediaStore.Audio.Genres	A										<section class="prog__container">Contains all genres for audio files<pre><code>public static final class MediaStore.Audio.Genres</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Genres.html
MediaStore.Audio.Genres.Members	A										<section class="prog__container">Sub-directory of each genre containing all members.<pre><code>public static final class MediaStore.Audio.Genres.Members</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Genres.Members.html
MediaStore.Audio.GenresColumns	A										<section class="prog__container">Columns representing an audio genre<pre><code>public static interface MediaStore.Audio.GenresColumns</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.GenresColumns.html
MediaStore.Audio	A										<section class="prog__container">Container for all audio content.<pre><code>public static final class MediaStore.Audio</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.html
MediaStore.Audio.Media	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio.Media</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Media.html
MediaStore.Audio.Playlists	A										<section class="prog__container">Contains playlists for audio files<pre><code>public static final class MediaStore.Audio.Playlists</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Playlists.html
MediaStore.Audio.Playlists.Members	A										<section class="prog__container">Sub-directory of each playlist containing all members.<pre><code>public static final class MediaStore.Audio.Playlists.Members</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Playlists.Members.html
MediaStore.Audio.PlaylistsColumns	A										<section class="prog__container">Columns representing a playlist<pre><code>public static interface MediaStore.Audio.PlaylistsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.PlaylistsColumns.html
MediaStore.Audio.Radio	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio.Radio</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Radio.html
MediaStore.Files.FileColumns	A										<section class="prog__container">Fields for master table for all media files. Table also contains MediaColumns._ID, DATA, SIZE and DATE_MODIFIED.<pre><code>public static interface MediaStore.Files.FileColumns</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Files.FileColumns.html
MediaStore.Files	A										<section class="prog__container">Media provider table containing an index of all files in the media storage, including non-media files. This should be used by applications that work with non-media file types (text, HTML, PDF, etc) as well as applications that need to work with multiple media file types in a single query.<pre><code>public static final class MediaStore.Files</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Files.html
MediaStore	A										<section class="prog__container">The Media provider contains meta data for all available media on both internal and external storage devices.<pre><code>public final class MediaStore</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.html
MediaStore.Images	A										<section class="prog__container">Contains meta data for all available images.<pre><code>public static final class MediaStore.Images</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Images.html
MediaStore.Images.ImageColumns	A										<section class="prog__container"><pre><code>public static interface MediaStore.Images.ImageColumns</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Images.ImageColumns.html
MediaStore.Images.Media	A										<section class="prog__container"><pre><code>public static final class MediaStore.Images.Media</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Images.Media.html
MediaStore.Images.Thumbnails	A										<section class="prog__container">This class allows developers to query and get two kinds of thumbnails: MINI_KIND: 512 x 384 thumbnail MICRO_KIND: 96 x 96 thumbnail<pre><code>public static class MediaStore.Images.Thumbnails</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html
MediaStore.MediaColumns	A										<section class="prog__container">Common fields for most MediaProvider tables<pre><code>public static interface MediaStore.MediaColumns</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.MediaColumns.html
MediaStore.Video	A										<section class="prog__container"><pre><code>public static final class MediaStore.Video</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Video.html
MediaStore.Video.Media	A										<section class="prog__container"><pre><code>public static final class MediaStore.Video.Media</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Video.Media.html
MediaStore.Video.Thumbnails	A										<section class="prog__container">This class allows developers to query and get two kinds of thumbnails: MINI_KIND: 512 x 384 thumbnail MICRO_KIND: 96 x 96 thumbnail<pre><code>public static class MediaStore.Video.Thumbnails</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Video.Thumbnails.html
MediaStore.Video.VideoColumns	A										<section class="prog__container"><pre><code>public static interface MediaStore.Video.VideoColumns</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Video.VideoColumns.html
OpenableColumns	A										<section class="prog__container">These are standard columns for openable URIs. Providers that serve openable URIs <em>must</em> support at least these columns when queried.<pre><code>public interface OpenableColumns</code></pre></section>	https://developer.android.com/reference/android/provider/OpenableColumns.html
android.provider	A										<section class="prog__container">Provides convenience classes to access the content providers supplied by Android.</section>	https://developer.android.com/reference/android/provider/package-summary.html
SearchRecentSuggestions	A										<section class="prog__container">This is a utility class providing access to <pre><code>SearchRecentSuggestionsProvider</code></pre>.<pre><code>public class SearchRecentSuggestions</code></pre></section>	https://developer.android.com/reference/android/provider/SearchRecentSuggestions.html
Settings.Global	A										<section class="prog__container">Global system settings, containing preferences that always apply identically to all defined users. Applications can read these but are not allowed to write; like the "Secure" settings, these are for preferences that the user must explicitly modify through the system UI or specialized APIs for those values.<pre><code>public static final class Settings.Global</code></pre></section>	https://developer.android.com/reference/android/provider/Settings.Global.html
Settings	A										<section class="prog__container">The Settings provider contains global system-level device preferences.<pre><code>public final class Settings</code></pre></section>	https://developer.android.com/reference/android/provider/Settings.html
Settings.NameValueTable	A										<section class="prog__container">Common base for tables of name/value settings.<pre><code>public static class Settings.NameValueTable</code></pre></section>	https://developer.android.com/reference/android/provider/Settings.NameValueTable.html
Settings.Secure	A										<section class="prog__container">Secure system settings, containing system preferences that applications can read but are not allowed to write. These are for preferences that the user must explicitly modify through the system UI or specialized APIs for those values, not modified directly by applications.<pre><code>public static final class Settings.Secure</code></pre></section>	https://developer.android.com/reference/android/provider/Settings.Secure.html
Settings.SettingNotFoundException	A										<section class="prog__container"><pre><code>public static class Settings.SettingNotFoundException</code></pre></section>	https://developer.android.com/reference/android/provider/Settings.SettingNotFoundException.html
Settings.System	A										<section class="prog__container">System settings, containing miscellaneous system preferences. This table holds simple name/value pairs. There are convenience functions for accessing individual settings entries.<pre><code>public static final class Settings.System</code></pre></section>	https://developer.android.com/reference/android/provider/Settings.System.html
SyncStateContract.Columns	A										<section class="prog__container"><pre><code>public static interface SyncStateContract.Columns</code></pre></section>	https://developer.android.com/reference/android/provider/SyncStateContract.Columns.html
SyncStateContract.Constants	A										<section class="prog__container"><pre><code>public static class SyncStateContract.Constants</code></pre></section>	https://developer.android.com/reference/android/provider/SyncStateContract.Constants.html
SyncStateContract.Helpers	A										<section class="prog__container"><pre><code>public static final class SyncStateContract.Helpers</code></pre></section>	https://developer.android.com/reference/android/provider/SyncStateContract.Helpers.html
SyncStateContract	A										<section class="prog__container">The ContentProvider contract for associating data with ana data array account. This may be used by providers that want to store this data in a standard way.<pre><code>public class SyncStateContract</code></pre></section>	https://developer.android.com/reference/android/provider/SyncStateContract.html
Telephony.BaseMmsColumns	A										<section class="prog__container">Base columns for tables that contain MMSs.<pre><code>public static interface Telephony.BaseMmsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html
Telephony.CanonicalAddressesColumns	A										<section class="prog__container">Columns for the "canonical_addresses" table used by MMS and SMS.<pre><code>public static interface Telephony.CanonicalAddressesColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.CanonicalAddressesColumns.html
Telephony.Carriers	A										<section class="prog__container">Carriers class contains information about APNs, including MMSC information.<pre><code>public static final class Telephony.Carriers</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Carriers.html
Telephony	A										<section class="prog__container">The Telephony provider contains data related to phone operation, specifically SMS and MMS messages and access to the APN list, including the MMSC to use. <p class="note"><strong>Note:</strong> These APIs are not available on all Android-powered devices. If your app depends on telephony features such as for managing SMS messages, include a <pre><code>&lt;uses-feature&gt;</code></pre> element in your manifest that declares the <pre><code>"android.hardware.telephony"</code></pre> hardware feature. Alternatively, you can check for telephony availability at runtime using either <pre><code>hasSystemFeature(PackageManager.FEATURE_TELEPHONY)</code></pre> or <pre><code>getPhoneType()</code></pre>.<pre><code>public final class Telephony</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.html
Telephony.Mms.Addr	A										<section class="prog__container">Contains address information for an MMS message.<pre><code>public static final class Telephony.Mms.Addr</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Addr.html
Telephony.Mms.Draft	A										<section class="prog__container">Contains all MMS messages in the MMS app drafts folder.<pre><code>public static final class Telephony.Mms.Draft</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Draft.html
Telephony.Mms	A										<section class="prog__container">Contains all MMS messages.<pre><code>public static final class Telephony.Mms</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Mms.html
Telephony.Mms.Inbox	A										<section class="prog__container">Contains all MMS messages in the MMS app inbox.<pre><code>public static final class Telephony.Mms.Inbox</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Inbox.html
Telephony.Mms.Intents	A										<section class="prog__container">Intents class.<pre><code>public static final class Telephony.Mms.Intents</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Intents.html
Telephony.Mms.Outbox	A										<section class="prog__container">Contains all MMS messages in the MMS app outbox.<pre><code>public static final class Telephony.Mms.Outbox</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Outbox.html
Telephony.Mms.Part	A										<section class="prog__container">Contains message parts.<pre><code>public static final class Telephony.Mms.Part</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html
Telephony.Mms.Rate	A										<section class="prog__container">Message send rate table.<pre><code>public static final class Telephony.Mms.Rate</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Rate.html
Telephony.Mms.Sent	A										<section class="prog__container">Contains all MMS messages in the MMS app sent folder.<pre><code>public static final class Telephony.Mms.Sent</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Sent.html
Telephony.MmsSms	A										<section class="prog__container">Contains all MMS and SMS messages.<pre><code>public static final class Telephony.MmsSms</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.MmsSms.html
Telephony.MmsSms.PendingMessages	A										<section class="prog__container">Contains pending messages info.<pre><code>public static final class Telephony.MmsSms.PendingMessages</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html
Telephony.Sms.Conversations	A										<section class="prog__container">Contains all sent text-based SMS messages in the SMS app.<pre><code>public static final class Telephony.Sms.Conversations</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Conversations.html
Telephony.Sms.Draft	A										<section class="prog__container">Contains all sent text-based SMS messages in the SMS app.<pre><code>public static final class Telephony.Sms.Draft</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Draft.html
Telephony.Sms	A										<section class="prog__container">Contains all text-based SMS messages.<pre><code>public static final class Telephony.Sms</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Sms.html
Telephony.Sms.Inbox	A										<section class="prog__container">Contains all text-based SMS messages in the SMS app inbox.<pre><code>public static final class Telephony.Sms.Inbox</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Inbox.html
Telephony.Sms.Intents	A										<section class="prog__container">Contains constants for SMS related Intents that are broadcast.<pre><code>public static final class Telephony.Sms.Intents</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html
Telephony.Sms.Outbox	A										<section class="prog__container">Contains all pending outgoing text-based SMS messages.<pre><code>public static final class Telephony.Sms.Outbox</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Outbox.html
Telephony.Sms.Sent	A										<section class="prog__container">Contains all sent text-based SMS messages in the SMS app.<pre><code>public static final class Telephony.Sms.Sent</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Sent.html
Telephony.TextBasedSmsColumns	A										<section class="prog__container">Base columns for tables that contain text-based SMSs.<pre><code>public static interface Telephony.TextBasedSmsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html
Telephony.Threads	A										<section class="prog__container">Helper functions for the "threads" table used by MMS and SMS.<pre><code>public static final class Telephony.Threads</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.Threads.html
Telephony.ThreadsColumns	A										<section class="prog__container">Columns for the "threads" table used by MMS and SMS.<pre><code>public static interface Telephony.ThreadsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html
UserDictionary	A										<section class="prog__container">A provider of user defined words for input methods to use for predictive text input. Applications and input methods may add words into the dictionary. Words can have associated frequency information and locale information.<pre><code>public class UserDictionary</code></pre></section>	https://developer.android.com/reference/android/provider/UserDictionary.html
UserDictionary.Words	A										<section class="prog__container">Contains the user defined words.<pre><code>public static class UserDictionary.Words</code></pre></section>	https://developer.android.com/reference/android/provider/UserDictionary.Words.html
VoicemailContract	A										<section class="prog__container">The contract between the voicemail provider and applications. Contains definitions for the supported URIs and columns.<pre><code>public class VoicemailContract</code></pre></section>	https://developer.android.com/reference/android/provider/VoicemailContract.html
VoicemailContract.Status	A										<section class="prog__container">Defines fields exposed through the /status path of this content provider.<pre><code>public static final class VoicemailContract.Status</code></pre></section>	https://developer.android.com/reference/android/provider/VoicemailContract.Status.html
VoicemailContract.Voicemails	A										<section class="prog__container">Defines fields exposed through the /voicemail path of this content provider.<pre><code>public static final class VoicemailContract.Voicemails</code></pre></section>	https://developer.android.com/reference/android/provider/VoicemailContract.Voicemails.html
Allocation	A										<section class="prog__container"><pre><code>public class Allocation</code></pre></section>	https://developer.android.com/reference/android/renderscript/Allocation.html
Allocation.MipmapControl	A										<section class="prog__container">Controls mipmap behavior when using the bitmap creation and update functions.<pre><code>public static final enum Allocation.MipmapControl</code></pre></section>	https://developer.android.com/reference/android/renderscript/Allocation.MipmapControl.html
Allocation.OnBufferAvailableListener	A										<section class="prog__container">Interface to handle notification when new buffers are available via <pre><code>USAGE_IO_INPUT</code></pre>. An application will receive one notification when a buffer is available. Additional buffers will not trigger new notifications until a buffer is processed.<pre><code>public static interface Allocation.OnBufferAvailableListener</code></pre></section>	https://developer.android.com/reference/android/renderscript/Allocation.OnBufferAvailableListener.html
AllocationAdapter	A										<section class="prog__container">Only intended for use by generated reflected code.<pre><code>public class AllocationAdapter</code></pre></section>	https://developer.android.com/reference/android/renderscript/AllocationAdapter.html
BaseObj	A										<section class="prog__container">BaseObj is the base class for all RenderScript objects owned by a RS context. It is responsible for lifetime management and resource tracking. This class should not be used by a user application.<pre><code>public class BaseObj</code></pre></section>	https://developer.android.com/reference/android/renderscript/BaseObj.html
Byte2	A										<section class="prog__container">Class for exposing the native RenderScript byte2 type back to the Android system.<pre><code>public class Byte2</code></pre></section>	https://developer.android.com/reference/android/renderscript/Byte2.html
Byte3	A										<section class="prog__container">Class for exposing the native RenderScript byte3 type back to the Android system.<pre><code>public class Byte3</code></pre></section>	https://developer.android.com/reference/android/renderscript/Byte3.html
Byte4	A										<section class="prog__container">Class for exposing the native RenderScript byte4 type back to the Android system.<pre><code>public class Byte4</code></pre></section>	https://developer.android.com/reference/android/renderscript/Byte4.html
Double2	A										<section class="prog__container">Vector version of the basic double type. Provides two double fields packed.<pre><code>public class Double2</code></pre></section>	https://developer.android.com/reference/android/renderscript/Double2.html
Double3	A										<section class="prog__container">Vector version of the basic double type. Provides three double fields packed.<pre><code>public class Double3</code></pre></section>	https://developer.android.com/reference/android/renderscript/Double3.html
Double4	A										<section class="prog__container">Vector version of the basic double type. Provides four double fields packed.<pre><code>public class Double4</code></pre></section>	https://developer.android.com/reference/android/renderscript/Double4.html
Element.Builder	A										<section class="prog__container">Builder class for producing complex elements with matching field and name pairs. The builder starts empty. The order in which elements are added is retained for the layout in memory.<pre><code>public static class Element.Builder</code></pre></section>	https://developer.android.com/reference/android/renderscript/Element.Builder.html
Element.DataKind	A										<section class="prog__container">The special interpretation of the data if required. This is primarly useful for graphical data. USER indicates no special interpretation is expected. PIXEL is used in conjunction with the standard data types for representing texture formats.<pre><code>public static final enum Element.DataKind</code></pre></section>	https://developer.android.com/reference/android/renderscript/Element.DataKind.html
Element.DataType	A										<section class="prog__container">DataType represents the basic type information for a basic element. The naming convention follows. For numeric types it is FLOAT, SIGNED, or UNSIGNED followed by the _BITS where BITS is the size of the data. BOOLEAN is a true / false (1,0) represented in an 8 bit container. The UNSIGNED variants with multiple bit definitions are for packed graphical data formats and represent vectors with per vector member sizes which are treated as a single unit for packing and alignment purposes. MATRIX the three matrix types contain FLOAT_32 elements and are treated as 32 bits for alignment purposes. RS_* objects: opaque handles with implementation dependent sizes.<pre><code>public static final enum Element.DataType</code></pre></section>	https://developer.android.com/reference/android/renderscript/Element.DataType.html
Element	A										<section class="prog__container"><pre><code>public class Element</code></pre></section>	https://developer.android.com/reference/android/renderscript/Element.html
FieldPacker	A										<section class="prog__container">Utility class for packing arguments and structures from Android system objects to RenderScript objects. This class is only intended to be used to support the reflected code generated by the RS tool chain. It should not be called directly.<pre><code>public class FieldPacker</code></pre></section>	https://developer.android.com/reference/android/renderscript/FieldPacker.html
Float2	A										<section class="prog__container">Vector version of the basic float type. Provides two float fields packed.<pre><code>public class Float2</code></pre></section>	https://developer.android.com/reference/android/renderscript/Float2.html
Float3	A										<section class="prog__container">Vector version of the basic float type. Provides three float fields packed.<pre><code>public class Float3</code></pre></section>	https://developer.android.com/reference/android/renderscript/Float3.html
Float4	A										<section class="prog__container">Vector version of the basic float type. Provides four float fields packed.<pre><code>public class Float4</code></pre></section>	https://developer.android.com/reference/android/renderscript/Float4.html
Int2	A										<section class="prog__container">Vector version of the basic int type. Provides two int fields packed.<pre><code>public class Int2</code></pre></section>	https://developer.android.com/reference/android/renderscript/Int2.html
Int3	A										<section class="prog__container">Vector version of the basic int type. Provides three int fields packed.<pre><code>public class Int3</code></pre></section>	https://developer.android.com/reference/android/renderscript/Int3.html
Int4	A										<section class="prog__container">Vector version of the basic int type. Provides four int fields packed.<pre><code>public class Int4</code></pre></section>	https://developer.android.com/reference/android/renderscript/Int4.html
Long2	A										<section class="prog__container">Vector version of the basic long type. Provides two long fields packed.<pre><code>public class Long2</code></pre></section>	https://developer.android.com/reference/android/renderscript/Long2.html
Long3	A										<section class="prog__container">Vector version of the basic long type. Provides three long fields packed.<pre><code>public class Long3</code></pre></section>	https://developer.android.com/reference/android/renderscript/Long3.html
Long4	A										<section class="prog__container">Vector version of the basic long type. Provides four long fields packed.<pre><code>public class Long4</code></pre></section>	https://developer.android.com/reference/android/renderscript/Long4.html
Matrix2f	A										<section class="prog__container">Class for exposing the native RenderScript rs_matrix2x2 type back to the Android system.<pre><code>public class Matrix2f</code></pre></section>	https://developer.android.com/reference/android/renderscript/Matrix2f.html
Matrix3f	A										<section class="prog__container">Class for exposing the native RenderScript rs_matrix3x3 type back to the Android system.<pre><code>public class Matrix3f</code></pre></section>	https://developer.android.com/reference/android/renderscript/Matrix3f.html
Matrix4f	A										<section class="prog__container">Class for exposing the native RenderScript rs_matrix4x4 type back to the Android system.<pre><code>public class Matrix4f</code></pre></section>	https://developer.android.com/reference/android/renderscript/Matrix4f.html
android.renderscript	A										<section class="prog__container">RenderScript provides support for high-performance computation across heterogeneous processors.</section>	https://developer.android.com/reference/android/renderscript/package-summary.html
RenderScript.ContextType	A										<section class="prog__container">ContextType specifies the specific type of context to be created.<pre><code>public static final enum RenderScript.ContextType</code></pre></section>	https://developer.android.com/reference/android/renderscript/RenderScript.ContextType.html
RenderScript	A										<section class="prog__container">This class provides access to a RenderScript context, which controls RenderScript initialization, resource management, and teardown. An instance of the RenderScript class must be created before any other RS objects can be created. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class RenderScript</code></pre></section>	https://developer.android.com/reference/android/renderscript/RenderScript.html
RenderScript.Priority	A										<section class="prog__container">RenderScript worker thread priority enumeration. The default value is NORMAL. Applications wishing to do background processing should set their priority to LOW to avoid starving forground processes.<pre><code>public static final enum RenderScript.Priority</code></pre></section>	https://developer.android.com/reference/android/renderscript/RenderScript.Priority.html
RenderScript.RSErrorHandler	A										<section class="prog__container">The runtime error handler base class. An application should derive from this class if it wishes to install an error handler. When errors occur at runtime, the fields in this class will be filled, and the run method will be called.<pre><code>public static class RenderScript.RSErrorHandler</code></pre></section>	https://developer.android.com/reference/android/renderscript/RenderScript.RSErrorHandler.html
RenderScript.RSMessageHandler	A										<section class="prog__container">The base class from which an application should derive in order to receive RS messages from scripts. When a script calls <pre><code>rsSendToClient</code></pre>, the data fields will be filled, and the run method will be called on a separate thread. This will occur some time after <pre><code>rsSendToClient</code></pre> completes in the script, as <pre><code>rsSendToClient</code></pre> is asynchronous. Message handlers are not guaranteed to have completed when <pre><code>finish()</code></pre> returns.<pre><code>public static class RenderScript.RSMessageHandler</code></pre></section>	https://developer.android.com/reference/android/renderscript/RenderScript.RSMessageHandler.html
RSDriverException	A										<section class="prog__container">Base class for all exceptions thrown by the Android RenderScript<pre><code>public class RSDriverException</code></pre></section>	https://developer.android.com/reference/android/renderscript/RSDriverException.html
RSIllegalArgumentException	A										<section class="prog__container">Base class for all exceptions thrown by the Android RenderScript<pre><code>public class RSIllegalArgumentException</code></pre></section>	https://developer.android.com/reference/android/renderscript/RSIllegalArgumentException.html
RSInvalidStateException	A										<section class="prog__container">Base class for all exceptions thrown by the Android RenderScript<pre><code>public class RSInvalidStateException</code></pre></section>	https://developer.android.com/reference/android/renderscript/RSInvalidStateException.html
RSRuntimeException	A										<section class="prog__container">Base class for all exceptions thrown by the Android RenderScript<pre><code>public class RSRuntimeException</code></pre></section>	https://developer.android.com/reference/android/renderscript/RSRuntimeException.html
Sampler.Builder	A										<section class="prog__container">Builder for creating non-standard samplers. This is only necessary if a Sampler with different min and mag modes is desired.<pre><code>public static class Sampler.Builder</code></pre></section>	https://developer.android.com/reference/android/renderscript/Sampler.Builder.html
Sampler	A										<section class="prog__container">Sampler object that defines how Allocations can be read as textures within a kernel. Samplers are used in conjunction with the <pre><code>rsSample</code></pre> runtime function to return values from normalized coordinates. Any Allocation used with a Sampler must have been created with <pre><code>USAGE_GRAPHICS_TEXTURE</code></pre>; using a Sampler on an <pre><code>Allocation</code></pre> that was not created with <pre><code>USAGE_GRAPHICS_TEXTURE</code></pre> is undefined.<pre><code>public class Sampler</code></pre></section>	https://developer.android.com/reference/android/renderscript/Sampler.html
Sampler.Value	A										<section class="prog__container"><pre><code>public static final enum Sampler.Value</code></pre></section>	https://developer.android.com/reference/android/renderscript/Sampler.Value.html
Script.Builder	A										<section class="prog__container">Only intended for use by generated reflected code.<pre><code>public static class Script.Builder</code></pre></section>	https://developer.android.com/reference/android/renderscript/Script.Builder.html
Script.FieldBase	A										<section class="prog__container">Only intended for use by generated reflected code.<pre><code>public static class Script.FieldBase</code></pre></section>	https://developer.android.com/reference/android/renderscript/Script.FieldBase.html
Script.FieldID	A										<section class="prog__container">FieldID is an identifier for a Script + exported field pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getFieldID_funcname()".<pre><code>public static final class Script.FieldID</code></pre></section>	https://developer.android.com/reference/android/renderscript/Script.FieldID.html
Script	A										<section class="prog__container">The parent class for all executable scripts. This should not be used by applications.<pre><code>public class Script</code></pre></section>	https://developer.android.com/reference/android/renderscript/Script.html
Script.InvokeID	A										<section class="prog__container">InvokeID is an identifier for an invoke function. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getInvokeID_funcname()".<pre><code>public static final class Script.InvokeID</code></pre></section>	https://developer.android.com/reference/android/renderscript/Script.InvokeID.html
Script.KernelID	A										<section class="prog__container">KernelID is an identifier for a Script + root function pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getKernelID_funcname()".<pre><code>public static final class Script.KernelID</code></pre></section>	https://developer.android.com/reference/android/renderscript/Script.KernelID.html
Script.LaunchOptions	A										<section class="prog__container">Class for specifying the specifics about how a kernel will be launched. This class can specify a potential range of cells on which to run a kernel. If no set is called for a dimension then this class will have no impact on that dimension when the kernel is executed. The forEach kernel launch will operate over the intersection of the dimensions. Example: LaunchOptions with setX(5, 15) Allocation with dimension X=10, Y=10 The resulting forEach run would execute over: x = 5 to 9 (inclusive) and y = 0 to 9 (inclusive).<pre><code>public static final class Script.LaunchOptions</code></pre></section>	https://developer.android.com/reference/android/renderscript/Script.LaunchOptions.html
ScriptC	A										<section class="prog__container">The superclass for all user-defined scripts. This is only intended to be used by the generated derived classes.<pre><code>public class ScriptC</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptC.html
ScriptGroup.Binding	A										<section class="prog__container">Represents a binding of a value to a global variable in a kernel or invocable function. Used in closure creation.<pre><code>public static final class ScriptGroup.Binding</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Binding.html
ScriptGroup.Builder	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Use <pre><code>ScriptGroup.Builder2</code></pre> instead.<pre><code>public static final class ScriptGroup.Builder</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Builder.html
ScriptGroup.Builder2	A										<section class="prog__container">The builder class for creating script groups<pre><code>public static final class ScriptGroup.Builder2</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Builder2.html
ScriptGroup.Closure	A										<section class="prog__container">An opaque class for closures<pre><code>public static final class ScriptGroup.Closure</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Closure.html
ScriptGroup.Future	A										<section class="prog__container">An opaque class for futures<pre><code>public static final class ScriptGroup.Future</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Future.html
ScriptGroup	A										<section class="prog__container">A group of kernels that are executed together with one execution call as if they were a single kernel<pre><code>public final class ScriptGroup</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.html
ScriptGroup.Input	A										<section class="prog__container">An opaque class for script group inputs<pre><code>public static final class ScriptGroup.Input</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Input.html
ScriptIntrinsic	A										<section class="prog__container">Base class for all Intrinsic scripts. An intrinsic a script which implements a pre-defined function. Intrinsics are provided to provide effecient implemtations of common operations. Not intended for direct use.<pre><code>public abstract class ScriptIntrinsic</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsic.html
ScriptIntrinsic3DLUT	A										<section class="prog__container">Intrinsic for converting RGB to RGBA by using a 3D lookup table. The incoming r,g,b values are use as normalized x,y,z coordinates into a 3D allocation. The 8 nearest values are sampled and linearly interpolated. The result is placed in the output.<pre><code>public final class ScriptIntrinsic3DLUT</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsic3DLUT.html
ScriptIntrinsicBLAS	A										<section class="prog__container">ScriptIntrinsicBLAS class provides high performance RenderScript APIs to BLAS. The BLAS (Basic Linear Algebra Subprograms) are routines that provide standard building blocks for performing basic vector and matrix operations. For detailed description of BLAS, please refer to http://www.netlib.org/blas/<pre><code>public final class ScriptIntrinsicBLAS</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBLAS.html
ScriptIntrinsicBlend	A										<section class="prog__container">Intrinsic kernels for blending two <pre><code>Allocation</code></pre> objects.<pre><code>public class ScriptIntrinsicBlend</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend.html
ScriptIntrinsicBlur	A										<section class="prog__container">Intrinsic Gausian blur filter. Applies a gaussian blur of the specified radius to all elements of an allocation.<pre><code>public final class ScriptIntrinsicBlur</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlur.html
ScriptIntrinsicColorMatrix	A										<section class="prog__container">Intrinsic for applying a color matrix to allocations. If the element type is <pre><code>UNSIGNED_8</code></pre>, it is converted to <pre><code>FLOAT_32</code></pre> and normalized from (0-255) to (0-1). If the incoming vector size is less than four, a <pre><code>F32_4(RenderScript)</code></pre> is created by filling the missing vector channels with zero. This value is then multiplied by the 4x4 color matrix as performed by rsMatrixMultiply(), adding a <pre><code>F32_4(RenderScript)</code></pre>, and then writing it to the output <pre><code>Allocation</code></pre>. If the ouptut type is unsigned, the value is normalized from (0-1) to (0-255) and converted. If the output vector size is less than four, the unused channels are discarded. Supported elements types are <pre><code>U8(RenderScript)</code></pre>, <pre><code>U8_2(RenderScript)</code></pre>, <pre><code>U8_3(RenderScript)</code></pre>, <pre><code>U8_4(RenderScript)</code></pre>, <pre><code>F32(RenderScript)</code></pre>, <pre><code>F32_2(RenderScript)</code></pre>, <pre><code>F32_3(RenderScript)</code></pre>, and <pre><code>F32_4(RenderScript)</code></pre>.<pre><code>public final class ScriptIntrinsicColorMatrix</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicColorMatrix.html
ScriptIntrinsicConvolve3x3	A										<section class="prog__container">Intrinsic for applying a 3x3 convolve to an allocation.<pre><code>public final class ScriptIntrinsicConvolve3x3</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicConvolve3x3.html
ScriptIntrinsicConvolve5x5	A										<section class="prog__container">Intrinsic for applying a 5x5 convolve to an allocation.<pre><code>public final class ScriptIntrinsicConvolve5x5</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicConvolve5x5.html
ScriptIntrinsicHistogram	A										<section class="prog__container">Intrinsic Histogram filter.<pre><code>public final class ScriptIntrinsicHistogram</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram.html
ScriptIntrinsicLUT	A										<section class="prog__container">Intrinsic for applying a per-channel lookup table. Each channel of the input has an independant lookup table. The tables are 256 entries in size and can cover the full value range of <pre><code>U8_4(RenderScript)</code></pre>.<pre><code>public final class ScriptIntrinsicLUT</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicLUT.html
ScriptIntrinsicResize	A										<section class="prog__container">Intrinsic for performing a resize of a 2D allocation.<pre><code>public final class ScriptIntrinsicResize</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicResize.html
ScriptIntrinsicYuvToRGB	A										<section class="prog__container">Intrinsic for converting an Android YUV buffer to RGB. The input allocation should be supplied in a supported YUV format as a YUV element Allocation. The output is RGBA; the alpha channel will be set to 255.<pre><code>public final class ScriptIntrinsicYuvToRGB</code></pre></section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicYuvToRGB.html
Short2	A										<section class="prog__container">Class for exposing the native RenderScript Short2 type back to the Android system. Vector version of the basic short type. Provides two short fields packed.<pre><code>public class Short2</code></pre></section>	https://developer.android.com/reference/android/renderscript/Short2.html
Short3	A										<section class="prog__container">Vector version of the basic short type. Provides three short fields packed.<pre><code>public class Short3</code></pre></section>	https://developer.android.com/reference/android/renderscript/Short3.html
Short4	A										<section class="prog__container">Vector version of the basic short type. Provides four short fields packed.<pre><code>public class Short4</code></pre></section>	https://developer.android.com/reference/android/renderscript/Short4.html
Type.Builder	A										<section class="prog__container">Builder class for Type.<pre><code>public static class Type.Builder</code></pre></section>	https://developer.android.com/reference/android/renderscript/Type.Builder.html
Type.CubemapFace	A										<section class="prog__container"><pre><code>public static final enum Type.CubemapFace</code></pre></section>	https://developer.android.com/reference/android/renderscript/Type.CubemapFace.html
Type	A										<section class="prog__container"><pre><code>public class Type</code></pre></section>	https://developer.android.com/reference/android/renderscript/Type.html
Element	A										<section class="prog__container">An XML element. Provides access to child elements and hooks to listen for events related to this element.<pre><code>public class Element</code></pre></section>	https://developer.android.com/reference/android/sax/Element.html
ElementListener	A										<section class="prog__container">Listens for the beginning and ending of elements.<pre><code>public interface ElementListener</code></pre></section>	https://developer.android.com/reference/android/sax/ElementListener.html
EndElementListener	A										<section class="prog__container">Listens for the end of elements.<pre><code>public interface EndElementListener</code></pre></section>	https://developer.android.com/reference/android/sax/EndElementListener.html
EndTextElementListener	A										<section class="prog__container">Listens for the end of text elements.<pre><code>public interface EndTextElementListener</code></pre></section>	https://developer.android.com/reference/android/sax/EndTextElementListener.html
RootElement	A										<section class="prog__container">The root XML element. The entry point for this API. Not safe for concurrent use.<pre><code>public class RootElement</code></pre></section>	https://developer.android.com/reference/android/sax/RootElement.html
StartElementListener	A										<section class="prog__container">Listens for the beginning of elements.<pre><code>public interface StartElementListener</code></pre></section>	https://developer.android.com/reference/android/sax/StartElementListener.html
TextElementListener	A										<section class="prog__container">Listens for the beginning and ending of text elements.<pre><code>public interface TextElementListener</code></pre></section>	https://developer.android.com/reference/android/sax/TextElementListener.html
KeyChain	A										<section class="prog__container">The <pre><code>KeyChain</code></pre> class provides access to private keys and their corresponding certificate chains in credential storage.<pre><code>public final class KeyChain</code></pre></section>	https://developer.android.com/reference/android/security/KeyChain.html
KeyChainAliasCallback	A										<section class="prog__container">The KeyChainAliasCallback is the callback for <pre><code>choosePrivateKeyAlias(Activity, KeyChainAliasCallback, String[], Principal[], Uri, String)</code></pre>.<pre><code>public interface KeyChainAliasCallback</code></pre></section>	https://developer.android.com/reference/android/security/KeyChainAliasCallback.html
KeyChainException	A										<section class="prog__container">Thrown on problems accessing the <pre><code>KeyChain</code></pre>.<pre><code>public class KeyChainException</code></pre></section>	https://developer.android.com/reference/android/security/KeyChainException.html
KeyPairGeneratorSpec.Builder	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Use <pre><code>KeyGenParameterSpec.Builder</code></pre> instead.<pre><code>public static final class KeyPairGeneratorSpec.Builder</code></pre></section>	https://developer.android.com/reference/android/security/KeyPairGeneratorSpec.Builder.html
KeyPairGeneratorSpec	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Use <pre><code>KeyGenParameterSpec</code></pre> instead.<pre><code>public final class KeyPairGeneratorSpec</code></pre></section>	https://developer.android.com/reference/android/security/KeyPairGeneratorSpec.html
KeyStoreParameter.Builder	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Use <pre><code>KeyProtection.Builder</code></pre> instead.<pre><code>public static final class KeyStoreParameter.Builder</code></pre></section>	https://developer.android.com/reference/android/security/KeyStoreParameter.Builder.html
KeyStoreParameter	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Use <pre><code>KeyProtection</code></pre> instead.<pre><code>public final class KeyStoreParameter</code></pre></section>	https://developer.android.com/reference/android/security/KeyStoreParameter.html
NetworkSecurityPolicy	A										<section class="prog__container">Network security policy.<pre><code>public class NetworkSecurityPolicy</code></pre></section>	https://developer.android.com/reference/android/security/NetworkSecurityPolicy.html
android.security	A										<section class="prog__container">Provides access to a few facilities of the Android security subsystems.</section>	https://developer.android.com/reference/android/security/package-summary.html
KeyExpiredException	A										<section class="prog__container">Indicates that a cryptographic operation failed because the employed key's validity end date is in the past.<pre><code>public class KeyExpiredException</code></pre></section>	https://developer.android.com/reference/android/security/keystore/KeyExpiredException.html
KeyGenParameterSpec.Builder	A										<section class="prog__container">Builder of <pre><code>KeyGenParameterSpec</code></pre> instances.<pre><code>public static final class KeyGenParameterSpec.Builder</code></pre></section>	https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html
KeyGenParameterSpec	A										<section class="prog__container"><pre><code>AlgorithmParameterSpec</code></pre> for initializing a <pre><code>KeyPairGenerator</code></pre> or a <pre><code>KeyGenerator</code></pre> of the Android Keystore system. The spec determines authorized uses of the key, such as whether user authentication is required for using the key, what operations are authorized (e.g., signing, but not decryption), with what parameters (e.g., only with a particular padding scheme or digest), and the key's validity start and end dates. Key use authorizations expressed in the spec apply only to secret keys and private keys -- public keys can be used for any supported operations.<pre><code>public final class KeyGenParameterSpec</code></pre></section>	https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.html
KeyInfo	A										<section class="prog__container">Information about a key from the Android Keystore system. This class describes whether the key material is available in plaintext outside of secure hardware, whether user authentication is required for using the key and whether this requirement is enforced by secure hardware, the key's origin, what uses the key is authorized for (e.g., only in <pre><code>GCM</code></pre> mode, or signing only), whether the key should be encrypted at rest, the key's and validity start and end dates.<pre><code>public class KeyInfo</code></pre></section>	https://developer.android.com/reference/android/security/keystore/KeyInfo.html
KeyNotYetValidException	A										<section class="prog__container">Indicates that a cryptographic operation failed because the employed key's validity start date is in the future.<pre><code>public class KeyNotYetValidException</code></pre></section>	https://developer.android.com/reference/android/security/keystore/KeyNotYetValidException.html
KeyPermanentlyInvalidatedException	A										<section class="prog__container">Indicates that the key can no longer be used because it has been permanently invalidated.<pre><code>public class KeyPermanentlyInvalidatedException</code></pre></section>	https://developer.android.com/reference/android/security/keystore/KeyPermanentlyInvalidatedException.html
KeyProperties	A										<section class="prog__container">Properties of Android Keystore keys.<pre><code>public abstract class KeyProperties</code></pre></section>	https://developer.android.com/reference/android/security/keystore/KeyProperties.html
KeyProtection.Builder	A										<section class="prog__container">Builder of <pre><code>KeyProtection</code></pre> instances.<pre><code>public static final class KeyProtection.Builder</code></pre></section>	https://developer.android.com/reference/android/security/keystore/KeyProtection.Builder.html
KeyProtection	A										<section class="prog__container">Specification of how a key or key pair is secured when imported into the Android Keystore system. This class specifies authorized uses of the imported key, such as whether user authentication is required for using the key, what operations the key is authorized for (e.g., decryption, but not signing) with what parameters (e.g., only with a particular padding scheme or digest), and the key's validity start and end dates. Key use authorizations expressed in this class apply only to secret keys and private keys -- public keys can be used for any supported operations.<pre><code>public final class KeyProtection</code></pre></section>	https://developer.android.com/reference/android/security/keystore/KeyProtection.html
UserNotAuthenticatedException	A										<section class="prog__container">Indicates that a cryptographic operation could not be performed because the user has not been authenticated recently enough. Authenticating the user will resolve this issue.<pre><code>public class UserNotAuthenticatedException</code></pre></section>	https://developer.android.com/reference/android/security/keystore/UserNotAuthenticatedException.html
CarrierIdentifier	A										<section class="prog__container">Used to pass info to CarrierConfigService implementations so they can decide what values to return.<pre><code>public class CarrierIdentifier</code></pre></section>	https://developer.android.com/reference/android/service/carrier/CarrierIdentifier.html
CarrierMessagingService	A										<section class="prog__container">A service that receives calls from the system when new SMS and MMS are sent or received.<pre><code>public abstract class CarrierMessagingService</code></pre></section>	https://developer.android.com/reference/android/service/carrier/CarrierMessagingService.html
CarrierMessagingService.ResultCallback	A										<section class="prog__container">A callback interface used to provide results asynchronously.<pre><code>public static interface CarrierMessagingService.ResultCallback</code></pre></section>	https://developer.android.com/reference/android/service/carrier/CarrierMessagingService.ResultCallback.html
CarrierMessagingService.SendMmsResult	A										<section class="prog__container">The result of sending an MMS.<pre><code>public static final class CarrierMessagingService.SendMmsResult</code></pre></section>	https://developer.android.com/reference/android/service/carrier/CarrierMessagingService.SendMmsResult.html
CarrierMessagingService.SendMultipartSmsResult	A										<section class="prog__container">The result of sending a multipart SMS.<pre><code>public static final class CarrierMessagingService.SendMultipartSmsResult</code></pre></section>	https://developer.android.com/reference/android/service/carrier/CarrierMessagingService.SendMultipartSmsResult.html
CarrierMessagingService.SendSmsResult	A										<section class="prog__container">The result of sending an SMS.<pre><code>public static final class CarrierMessagingService.SendSmsResult</code></pre></section>	https://developer.android.com/reference/android/service/carrier/CarrierMessagingService.SendSmsResult.html
CarrierService	A										<section class="prog__container">A service that exposes carrier-specific functionality to the system.<pre><code>public abstract class CarrierService</code></pre></section>	https://developer.android.com/reference/android/service/carrier/CarrierService.html
MessagePdu	A										<section class="prog__container">A parcelable list of PDUs representing contents of a possibly multi-part SMS.<pre><code>public final class MessagePdu</code></pre></section>	https://developer.android.com/reference/android/service/carrier/MessagePdu.html
ChooserTarget	A										<section class="prog__container">A ChooserTarget represents a deep-link into an application as returned by a <pre><code>ChooserTargetService</code></pre>.<pre><code>public final class ChooserTarget</code></pre></section>	https://developer.android.com/reference/android/service/chooser/ChooserTarget.html
ChooserTargetService	A										<section class="prog__container">A service that receives calls from the system when the user is asked to choose a target for an intent explicitly by another app. The calling app must have invoked <pre><code>ACTION_CHOOSER</code></pre> as handled by the system; applications do not have the ability to query a ChooserTargetService directly.<pre><code>public abstract class ChooserTargetService</code></pre></section>	https://developer.android.com/reference/android/service/chooser/ChooserTargetService.html
DreamService	A										<section class="prog__container">Extend this class to implement a custom dream (available to the user as a "Daydream").<pre><code>public class DreamService</code></pre></section>	https://developer.android.com/reference/android/service/dreams/DreamService.html
CameraPrewarmService	A										<section class="prog__container">Extend this class to implement a camera prewarm service. See <pre><code>META_DATA_STILL_IMAGE_CAMERA_PREWARM_SERVICE</code></pre>.<pre><code>public abstract class CameraPrewarmService</code></pre></section>	https://developer.android.com/reference/android/service/media/CameraPrewarmService.html
MediaBrowserService.BrowserRoot	A										<section class="prog__container">Contains information that the browser service needs to send to the client when first connected.<pre><code>public static final class MediaBrowserService.BrowserRoot</code></pre></section>	https://developer.android.com/reference/android/service/media/MediaBrowserService.BrowserRoot.html
MediaBrowserService	A										<section class="prog__container">Base class for media browse services.<pre><code>public abstract class MediaBrowserService</code></pre></section>	https://developer.android.com/reference/android/service/media/MediaBrowserService.html
MediaBrowserService.Result	A										<section class="prog__container">Completion handler for asynchronous callback methods in <pre><code>MediaBrowserService</code></pre>.<pre><code>public class MediaBrowserService.Result</code></pre></section>	https://developer.android.com/reference/android/service/media/MediaBrowserService.Result.html
Condition	A										<section class="prog__container">The current condition of an <pre><code>AutomaticZenRule</code></pre>, provided by the <pre><code>ConditionProviderService</code></pre> that owns the rule. Used to tell the system to enter Do Not Disturb mode and request that the system exit Do Not Disturb mode.<pre><code>public final class Condition</code></pre></section>	https://developer.android.com/reference/android/service/notification/Condition.html
ConditionProviderService	A										<section class="prog__container">A service that provides conditions about boolean state.<pre><code>public abstract class ConditionProviderService</code></pre></section>	https://developer.android.com/reference/android/service/notification/ConditionProviderService.html
NotificationListenerService	A										<section class="prog__container">A service that receives calls from the system when new notifications are posted or removed, or their ranking changed.<pre><code>public abstract class NotificationListenerService</code></pre></section>	https://developer.android.com/reference/android/service/notification/NotificationListenerService.html
NotificationListenerService.Ranking	A										<section class="prog__container">Stores ranking related information on a currently active notification.<pre><code>public static class NotificationListenerService.Ranking</code></pre></section>	https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html
NotificationListenerService.RankingMap	A										<section class="prog__container">Provides access to ranking information on currently active notifications.<pre><code>public static class NotificationListenerService.RankingMap</code></pre></section>	https://developer.android.com/reference/android/service/notification/NotificationListenerService.RankingMap.html
StatusBarNotification	A										<section class="prog__container">Class encapsulating a Notification. Sent by the NotificationManagerService to clients including the status bar and any <pre><code>NotificationListenerService</code></pre>s.<pre><code>public class StatusBarNotification</code></pre></section>	https://developer.android.com/reference/android/service/notification/StatusBarNotification.html
Tile	A										<section class="prog__container">A Tile holds the state of a tile that will be displayed in Quick Settings. A tile in Quick Settings exists as an icon with an accompanied label. It also may have content description for accessibility usability. The style and layout of the tile may change to match a given device.<pre><code>public final class Tile</code></pre></section>	https://developer.android.com/reference/android/service/quicksettings/Tile.html
TileService	A										<section class="prog__container">A TileService provides the user a tile that can be added to Quick Settings. Quick Settings is a space provided that allows the user to change settings and take quick actions without leaving the context of their current app.<pre><code>public class TileService</code></pre></section>	https://developer.android.com/reference/android/service/quicksettings/TileService.html
RestrictionsReceiver	A										<section class="prog__container">Abstract implementation of a Restrictions Provider BroadcastReceiver. To implement a Restrictions Provider, extend from this class and implement the abstract methods. Export this receiver in the manifest. A profile owner device admin can then register this component as a Restrictions Provider using <pre><code>setRestrictionsProvider(ComponentName, ComponentName)</code></pre>.<pre><code>public abstract class RestrictionsReceiver</code></pre></section>	https://developer.android.com/reference/android/service/restrictions/RestrictionsReceiver.html
android.service.textservice	A										<section class="prog__container">Provides classes that allow you to create spell checkers in a manner similar to the input method framework (for IMEs).</section>	https://developer.android.com/reference/android/service/textservice/package-summary.html
SpellCheckerService	A										<section class="prog__container">SpellCheckerService provides an abstract base class for a spell checker. This class combines a service to the system with the spell checker service interface that spell checker must implement.<pre><code>public abstract class SpellCheckerService</code></pre></section>	https://developer.android.com/reference/android/service/textservice/SpellCheckerService.html
SpellCheckerService.Session	A										<section class="prog__container">This abstract class should be overridden by a concrete implementation of a spell checker.<pre><code>public static abstract class SpellCheckerService.Session</code></pre></section>	https://developer.android.com/reference/android/service/textservice/SpellCheckerService.Session.html
AlwaysOnHotwordDetector.Callback	A										<section class="prog__container">Callbacks for always-on hotword detection.<pre><code>public static abstract class AlwaysOnHotwordDetector.Callback</code></pre></section>	https://developer.android.com/reference/android/service/voice/AlwaysOnHotwordDetector.Callback.html
AlwaysOnHotwordDetector.EventPayload	A										<section class="prog__container">Additional payload for <pre><code>onDetected(AlwaysOnHotwordDetector.EventPayload)</code></pre>.<pre><code>public static class AlwaysOnHotwordDetector.EventPayload</code></pre></section>	https://developer.android.com/reference/android/service/voice/AlwaysOnHotwordDetector.EventPayload.html
AlwaysOnHotwordDetector	A										<section class="prog__container">A class that lets a VoiceInteractionService implementation interact with always-on keyphrase detection APIs.<pre><code>public class AlwaysOnHotwordDetector</code></pre></section>	https://developer.android.com/reference/android/service/voice/AlwaysOnHotwordDetector.html
VoiceInteractionService	A										<section class="prog__container">Top-level service of the current global voice interactor, which is providing support for hotwording, the back-end of a <pre><code>VoiceInteractor</code></pre>, etc. The current VoiceInteractionService that has been selected by the user is kept always running by the system, to allow it to do things like listen for hotwords in the background to instigate voice interactions.<pre><code>public class VoiceInteractionService</code></pre></section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionService.html
VoiceInteractionSession.AbortVoiceRequest	A										<section class="prog__container">A request to report that the current user interaction can not be completed with voice, as per <pre><code>VoiceInteractor.AbortVoiceRequest</code></pre>.<pre><code>public static final class VoiceInteractionSession.AbortVoiceRequest</code></pre></section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AbortVoiceRequest.html
VoiceInteractionSession.CommandRequest	A										<section class="prog__container">A generic vendor-specific request, as per <pre><code>VoiceInteractor.CommandRequest</code></pre>.<pre><code>public static final class VoiceInteractionSession.CommandRequest</code></pre></section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CommandRequest.html
VoiceInteractionSession.CompleteVoiceRequest	A										<section class="prog__container">A request to simply inform the user that the voice operation has completed, as per <pre><code>VoiceInteractor.CompleteVoiceRequest</code></pre>.<pre><code>public static final class VoiceInteractionSession.CompleteVoiceRequest</code></pre></section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CompleteVoiceRequest.html
VoiceInteractionSession.ConfirmationRequest	A										<section class="prog__container">A request for confirmation from the user of an operation, as per <pre><code>VoiceInteractor.ConfirmationRequest</code></pre>.<pre><code>public static final class VoiceInteractionSession.ConfirmationRequest</code></pre></section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.ConfirmationRequest.html
VoiceInteractionSession	A										<section class="prog__container">An active voice interaction session, providing a facility for the implementation to interact with the user in the voice interaction layer. The user interface is initially shown by default, and can be created be overriding <pre><code>onCreateContentView()</code></pre> in which the UI can be built.<pre><code>public class VoiceInteractionSession</code></pre></section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html
VoiceInteractionSession.Insets	A										<section class="prog__container">Information about where interesting parts of the input method UI appear.<pre><code>public static final class VoiceInteractionSession.Insets</code></pre></section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Insets.html
VoiceInteractionSession.PickOptionRequest	A										<section class="prog__container">A request for the user to pick from a set of option, as per <pre><code>VoiceInteractor.PickOptionRequest</code></pre>.<pre><code>public static final class VoiceInteractionSession.PickOptionRequest</code></pre></section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.PickOptionRequest.html
VoiceInteractionSession.Request	A										<section class="prog__container">Base class representing a request from a voice-driver app to perform a particular voice operation with the user. See related subclasses for the types of requests that are possible.<pre><code>public static class VoiceInteractionSession.Request</code></pre></section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Request.html
VoiceInteractionSessionService	A										<section class="prog__container">An active voice interaction session, initiated by a <pre><code>VoiceInteractionService</code></pre>.<pre><code>public abstract class VoiceInteractionSessionService</code></pre></section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSessionService.html
VrListenerService	A										<section class="prog__container">A service that is bound from the system while running in virtual reality (VR) mode.<pre><code>public abstract class VrListenerService</code></pre></section>	https://developer.android.com/reference/android/service/vr/VrListenerService.html
WallpaperService.Engine	A										<section class="prog__container">The actual implementation of a wallpaper. A wallpaper service may have multiple instances running (for example as a real wallpaper and as a preview), each of which is represented by its own Engine instance. You must implement <pre><code>onCreateEngine()</code></pre> to return your concrete Engine implementation.<pre><code>public class WallpaperService.Engine</code></pre></section>	https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html
WallpaperService	A										<section class="prog__container">A wallpaper service is responsible for showing a live wallpaper behind applications that would like to sit on top of it. This service object itself does very little -- its only purpose is to generate instances of <pre><code>WallpaperService.Engine</code></pre> as needed. Implementing a wallpaper thus involves subclassing from this, subclassing an Engine implementation, and implementing <pre><code>onCreateEngine()</code></pre> to return a new instance of your engine.<pre><code>public abstract class WallpaperService</code></pre></section>	https://developer.android.com/reference/android/service/wallpaper/WallpaperService.html
RecognitionListener	A										<section class="prog__container">Used for receiving notifications from the SpeechRecognizer when the recognition related events occur. All the callbacks are executed on the Application main thread.<pre><code>public interface RecognitionListener</code></pre></section>	https://developer.android.com/reference/android/speech/RecognitionListener.html
RecognitionService.Callback	A										<section class="prog__container">This class receives callbacks from the speech recognition service and forwards them to the user. An instance of this class is passed to the <pre><code>onStartListening(Intent, Callback)</code></pre> method. Recognizers may call these methods on any thread.<pre><code>public class RecognitionService.Callback</code></pre></section>	https://developer.android.com/reference/android/speech/RecognitionService.Callback.html
RecognitionService	A										<section class="prog__container">This class provides a base class for recognition service implementations. This class should be extended only in case you wish to implement a new speech recognizer. Please note that the implementation of this service is stateless.<pre><code>public abstract class RecognitionService</code></pre></section>	https://developer.android.com/reference/android/speech/RecognitionService.html
RecognizerIntent	A										<section class="prog__container">Constants for supporting speech recognition through starting an <pre><code>Intent</code></pre><pre><code>public class RecognizerIntent</code></pre></section>	https://developer.android.com/reference/android/speech/RecognizerIntent.html
RecognizerResultsIntent	A										<section class="prog__container">Constants for intents related to showing speech recognition results. These constants should not be needed for normal utilization of speech recognition. They would only be called if you wanted to trigger a view of voice search results in your application, or implemented if you wanted to offer a different view for voice search results with your application. The standard behavior here for someone receiving an <pre><code>ACTION_VOICE_SEARCH_RESULTS</code></pre> is to first retrieve the list of <pre><code>EXTRA_VOICE_SEARCH_RESULT_STRINGS</code></pre>, and use any provided HTML for that result in <pre><code>EXTRA_VOICE_SEARCH_RESULT_HTML</code></pre>, if available, to display the search results. If that is not available, then the corresponding url for that result in <pre><code>EXTRA_VOICE_SEARCH_RESULT_URLS</code></pre> should be used. And if even that is not available, then a search url should be constructed from the actual recognition result string.<pre><code>public class RecognizerResultsIntent</code></pre></section>	https://developer.android.com/reference/android/speech/RecognizerResultsIntent.html
SpeechRecognizer	A										<section class="prog__container">This class provides access to the speech recognition service. This service allows access to the speech recognizer. Do not instantiate this class directly, instead, call <pre><code>createSpeechRecognizer(Context)</code></pre>. This class's methods must be invoked only from the main application thread.<pre><code>public class SpeechRecognizer</code></pre></section>	https://developer.android.com/reference/android/speech/SpeechRecognizer.html
SynthesisCallback	A										<section class="prog__container">A callback to return speech data synthesized by a text to speech engine. The engine can provide streaming audio by calling <pre><code>start(int, int, int)</code></pre>, then <pre><code>audioAvailable(byte[], int, int)</code></pre> until all audio has been provided, then finally <pre><code>done()</code></pre>. <pre><code>error()</code></pre> can be called at any stage in the synthesis process to indicate that an error has occurred, but if the call is made after a call to <pre><code>done()</code></pre>, it might be discarded. <pre><code>done()</code></pre> must be called at the end of synthesis, regardless of errors. All methods can be only called on the synthesis thread.<pre><code>public interface SynthesisCallback</code></pre></section>	https://developer.android.com/reference/android/speech/tts/SynthesisCallback.html
SynthesisRequest	A										<section class="prog__container">Contains data required by engines to synthesize speech. This data is: <ul> <li>The text to synthesize</li> <li>The synthesis locale, represented as a language, country and a variant. The language is an ISO 639-3 letter language code, and the country is an ISO 3166 alpha 3 code. The variant is not specified.</li> <li>The name of the voice requested for this synthesis. May be empty if the client uses <pre><code>setLanguage(Locale)</code></pre> instead of <pre><code>setVoice(Voice)</code></pre></li> <li>The synthesis speech rate, with 100 being the normal, and higher values representing higher speech rates.</li> <li>The voice pitch, with 100 being the default pitch.</li> </ul> Any additional parameters sent to the text to speech service are passed in uninterpreted, see the <pre><code>params</code></pre> argument in <pre><code>speak(CharSequence, int, Bundle, String)</code></pre> and <pre><code>synthesizeToFile(CharSequence, Bundle, File, String)</code></pre>.<pre><code>public final class SynthesisRequest</code></pre></section>	https://developer.android.com/reference/android/speech/tts/SynthesisRequest.html
TextToSpeech.Engine	A										<section class="prog__container">Constants and parameter names for controlling text-to-speech. These include: <ul> <li> Intents to ask engine to install data or check its data and extras for a TTS engine's check data activity. </li> <li> Keys for the parameters passed with speak commands, e.g. <pre><code>KEY_PARAM_UTTERANCE_ID</code></pre>, <pre><code>KEY_PARAM_STREAM</code></pre>. </li> <li> A list of feature strings that engines might support, e.g <pre><code>KEY_FEATURE_NETWORK_SYNTHESIS</code></pre>. These values may be passed in to <pre><code>speak(CharSequence, int, Bundle, String)</code></pre> and <pre><code>synthesizeToFile(CharSequence, Bundle, File, String)</code></pre> to modify engine behaviour. The engine can be queried for the set of features it supports through <pre><code>getFeatures(java.util.Locale)</code></pre>. </li> </ul><pre><code>public class TextToSpeech.Engine</code></pre></section>	https://developer.android.com/reference/android/speech/tts/TextToSpeech.Engine.html
TextToSpeech.EngineInfo	A										<section class="prog__container">Information about an installed text-to-speech engine.<pre><code>public static class TextToSpeech.EngineInfo</code></pre></section>	https://developer.android.com/reference/android/speech/tts/TextToSpeech.EngineInfo.html
TextToSpeech	A										<section class="prog__container">Synthesizes speech from text for immediate playback or to create a sound file.<pre><code>public class TextToSpeech</code></pre></section>	https://developer.android.com/reference/android/speech/tts/TextToSpeech.html
TextToSpeech.OnInitListener	A										<section class="prog__container">Interface definition of a callback to be invoked indicating the completion of the TextToSpeech engine initialization.<pre><code>public static interface TextToSpeech.OnInitListener</code></pre></section>	https://developer.android.com/reference/android/speech/tts/TextToSpeech.OnInitListener.html
TextToSpeech.OnUtteranceCompletedListener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 18.</strong><br/> Use <pre><code>UtteranceProgressListener</code></pre> instead.<pre><code>public static interface TextToSpeech.OnUtteranceCompletedListener</code></pre></section>	https://developer.android.com/reference/android/speech/tts/TextToSpeech.OnUtteranceCompletedListener.html
TextToSpeechService	A										<section class="prog__container">Abstract base class for TTS engine implementations. The following methods need to be implemented: <ul> <li><pre><code>onIsLanguageAvailable(String, String, String)</code></pre></li> <li><pre><code>onLoadLanguage(String, String, String)</code></pre></li> <li><pre><code>onGetLanguage()</code></pre></li> <li><pre><code>onSynthesizeText(SynthesisRequest, SynthesisCallback)</code></pre></li> <li><pre><code>onStop()</code></pre></li> </ul> The first three deal primarily with language management, and are used to query the engine for it's support for a given language and indicate to it that requests in a given language are imminent. <pre><code>onSynthesizeText(SynthesisRequest, SynthesisCallback)</code></pre> is central to the engine implementation. The implementation should synthesize text as per the request parameters and return synthesized data via the supplied callback. This class and its helpers will then consume that data, which might mean queuing it for playback or writing it to a file or similar. All calls to this method will be on a single thread, which will be different from the main thread of the service. Synthesis must be synchronous which means the engine must NOT hold on to the callback or call any methods on it after the method returns. <pre><code>onStop()</code></pre> tells the engine that it should stop all ongoing synthesis, if any. Any pending data from the current synthesis will be discarded. <pre><code>onGetLanguage()</code></pre> is not required as of JELLYBEAN_MR2 (API 18) and later, it is only called on earlier versions of Android. API Level 20 adds support for Voice objects. Voices are an abstraction that allow the TTS service to expose multiple backends for a single locale. Each one of them can have a different features set. In order to fully take advantage of voices, an engine should implement the following methods: <ul> <li><pre><code>onGetVoices()</code></pre></li> <li><pre><code>onIsValidVoiceName(String)</code></pre></li> <li><pre><code>onLoadVoice(String)</code></pre></li> <li><pre><code>onGetDefaultVoiceNameFor(String, String, String)</code></pre></li> </ul> The first three methods are siblings of the <pre><code>onGetLanguage()</code></pre>, <pre><code>onIsLanguageAvailable(String, String, String)</code></pre> and <pre><code>onLoadLanguage(String, String, String)</code></pre> methods. The last one, <pre><code>onGetDefaultVoiceNameFor(String, String, String)</code></pre> is a link between locale and voice based methods. Since API level 21 <pre><code>setLanguage(Locale)</code></pre> is implemented by calling <pre><code>setVoice(Voice)</code></pre> with the voice returned by <pre><code>onGetDefaultVoiceNameFor(String, String, String)</code></pre>. If the client uses a voice instead of a locale, <pre><code>SynthesisRequest</code></pre> will contain the requested voice name. The default implementations of Voice-related methods implement them using the pre-existing locale-based implementation.<pre><code>public abstract class TextToSpeechService</code></pre></section>	https://developer.android.com/reference/android/speech/tts/TextToSpeechService.html
UtteranceProgressListener	A										<section class="prog__container">Listener for events relating to the progress of an utterance through the synthesis queue. Each utterance is associated with a call to <pre><code>speak(CharSequence, int, Bundle, String)</code></pre> or <pre><code>synthesizeToFile(CharSequence, Bundle, File, String)</code></pre> with an associated utterance identifier, as per <pre><code>KEY_PARAM_UTTERANCE_ID</code></pre>. The callbacks specified in this method can be called from multiple threads.<pre><code>public abstract class UtteranceProgressListener</code></pre></section>	https://developer.android.com/reference/android/speech/tts/UtteranceProgressListener.html
Voice	A										<section class="prog__container">Characteristics and features of a Text-To-Speech Voice. Each TTS Engine can expose multiple voices for each locale, with different set of features.<pre><code>public class Voice</code></pre></section>	https://developer.android.com/reference/android/speech/tts/Voice.html
AnimatorRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be an animator resource reference (e.g. <pre><code>android.R.animator.fade_in</code></pre>).<pre><code>public abstract @interface AnimatorRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/AnimatorRes.html
AnimRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be an anim resource reference (e.g. <pre><code>android.R.anim.fade_in</code></pre>).<pre><code>public abstract @interface AnimRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/AnimRes.html
AnyRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a resource reference of any type. If the specific type is known, use one of the more specific annotations instead, such as <pre><code>StringRes</code></pre> or <pre><code>DrawableRes</code></pre>.<pre><code>public abstract @interface AnyRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/AnyRes.html
AnyThread	A										<section class="prog__container">Denotes that the annotated method can be called from any thread (e.g. it is "thread safe".) If the annotated element is a class, then all methods in the class can be called from any thread.<pre><code>public abstract @interface AnyThread</code></pre></section>	https://developer.android.com/reference/android/support/annotation/AnyThread.html
ArrayRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be an array resource reference (e.g. <pre><code>android.R.array.phoneTypes</code></pre>).<pre><code>public abstract @interface ArrayRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/ArrayRes.html
AttrRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be an attribute reference (e.g. <pre><code>android.R.attr.action</code></pre>).<pre><code>public abstract @interface AttrRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/AttrRes.html
BinderThread	A										<section class="prog__container">Denotes that the annotated method should only be called on the binder thread. If the annotated element is a class, then all methods in the class should be called on the binder thread.<pre><code>public abstract @interface BinderThread</code></pre></section>	https://developer.android.com/reference/android/support/annotation/BinderThread.html
BoolRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a boolean resource reference.<pre><code>public abstract @interface BoolRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/BoolRes.html
CallSuper	A										<section class="prog__container">Denotes that any overriding methods should invoke this method as well.<pre><code>public abstract @interface CallSuper</code></pre></section>	https://developer.android.com/reference/android/support/annotation/CallSuper.html
CheckResult	A										<section class="prog__container">Denotes that the annotated method returns a result that it typically is an error to ignore. This is usually used for methods that have no side effect, so calling it without actually looking at the result usually means the developer has misunderstood what the method does.<pre><code>public abstract @interface CheckResult</code></pre></section>	https://developer.android.com/reference/android/support/annotation/CheckResult.html
ColorInt	A										<section class="prog__container">Denotes that the annotated element represents a packed color int, <pre><code>AARRGGBB</code></pre>. If applied to an int array, every element in the array represents a color integer.<pre><code>public abstract @interface ColorInt</code></pre></section>	https://developer.android.com/reference/android/support/annotation/ColorInt.html
ColorRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a color resource reference (e.g. <pre><code>android.R.color.black</code></pre>).<pre><code>public abstract @interface ColorRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/ColorRes.html
DimenRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a dimension resource reference (e.g. <pre><code>android.R.dimen.app_icon_size</code></pre>).<pre><code>public abstract @interface DimenRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/DimenRes.html
Dimension	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to represent a dimension.<pre><code>public abstract @interface Dimension</code></pre></section>	https://developer.android.com/reference/android/support/annotation/Dimension.html
DrawableRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a drawable resource reference (e.g. <pre><code>android.R.attr.alertDialogIcon</code></pre>).<pre><code>public abstract @interface DrawableRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/DrawableRes.html
FloatRange	A										<section class="prog__container">Denotes that the annotated element should be a float or double in the given range<pre><code>public abstract @interface FloatRange</code></pre></section>	https://developer.android.com/reference/android/support/annotation/FloatRange.html
FractionRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a fraction resource reference.<pre><code>public abstract @interface FractionRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/FractionRes.html
IdRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be an id resource reference (e.g. <pre><code>android.R.id.copy</code></pre>).<pre><code>public abstract @interface IdRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/IdRes.html
IntDef	A										<section class="prog__container">Denotes that the annotated element of integer type, represents a logical type and that its value should be one of the explicitly named constants. If the IntDef#flag() attribute is set to true, multiple constants can be combined.<pre><code>public abstract @interface IntDef</code></pre></section>	https://developer.android.com/reference/android/support/annotation/IntDef.html
IntegerRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be an integer resource reference (e.g. <pre><code>android.R.integer.config_shortAnimTime</code></pre>).<pre><code>public abstract @interface IntegerRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/IntegerRes.html
InterpolatorRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be an interpolator resource reference (e.g. <pre><code>android.R.interpolator.cycle</code></pre>).<pre><code>public abstract @interface InterpolatorRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/InterpolatorRes.html
IntRange	A										<section class="prog__container">Denotes that the annotated element should be an int or long in the given range<pre><code>public abstract @interface IntRange</code></pre></section>	https://developer.android.com/reference/android/support/annotation/IntRange.html
Keep	A										<section class="prog__container">Denotes that the annotated element should not be removed when the code is minified at build time. This is typically used on methods and classes that are accessed only via reflection so a compiler may think that the code is unused.<pre><code>public abstract @interface Keep</code></pre></section>	https://developer.android.com/reference/android/support/annotation/Keep.html
LayoutRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a layout resource reference (e.g. <pre><code>android.R.layout.list_content</code></pre>).<pre><code>public abstract @interface LayoutRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/LayoutRes.html
MainThread	A										<section class="prog__container">Denotes that the annotated method should only be called on the main thread. If the annotated element is a class, then all methods in the class should be called on the main thread.<pre><code>public abstract @interface MainThread</code></pre></section>	https://developer.android.com/reference/android/support/annotation/MainThread.html
MenuRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a menu resource reference.<pre><code>public abstract @interface MenuRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/MenuRes.html
NonNull	A										<section class="prog__container">Denotes that a parameter, field or method return value can never be null.<pre><code>public abstract @interface NonNull</code></pre></section>	https://developer.android.com/reference/android/support/annotation/NonNull.html
Nullable	A										<section class="prog__container">Denotes that a parameter, field or method return value can be null.<pre><code>public abstract @interface Nullable</code></pre></section>	https://developer.android.com/reference/android/support/annotation/Nullable.html
PluralsRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a plurals resource reference.<pre><code>public abstract @interface PluralsRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/PluralsRes.html
Px	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to represent a pixel dimension.<pre><code>public abstract @interface Px</code></pre></section>	https://developer.android.com/reference/android/support/annotation/Px.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/annotation/R.html
RawRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a raw resource reference.<pre><code>public abstract @interface RawRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/RawRes.html
RequiresApi	A										<section class="prog__container">Denotes that the annotated element should only be called on the given API level or higher.<pre><code>public abstract @interface RequiresApi</code></pre></section>	https://developer.android.com/reference/android/support/annotation/RequiresApi.html
RequiresPermission	A										<section class="prog__container">Denotes that the annotated element requires (or may require) one or more permissions.<pre><code>public abstract @interface RequiresPermission</code></pre></section>	https://developer.android.com/reference/android/support/annotation/RequiresPermission.html
RequiresPermission.Read	A										<section class="prog__container">Specifies that the given permission is required for read operations.<pre><code>public static abstract @interface RequiresPermission.Read</code></pre></section>	https://developer.android.com/reference/android/support/annotation/RequiresPermission.Read.html
RequiresPermission.Write	A										<section class="prog__container">Specifies that the given permission is required for write operations.<pre><code>public static abstract @interface RequiresPermission.Write</code></pre></section>	https://developer.android.com/reference/android/support/annotation/RequiresPermission.Write.html
RestrictTo	A										<section class="prog__container">Denotes that the annotated element should only be accessed from within a specific scope (as defined by <pre><code>RestrictTo.Scope</code></pre>).<pre><code>public abstract @interface RestrictTo</code></pre></section>	https://developer.android.com/reference/android/support/annotation/RestrictTo.html
RestrictTo.Scope	A										<section class="prog__container"><pre><code>public static final enum RestrictTo.Scope</code></pre></section>	https://developer.android.com/reference/android/support/annotation/RestrictTo.Scope.html
Size	A										<section class="prog__container">Denotes that the annotated element should have a given size or length. Note that "-1" means "unset". Typically used with a parameter or return value of type array or collection.<pre><code>public abstract @interface Size</code></pre></section>	https://developer.android.com/reference/android/support/annotation/Size.html
StringDef	A										<section class="prog__container">Denotes that the annotated String element, represents a logical type and that its value should be one of the explicitly named constants.<pre><code>public abstract @interface StringDef</code></pre></section>	https://developer.android.com/reference/android/support/annotation/StringDef.html
StringRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a String resource reference (e.g. <pre><code>android.R.string.ok</code></pre>).<pre><code>public abstract @interface StringRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/StringRes.html
StyleableRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a styleable resource reference (e.g. <pre><code>android.R.styleable.TextView_text</code></pre>).<pre><code>public abstract @interface StyleableRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/StyleableRes.html
StyleRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a style resource reference (e.g. <pre><code>android.R.style.TextAppearance</code></pre>).<pre><code>public abstract @interface StyleRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/StyleRes.html
TransitionRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be a transition resource reference.<pre><code>public abstract @interface TransitionRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/TransitionRes.html
UiThread	A										<section class="prog__container">Denotes that the annotated method or constructor should only be called on the UI thread. If the annotated element is a class, then all methods in the class should be called on the UI thread.<pre><code>public abstract @interface UiThread</code></pre></section>	https://developer.android.com/reference/android/support/annotation/UiThread.html
VisibleForTesting	A										<section class="prog__container">Denotes that the class, method or field has its visibility relaxed, so that it is more widely visible than otherwise necessary to make code testable.<pre><code>public abstract @interface VisibleForTesting</code></pre></section>	https://developer.android.com/reference/android/support/annotation/VisibleForTesting.html
WorkerThread	A										<section class="prog__container">Denotes that the annotated method should only be called on a worker thread. If the annotated element is a class, then all methods in the class should be called on a worker thread.<pre><code>public abstract @interface WorkerThread</code></pre></section>	https://developer.android.com/reference/android/support/annotation/WorkerThread.html
XmlRes	A										<section class="prog__container">Denotes that an integer parameter, field or method return value is expected to be an XML resource reference.<pre><code>public abstract @interface XmlRes</code></pre></section>	https://developer.android.com/reference/android/support/annotation/XmlRes.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/annotations/R.html
ContentRecommendation.Builder	A										<section class="prog__container">Builder class for <pre><code>ContentRecommendation</code></pre> objects. Provides a convenient way to set the various fields of a <pre><code>ContentRecommendation</code></pre>.<pre><code>public static final class ContentRecommendation.Builder</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.Builder.html
ContentRecommendation.ContentMaturity	A										<section class="prog__container"><pre><code>public static abstract @interface ContentRecommendation.ContentMaturity</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.ContentMaturity.html
ContentRecommendation.ContentPricing	A										<section class="prog__container"><pre><code>public static abstract @interface ContentRecommendation.ContentPricing</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.ContentPricing.html
ContentRecommendation.ContentStatus	A										<section class="prog__container"><pre><code>public static abstract @interface ContentRecommendation.ContentStatus</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.ContentStatus.html
ContentRecommendation.ContentType	A										<section class="prog__container"><pre><code>public static abstract @interface ContentRecommendation.ContentType</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.ContentType.html
ContentRecommendation	A										<section class="prog__container">The ContentRecommendation object encapsulates all application provided data for a single content recommendation item.<pre><code>public final class ContentRecommendation</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.html
ContentRecommendation.IntentData	A										<section class="prog__container">Object used to encapsulate the data to be used to build the <pre><code>PendingIntent</code></pre> object associated with a given content recommendation, at the time this recommendation gets posted to the home Screen.<pre><code>public static class ContentRecommendation.IntentData</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.IntentData.html
ContentRecommendation.IntentType	A										<section class="prog__container"><pre><code>public static abstract @interface ContentRecommendation.IntentType</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.IntentType.html
RecommendationExtender	A										<section class="prog__container"><pre><code>public final class RecommendationExtender</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/RecommendationExtender.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/compat/R.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/coreui/R.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/coreutils/R.html
CustomTabsCallback	A										<section class="prog__container">A callback class for custom tabs client to get messages regarding events in their custom tabs.<pre><code>public class CustomTabsCallback</code></pre></section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsCallback.html
CustomTabsClient	A										<section class="prog__container">Class to communicate with a <pre><code>CustomTabsService</code></pre> and create <pre><code>CustomTabsSession</code></pre> from it.<pre><code>public class CustomTabsClient</code></pre></section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsClient.html
CustomTabsIntent.Builder	A										<section class="prog__container">Builder class for <pre><code>CustomTabsIntent</code></pre> objects.<pre><code>public static final class CustomTabsIntent.Builder</code></pre></section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsIntent.Builder.html
CustomTabsIntent	A										<section class="prog__container">Class holding the <pre><code>Intent</code></pre> and start bundle for a Custom Tabs Activity.<pre><code>public final class CustomTabsIntent</code></pre></section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsIntent.html
CustomTabsService	A										<section class="prog__container">Abstract service class for implementing Custom Tabs related functionality. The service should be responding to the action ACTION_CUSTOM_TABS_CONNECTION. This class should be used by implementers that want to provide Custom Tabs functionality, not by clients that want to launch Custom Tabs.<pre><code>public abstract class CustomTabsService</code></pre></section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsService.html
CustomTabsServiceConnection	A										<section class="prog__container">Abstract <pre><code>ServiceConnection</code></pre> to use while binding to a <pre><code>CustomTabsService</code></pre>. Any client implementing this is responsible for handling changes related with the lifetime of the connection like rebinding on disconnect.<pre><code>public abstract class CustomTabsServiceConnection</code></pre></section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsServiceConnection.html
CustomTabsSession	A										<section class="prog__container">A class to be used for Custom Tabs related communication. Clients that want to launch Custom Tabs can use this class exclusively to handle all related communication.<pre><code>public final class CustomTabsSession</code></pre></section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsSession.html
CustomTabsSessionToken	A										<section class="prog__container">Wrapper class that can be used as a unique identifier for a session. Also contains an accessor for the <pre><code>CustomTabsCallback</code></pre> for the session if there was any.<pre><code>public class CustomTabsSessionToken</code></pre></section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsSessionToken.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/customtabs/R.html
R.anim	A										<section class="prog__container"><pre><code>public static final class R.anim</code></pre></section>	https://developer.android.com/reference/android/support/design/R.anim.html
R.animator	A										<section class="prog__container"><pre><code>public static final class R.animator</code></pre></section>	https://developer.android.com/reference/android/support/design/R.animator.html
R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/design/R.attr.html
R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/design/R.color.html
R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/design/R.dimen.html
R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/support/design/R.drawable.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/design/R.html
R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/design/R.id.html
R.integer	A										<section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>	https://developer.android.com/reference/android/support/design/R.integer.html
R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/design/R.layout.html
R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/support/design/R.string.html
R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/design/R.style.html
R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/design/R.styleable.html
AppBarLayout.Behavior.DragCallback	A										<section class="prog__container">Callback to allow control over any <pre><code>AppBarLayout</code></pre> dragging.<pre><code>public static abstract class AppBarLayout.Behavior.DragCallback</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.Behavior.DragCallback.html
AppBarLayout.Behavior	A										<section class="prog__container">The default <pre><code>AppBarLayout.Behavior</code></pre> for <pre><code>AppBarLayout</code></pre>. Implements the necessary nested scroll handling with offsetting.<pre><code>public static class AppBarLayout.Behavior</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.Behavior.html
AppBarLayout.Behavior.SavedState	A										<section class="prog__container"><pre><code>protected static class AppBarLayout.Behavior.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.Behavior.SavedState.html
AppBarLayout	A										<section class="prog__container">AppBarLayout is a vertical <pre><code>LinearLayout</code></pre> which implements many of the features of material designs app bar concept, namely scrolling gestures.<pre><code>public class AppBarLayout</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.html
AppBarLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class AppBarLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.LayoutParams.html
AppBarLayout.OnOffsetChangedListener	A										<section class="prog__container">Interface definition for a callback to be invoked when an <pre><code>AppBarLayout</code></pre>'s vertical offset changes.<pre><code>public static interface AppBarLayout.OnOffsetChangedListener</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.OnOffsetChangedListener.html
AppBarLayout.ScrollingViewBehavior	A										<section class="prog__container">Behavior which should be used by <pre><code>View</code></pre>s which can scroll vertically and support nested scrolling to automatically scroll any <pre><code>AppBarLayout</code></pre> siblings.<pre><code>public static class AppBarLayout.ScrollingViewBehavior</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.ScrollingViewBehavior.html
BaseTransientBottomBar.BaseCallback	A										<section class="prog__container">Base class for <pre><code>BaseTransientBottomBar</code></pre> callbacks.<pre><code>public static abstract class BaseTransientBottomBar.BaseCallback</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BaseTransientBottomBar.BaseCallback.html
BaseTransientBottomBar.ContentViewCallback	A										<section class="prog__container">Interface that defines the behavior of the main content of a transient bottom bar.<pre><code>public static interface BaseTransientBottomBar.ContentViewCallback</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BaseTransientBottomBar.ContentViewCallback.html
BaseTransientBottomBar	A										<section class="prog__container">Base class for lightweight transient bars that are displayed along the bottom edge of the application window.<pre><code>public abstract class BaseTransientBottomBar</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BaseTransientBottomBar.html
BottomNavigationView	A										<section class="prog__container"><pre><code>public class BottomNavigationView</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BottomNavigationView.html
BottomNavigationView.OnNavigationItemSelectedListener	A										<section class="prog__container">Listener for handling events on bottom navigation items.<pre><code>public static interface BottomNavigationView.OnNavigationItemSelectedListener</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BottomNavigationView.OnNavigationItemSelectedListener.html
BottomSheetBehavior.BottomSheetCallback	A										<section class="prog__container">Callback for monitoring events about bottom sheets.<pre><code>public static abstract class BottomSheetBehavior.BottomSheetCallback</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BottomSheetBehavior.BottomSheetCallback.html
BottomSheetBehavior	A										<section class="prog__container">An interaction behavior plugin for a child view of <pre><code>CoordinatorLayout</code></pre> to make it work as a bottom sheet.<pre><code>public class BottomSheetBehavior</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BottomSheetBehavior.html
BottomSheetBehavior.SavedState	A										<section class="prog__container"><pre><code>protected static class BottomSheetBehavior.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BottomSheetBehavior.SavedState.html
BottomSheetDialog	A										<section class="prog__container">Base class for <pre><code>Dialog</code></pre>s styled as a bottom sheet.<pre><code>public class BottomSheetDialog</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BottomSheetDialog.html
BottomSheetDialogFragment	A										<section class="prog__container">Modal bottom sheet. This is a version of <pre><code>DialogFragment</code></pre> that shows a bottom sheet using <pre><code>BottomSheetDialog</code></pre> instead of a floating dialog.<pre><code>public class BottomSheetDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BottomSheetDialogFragment.html
CollapsingToolbarLayout	A										<section class="prog__container">CollapsingToolbarLayout is a wrapper for <pre><code>Toolbar</code></pre> which implements a collapsing app bar. It is designed to be used as a direct child of a <pre><code>AppBarLayout</code></pre>. CollapsingToolbarLayout contains the following features: <h4>Collapsing title</h4> A title which is larger when the layout is fully visible but collapses and becomes smaller as the layout is scrolled off screen. You can set the title to display via <pre><code>setTitle(CharSequence)</code></pre>. The title appearance can be tweaked via the <pre><code>collapsedTextAppearance</code></pre> and <pre><code>expandedTextAppearance</code></pre> attributes. <h4>Content scrim</h4> A full-bleed scrim which is show or hidden when the scroll position has hit a certain threshold. You can change this via <pre><code>setContentScrim(Drawable)</code></pre>. <h4>Status bar scrim</h4> A scrim which is show or hidden behind the status bar when the scroll position has hit a certain threshold. You can change this via <pre><code>setStatusBarScrim(Drawable)</code></pre>. This only works on <pre><code>LOLLIPOP</code></pre> devices when we set to fit system windows. <h4>Parallax scrolling children</h4> Child views can opt to be scrolled within this layout in a parallax fashion. See <pre><code>COLLAPSE_MODE_PARALLAX</code></pre> and <pre><code>setParallaxMultiplier(float)</code></pre>. <h4>Pinned position children</h4> Child views can opt to be pinned in space globally. This is useful when implementing a collapsing as it allows the <pre><code>Toolbar</code></pre> to be fixed in place even though this layout is moving. See <pre><code>COLLAPSE_MODE_PIN</code></pre>.<pre><code>public class CollapsingToolbarLayout</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/CollapsingToolbarLayout.html
CollapsingToolbarLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class CollapsingToolbarLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/CollapsingToolbarLayout.LayoutParams.html
CoordinatorLayout.Behavior	A										<section class="prog__container">Interaction behavior plugin for child views of <pre><code>CoordinatorLayout</code></pre>.<pre><code>public static abstract class CoordinatorLayout.Behavior</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/CoordinatorLayout.Behavior.html
CoordinatorLayout.DefaultBehavior	A										<section class="prog__container">Defines the default <pre><code>CoordinatorLayout.Behavior</code></pre> of a <pre><code>View</code></pre> class.<pre><code>public static abstract @interface CoordinatorLayout.DefaultBehavior</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/CoordinatorLayout.DefaultBehavior.html
CoordinatorLayout	A										<section class="prog__container">CoordinatorLayout is a super-powered <pre><code>FrameLayout</code></pre>.<pre><code>public class CoordinatorLayout</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/CoordinatorLayout.html
CoordinatorLayout.LayoutParams	A										<section class="prog__container">Parameters describing the desired layout for a child of a <pre><code>CoordinatorLayout</code></pre>.<pre><code>public static class CoordinatorLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/CoordinatorLayout.LayoutParams.html
CoordinatorLayout.SavedState	A										<section class="prog__container"><pre><code>protected static class CoordinatorLayout.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/CoordinatorLayout.SavedState.html
FloatingActionButton.Behavior	A										<section class="prog__container">Behavior designed for use with <pre><code>FloatingActionButton</code></pre> instances. Its main function is to move <pre><code>FloatingActionButton</code></pre> views so that any displayed <pre><code>Snackbar</code></pre>s do not cover them.<pre><code>public static class FloatingActionButton.Behavior</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/FloatingActionButton.Behavior.html
FloatingActionButton	A										<section class="prog__container">Floating action buttons are used for a special type of promoted action. They are distinguished by a circled icon floating above the UI and have special motion behaviors related to morphing, launching, and the transferring anchor point.<pre><code>public class FloatingActionButton</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/FloatingActionButton.html
FloatingActionButton.OnVisibilityChangedListener	A										<section class="prog__container">Callback to be invoked when the visibility of a FloatingActionButton changes.<pre><code>public static abstract class FloatingActionButton.OnVisibilityChangedListener</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/FloatingActionButton.OnVisibilityChangedListener.html
NavigationView	A										<section class="prog__container">Represents a standard navigation menu for application. The menu contents can be populated by a menu resource file.<pre><code>public class NavigationView</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/NavigationView.html
NavigationView.OnNavigationItemSelectedListener	A										<section class="prog__container">Listener for handling events on navigation items.<pre><code>public static interface NavigationView.OnNavigationItemSelectedListener</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/NavigationView.OnNavigationItemSelectedListener.html
NavigationView.SavedState	A										<section class="prog__container">User interface state that is stored by NavigationView for implementing onSaveInstanceState().<pre><code>public static class NavigationView.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/NavigationView.SavedState.html
Snackbar.Callback	A										<section class="prog__container">Callback class for <pre><code>Snackbar</code></pre> instances. Note: this class is here to provide backwards-compatible way for apps written before the existence of the base <pre><code>BaseTransientBottomBar</code></pre> class.<pre><code>public static class Snackbar.Callback</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/Snackbar.Callback.html
Snackbar	A										<section class="prog__container">Snackbars provide lightweight feedback about an operation. They show a brief message at the bottom of the screen on mobile and lower left on larger devices. Snackbars appear above all other elements on screen and only one can be displayed at a time.<pre><code>public final class Snackbar</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/Snackbar.html
SwipeDismissBehavior	A										<section class="prog__container">An interaction behavior plugin for child views of <pre><code>CoordinatorLayout</code></pre> to provide support for the 'swipe-to-dismiss' gesture.<pre><code>public class SwipeDismissBehavior</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/SwipeDismissBehavior.html
SwipeDismissBehavior.OnDismissListener	A										<section class="prog__container">Callback interface used to notify the application that the view has been dismissed.<pre><code>public static interface SwipeDismissBehavior.OnDismissListener</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/SwipeDismissBehavior.OnDismissListener.html
TabItem	A										<section class="prog__container">TabItem is a special 'view' which allows you to declare tab items for a <pre><code>TabLayout</code></pre> within a layout. This view is not actually added to TabLayout, it is just a dummy which allows setting of a tab items's text, icon and custom layout. See TabLayout for more information on how to use it.<pre><code>public final class TabItem</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/TabItem.html
TabLayout	A										<section class="prog__container">TabLayout provides a horizontal layout to display tabs.<pre><code>public class TabLayout</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/TabLayout.html
TabLayout.OnTabSelectedListener	A										<section class="prog__container">Callback interface invoked when a tab's selection state changes.<pre><code>public static interface TabLayout.OnTabSelectedListener</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/TabLayout.OnTabSelectedListener.html
TabLayout.Tab	A										<section class="prog__container">A tab in this layout. Instances can be created via <pre><code>newTab()</code></pre>.<pre><code>public static final class TabLayout.Tab</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/TabLayout.Tab.html
TabLayout.TabLayoutOnPageChangeListener	A										<section class="prog__container">A <pre><code>ViewPager.OnPageChangeListener</code></pre> class which contains the necessary calls back to the provided <pre><code>TabLayout</code></pre> so that the tab position is kept in sync.<pre><code>public static class TabLayout.TabLayoutOnPageChangeListener</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/TabLayout.TabLayoutOnPageChangeListener.html
TabLayout.ViewPagerOnTabSelectedListener	A										<section class="prog__container">A <pre><code>TabLayout.OnTabSelectedListener</code></pre> class which contains the necessary calls back to the provided <pre><code>ViewPager</code></pre> so that the tab position is kept in sync.<pre><code>public static class TabLayout.ViewPagerOnTabSelectedListener</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/TabLayout.ViewPagerOnTabSelectedListener.html
TextInputEditText	A										<section class="prog__container">A special sub-class of <pre><code>EditText</code></pre> designed for use as a child of <pre><code>TextInputLayout</code></pre>.<pre><code>public class TextInputEditText</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/TextInputEditText.html
TextInputLayout	A										<section class="prog__container">Layout which wraps an <pre><code>EditText</code></pre> (or descendant) to show a floating label when the hint is hidden due to the user inputting text.<pre><code>public class TextInputLayout</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/TextInputLayout.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/fragment/R.html
AnimatedVectorDrawableCompat	A										<section class="prog__container">For API 24 and above, this class is delegating to the framework's <pre><code>AnimatedVectorDrawable</code></pre>. For older API version, this class uses <pre><code>ObjectAnimator</code></pre> and <pre><code>AnimatorSet</code></pre> to animate the properties of a <pre><code>VectorDrawableCompat</code></pre> to create an animated drawable.<pre><code>public class AnimatedVectorDrawableCompat</code></pre></section>	https://developer.android.com/reference/android/support/graphics/drawable/AnimatedVectorDrawableCompat.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/graphics/drawable/R.html
VectorDrawableCompat	A										<section class="prog__container">For API 24 and above, this class is delegating to the framework's <pre><code>VectorDrawable</code></pre>. For older API version, this class lets you create a drawable based on an XML vector graphic.<pre><code>public class VectorDrawableCompat</code></pre></section>	https://developer.android.com/reference/android/support/graphics/drawable/VectorDrawableCompat.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/mediacompat/R.html
MultiDex	A										<section class="prog__container">MultiDex patches <pre><code>the application context class loader</code></pre> in order to load classes from more than one dex file. The primary <pre><code>classes.dex</code></pre> must contain the classes necessary for calling this class methods. Secondary dex files named classes2.dex, classes3.dex... found in the application apk will be added to the classloader after first call to <pre><code>install(Context)</code></pre>.<pre><code>public final class MultiDex</code></pre></section>	https://developer.android.com/reference/android/support/multidex/MultiDex.html
MultiDexApplication	A										<section class="prog__container">Minimal MultiDex capable application. To use the legacy multidex library there is 3 possibility: <ul> <li>Declare this class as the application in your AndroidManifest.xml.</li> <li>Have your <pre><code>Application</code></pre> extends this class.</li> <li>Have your <pre><code>Application</code></pre> override attachBaseContext starting with<br> <pre><code> protected void attachBaseContext(Context base) {<br> super.attachBaseContext(base);<br> MultiDex.install(this); </br></br></code></pre></br></li> <ul> </ul></ul><pre><code>public class MultiDexApplication</code></pre></section>	https://developer.android.com/reference/android/support/multidex/MultiDexApplication.html
PercentFrameLayout	A										<section class="prog__container">Subclass of <pre><code>FrameLayout</code></pre> that supports percentage based dimensions and margins. You can specify dimension or a margin of child by using attributes with "Percent" suffix. Follow this example: <pre class="prettyprint"> &lt;android.support.percent.PercentFrameLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:app="http://schemas.android.com/apk/res-auto" android:layout_width="match_parent" android:layout_height="match_parent"&gt; &lt;ImageView app:layout_widthPercent="50%" app:layout_heightPercent="50%" app:layout_marginTopPercent="25%" app:layout_marginLeftPercent="25%"/&gt; &lt;/android.support.percent.PercentFrameLayout&gt; </pre> The attributes that you can use are: <ul> <li><pre><code>layout_widthPercent</code></pre> <li><pre><code>layout_heightPercent</code></pre> <li><pre><code>layout_marginPercent</code></pre> <li><pre><code>layout_marginLeftPercent</code></pre> <li><pre><code>layout_marginTopPercent</code></pre> <li><pre><code>layout_marginRightPercent</code></pre> <li><pre><code>layout_marginBottomPercent</code></pre> <li><pre><code>layout_marginStartPercent</code></pre> <li><pre><code>layout_marginEndPercent</code></pre> <li><pre><code>layout_aspectRatio</code></pre> </li></li></li></li></li></li></li></li></li></li></ul> It is not necessary to specify <pre><code>layout_width/height</code></pre> if you specify <pre><code>layout_widthPercent.</code></pre> However, if you want the view to be able to take up more space than what percentage value permits, you can add <pre><code>layout_width/height="wrap_content"</code></pre>. In that case if the percentage size is too small for the View's content, it will be resized using <pre><code>wrap_content</code></pre> rule.<pre><code>public class PercentFrameLayout</code></pre></section>	https://developer.android.com/reference/android/support/percent/PercentFrameLayout.html
PercentFrameLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class PercentFrameLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/percent/PercentFrameLayout.LayoutParams.html
PercentLayoutHelper	A										<section class="prog__container">Helper for layouts that want to support percentage based dimensions.<pre><code>public class PercentLayoutHelper</code></pre></section>	https://developer.android.com/reference/android/support/percent/PercentLayoutHelper.html
PercentLayoutHelper.PercentLayoutInfo	A										<section class="prog__container">Container for information about percentage dimensions and margins. It acts as an extension for <pre><code>LayoutParams</code></pre>.<pre><code>public static class PercentLayoutHelper.PercentLayoutInfo</code></pre></section>	https://developer.android.com/reference/android/support/percent/PercentLayoutHelper.PercentLayoutInfo.html
PercentLayoutHelper.PercentLayoutParams	A										<section class="prog__container">If a layout wants to support percentage based dimensions and use this helper class, its <pre><code>LayoutParams</code></pre> subclass must implement this interface. Your <pre><code>LayoutParams</code></pre> subclass should contain an instance of <pre><code>PercentLayoutInfo</code></pre> and the implementation of this interface should be a simple accessor.<pre><code>public static interface PercentLayoutHelper.PercentLayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/percent/PercentLayoutHelper.PercentLayoutParams.html
PercentRelativeLayout	A										<section class="prog__container">Subclass of <pre><code>RelativeLayout</code></pre> that supports percentage based dimensions and margins. You can specify dimension or a margin of child by using attributes with "Percent" suffix. Follow this example: <pre class="prettyprint"> &lt;android.support.percent.PercentRelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:app="http://schemas.android.com/apk/res-auto" android:layout_width="match_parent" android:layout_height="match_parent"&gt; &lt;ImageView app:layout_widthPercent="50%" app:layout_heightPercent="50%" app:layout_marginTopPercent="25%" app:layout_marginLeftPercent="25%"/&gt; &lt;/android.support.percent.PercentRelativeLayout&gt; </pre> The attributes that you can use are: <ul> <li><pre><code>layout_widthPercent</code></pre> <li><pre><code>layout_heightPercent</code></pre> <li><pre><code>layout_marginPercent</code></pre> <li><pre><code>layout_marginLeftPercent</code></pre> <li><pre><code>layout_marginTopPercent</code></pre> <li><pre><code>layout_marginRightPercent</code></pre> <li><pre><code>layout_marginBottomPercent</code></pre> <li><pre><code>layout_marginStartPercent</code></pre> <li><pre><code>layout_marginEndPercent</code></pre> <li><pre><code>layout_aspectRatio</code></pre> </li></li></li></li></li></li></li></li></li></li></ul> It is not necessary to specify <pre><code>layout_width/height</code></pre> if you specify <pre><code>layout_widthPercent.</code></pre> However, if you want the view to be able to take up more space than what percentage value permits, you can add <pre><code>layout_width/height="wrap_content"</code></pre>. In that case if the percentage size is too small for the View's content, it will be resized using <pre><code>wrap_content</code></pre> rule.<pre><code>public class PercentRelativeLayout</code></pre></section>	https://developer.android.com/reference/android/support/percent/PercentRelativeLayout.html
PercentRelativeLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class PercentRelativeLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/percent/PercentRelativeLayout.LayoutParams.html
R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/percent/R.attr.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/percent/R.html
R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/percent/R.styleable.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/provider/R.html
AutoTransition	A										<section class="prog__container">Utility class for creating a default transition that automatically fades, moves, and resizes views during a scene change.<pre><code>public class AutoTransition</code></pre></section>	https://developer.android.com/reference/android/support/transition/AutoTransition.html
ChangeBounds	A										<section class="prog__container">This transition captures the layout bounds of target views before and after the scene change and animates those changes during the transition.<pre><code>public class ChangeBounds</code></pre></section>	https://developer.android.com/reference/android/support/transition/ChangeBounds.html
Fade	A										<section class="prog__container">This transition tracks changes to the visibility of target views in the start and end scenes and fades views in or out when they become visible or non-visible. Visibility is determined by both the <pre><code>setVisibility(int)</code></pre> state of the view as well as whether it is parented in the current view hierarchy.<pre><code>public class Fade</code></pre></section>	https://developer.android.com/reference/android/support/transition/Fade.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/transition/R.html
R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/transition/R.id.html
Scene	A										<section class="prog__container">A scene represents the collection of values that various properties in the View hierarchy will have when the scene is applied. A Scene can be configured to automatically run a Transition when it is applied, which will animate the various property changes that take place during the scene change.<pre><code>public class Scene</code></pre></section>	https://developer.android.com/reference/android/support/transition/Scene.html
Transition	A										<section class="prog__container">A Transition holds information about animations that will be run on its targets during a scene change. Subclasses of this abstract class may choreograph several child transitions (<pre><code>TransitionSet</code></pre> or they may perform custom animations themselves. Any Transition has two main jobs: (1) capture property values, and (2) play animations based on changes to captured property values. A custom transition knows what property values on View objects are of interest to it, and also knows how to animate changes to those values. For example, the <pre><code>Fade</code></pre> transition tracks changes to visibility-related properties and is able to construct and run animations that fade items in or out based on changes to those properties.<pre><code>public abstract class Transition</code></pre></section>	https://developer.android.com/reference/android/support/transition/Transition.html
Transition.TransitionListener	A										<section class="prog__container">A transition listener receives notifications from a transition. Notifications indicate transition lifecycle events.<pre><code>public static interface Transition.TransitionListener</code></pre></section>	https://developer.android.com/reference/android/support/transition/Transition.TransitionListener.html
TransitionManager	A										<section class="prog__container">This class manages the set of transitions that fire when there is a change of <pre><code>Scene</code></pre>. To use the manager, add scenes along with transition objects with calls to <pre><code>setTransition(Scene, Transition)</code></pre> or <pre><code>setTransition(Scene, Scene, Transition)</code></pre>. Setting specific transitions for scene changes is not required; by default, a Scene change will use <pre><code>AutoTransition</code></pre> to do something reasonable for most situations. Specifying other transitions for particular scene changes is only necessary if the application wants different transition behavior in these situations.<pre><code>public class TransitionManager</code></pre></section>	https://developer.android.com/reference/android/support/transition/TransitionManager.html
TransitionSet	A										<section class="prog__container">A TransitionSet is a parent of child transitions (including other TransitionSets). Using TransitionSets enables more complex choreography of transitions, where some sets play <pre><code>ORDERING_TOGETHER</code></pre> and others play <pre><code>ORDERING_SEQUENTIAL</code></pre>. For example, <pre><code>AutoTransition</code></pre> uses a TransitionSet to sequentially play a Fade(Fade.OUT), followed by a <pre><code>ChangeBounds</code></pre>, followed by a Fade(Fade.OUT) transition.<pre><code>public class TransitionSet</code></pre></section>	https://developer.android.com/reference/android/support/transition/TransitionSet.html
TransitionValues	A										<section class="prog__container">Data structure which holds cached values for the transition. The view field is the target which all of the values pertain to. The values field is a map which holds information for fields according to names selected by the transitions. These names should be unique to avoid clobbering values stored by other transitions, such as the convention project:transition_name:property_name. For example, the platform might store a property "alpha" in a transition "Fader" as "android:fader:alpha".<pre><code>public class TransitionValues</code></pre></section>	https://developer.android.com/reference/android/support/transition/TransitionValues.html
Visibility	A										<section class="prog__container">This transition tracks changes to the visibility of target views in the start and end scenes. Visibility is determined not just by the <pre><code>setVisibility(int)</code></pre> state of views, but also whether views exist in the current view hierarchy. The class is intended to be a utility for subclasses such as <pre><code>Fade</code></pre>, which use this visibility information to determine the specific animations to run when visibility changes occur. Subclasses should implement one or both of the methods <pre><code>onAppear(ViewGroup, TransitionValues, int, TransitionValues, int)</code></pre>, <pre><code>onDisappear(ViewGroup, TransitionValues, int, TransitionValues, int)</code></pre>,<pre><code>public abstract class Visibility</code></pre></section>	https://developer.android.com/reference/android/support/transition/Visibility.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v13/R.html
ActivityCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Activity</code></pre> introduced after API level 13 in a backwards compatible fashion.<pre><code>public class ActivityCompat</code></pre></section>	https://developer.android.com/reference/android/support/v13/app/ActivityCompat.html
FragmentCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Fragment</code></pre> introduced after API level 13 in a backwards compatible fashion.<pre><code>public class FragmentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v13/app/FragmentCompat.html
FragmentCompat.OnRequestPermissionsResultCallback	A										<section class="prog__container">This interface is the contract for receiving the results for permission requests.<pre><code>public static interface FragmentCompat.OnRequestPermissionsResultCallback</code></pre></section>	https://developer.android.com/reference/android/support/v13/app/FragmentCompat.OnRequestPermissionsResultCallback.html
FragmentPagerAdapter	A										<section class="prog__container">Implementation of <pre><code>PagerAdapter</code></pre> that represents each page as a <pre><code>Fragment</code></pre> that is persistently kept in the fragment manager as long as the user can return to the page.<pre><code>public abstract class FragmentPagerAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v13/app/FragmentPagerAdapter.html
FragmentStatePagerAdapter	A										<section class="prog__container">Implementation of <pre><code>PagerAdapter</code></pre> that uses a <pre><code>Fragment</code></pre> to manage each page. This class also handles saving and restoring of fragment's state.<pre><code>public abstract class FragmentStatePagerAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v13/app/FragmentStatePagerAdapter.html
FragmentTabHost	A										<section class="prog__container">Version of <pre><code>FragmentTabHost</code></pre> that can be used with the platform <pre><code>Fragment</code></pre> APIs. You will not normally use this, instead using action bar tabs.<pre><code>public class FragmentTabHost</code></pre></section>	https://developer.android.com/reference/android/support/v13/app/FragmentTabHost.html
DragAndDropPermissionsCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>DragAndDropPermissions</code></pre> introduced after API level 13 in a backwards compatible fashion.<pre><code>public final class DragAndDropPermissionsCompat</code></pre></section>	https://developer.android.com/reference/android/support/v13/view/DragAndDropPermissionsCompat.html
DragStartHelper	A										<section class="prog__container">DragStartHelper is a utility class for implementing drag and drop support.<pre><code>public class DragStartHelper</code></pre></section>	https://developer.android.com/reference/android/support/v13/view/DragStartHelper.html
DragStartHelper.OnDragStartListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a drag start gesture is detected.<pre><code>public static interface DragStartHelper.OnDragStartListener</code></pre></section>	https://developer.android.com/reference/android/support/v13/view/DragStartHelper.OnDragStartListener.html
ViewCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>View</code></pre> introduced after API level 13 in a backwards compatible fashion.<pre><code>public class ViewCompat</code></pre></section>	https://developer.android.com/reference/android/support/v13/view/ViewCompat.html
EditorInfoCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>EditorInfo</code></pre> introduced after API level 13 in a backwards compatible fashion.<pre><code>public final class EditorInfoCompat</code></pre></section>	https://developer.android.com/reference/android/support/v13/view/inputmethod/EditorInfoCompat.html
InputConnectionCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>InputConnection</code></pre> introduced after API level 13 in a backwards compatible fashion.<pre><code>public final class InputConnectionCompat</code></pre></section>	https://developer.android.com/reference/android/support/v13/view/inputmethod/InputConnectionCompat.html
InputConnectionCompat.OnCommitContentListener	A										<section class="prog__container">Listener for commitContent method call, in a backwards compatible fashion.<pre><code>public static interface InputConnectionCompat.OnCommitContentListener</code></pre></section>	https://developer.android.com/reference/android/support/v13/view/inputmethod/InputConnectionCompat.OnCommitContentListener.html
InputContentInfoCompat	A										<section class="prog__container">Helper for accessing features in InputContentInfo introduced after API level 13 in a backwards compatible fashion.<pre><code>public final class InputContentInfoCompat</code></pre></section>	https://developer.android.com/reference/android/support/v13/view/inputmethod/InputContentInfoCompat.html
EditTextPreferenceDialogFragment	A										<section class="prog__container"><pre><code>public class EditTextPreferenceDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/EditTextPreferenceDialogFragment.html
ListPreferenceDialogFragment	A										<section class="prog__container"><pre><code>public class ListPreferenceDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/ListPreferenceDialogFragment.html
MultiSelectListPreference	A										<section class="prog__container">A <pre><code>Preference</code></pre> that displays a list of entries as a dialog.<pre><code>public class MultiSelectListPreference</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/MultiSelectListPreference.html
MultiSelectListPreferenceDialogFragment	A										<section class="prog__container"><pre><code>public class MultiSelectListPreferenceDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/MultiSelectListPreferenceDialogFragment.html
PreferenceDialogFragment	A										<section class="prog__container">Abstract base class which presents a dialog associated with a <pre><code>DialogPreference</code></pre>. Since the preference object may not be available during fragment re-creation, the necessary information for displaying the dialog is read once during the initial call to <pre><code>onCreate(Bundle)</code></pre> and saved/restored in the saved instance state. Custom subclasses should also follow this pattern.<pre><code>public abstract class PreferenceDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/PreferenceDialogFragment.html
PreferenceFragment	A										<section class="prog__container">Shows a hierarchy of <pre><code>Preference</code></pre> objects as lists. These preferences will automatically save to <pre><code>SharedPreferences</code></pre> as the user interacts with them. To retrieve an instance of <pre><code>SharedPreferences</code></pre> that the preference hierarchy in this fragment will use, call <pre><code>getDefaultSharedPreferences(android.content.Context)</code></pre> with a context in the same package as this fragment.<pre><code>public abstract class PreferenceFragment</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.html
PreferenceFragment.OnPreferenceDisplayDialogCallback	A										<section class="prog__container"><pre><code>public static interface PreferenceFragment.OnPreferenceDisplayDialogCallback</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.OnPreferenceDisplayDialogCallback.html
PreferenceFragment.OnPreferenceStartFragmentCallback	A										<section class="prog__container">Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a specified fragment.<pre><code>public static interface PreferenceFragment.OnPreferenceStartFragmentCallback</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.OnPreferenceStartFragmentCallback.html
PreferenceFragment.OnPreferenceStartScreenCallback	A										<section class="prog__container">Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a new screen of preferences.<pre><code>public static interface PreferenceFragment.OnPreferenceStartScreenCallback</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.OnPreferenceStartScreenCallback.html
R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.attr.html
R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.color.html
R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.drawable.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.html
R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.id.html
R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.layout.html
R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.style.html
R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.styleable.html
SwitchPreference	A										<section class="prog__container">A <pre><code>Preference</code></pre> that provides a two-state toggleable option.<pre><code>public class SwitchPreference</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/SwitchPreference.html
android.support.v17.leanback	A										<section class="prog__container">Support classes for building Leanback user experiences.</section>	https://developer.android.com/reference/android/support/v17/leanback/package-summary.html
R.animator	A										<section class="prog__container"><pre><code>public static final class R.animator</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.animator.html
R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.attr.html
R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.color.html
R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.dimen.html
R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.drawable.html
R.fraction	A										<section class="prog__container"><pre><code>public static final class R.fraction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.fraction.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.html
R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.id.html
R.integer	A										<section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.integer.html
R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.layout.html
R.raw	A										<section class="prog__container"><pre><code>public static final class R.raw</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.raw.html
R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.string.html
R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.style.html
R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.styleable.html
R.transition	A										<section class="prog__container"><pre><code>public static final class R.transition</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.transition.html
BackgroundManager	A										<section class="prog__container">Supports background image continuity between multiple Activities.<pre><code>public final class BackgroundManager</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BackgroundManager.html
BrandedFragment	A										<section class="prog__container">Fragment class for managing search and branding using a view that implements <pre><code>TitleViewAdapter.Provider</code></pre>.<pre><code>public class BrandedFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrandedFragment.html
BrandedSupportFragment	A										<section class="prog__container">Fragment class for managing search and branding using a view that implements <pre><code>TitleViewAdapter.Provider</code></pre>.<pre><code>public class BrandedSupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrandedSupportFragment.html
BrowseFragment.BrowseTransitionListener	A										<section class="prog__container">Listener for transitions between browse headers and rows.<pre><code>public static class BrowseFragment.BrowseTransitionListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.BrowseTransitionListener.html
BrowseFragment.FragmentFactory	A										<section class="prog__container">Factory class responsible for creating fragment given the current item. <pre><code>ListRow</code></pre> should returns <pre><code>RowsFragment</code></pre> or it's subclass whereas <pre><code>PageRow</code></pre> can return any fragment class.<pre><code>public static abstract class BrowseFragment.FragmentFactory</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.FragmentFactory.html
BrowseFragment.FragmentHost	A										<section class="prog__container">Possible set of actions that <pre><code>BrowseFragment</code></pre> exposes to clients. Custom fragments can interact with <pre><code>BrowseFragment</code></pre> using this interface.<pre><code>public static interface BrowseFragment.FragmentHost</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.FragmentHost.html
BrowseFragment	A										<section class="prog__container">A fragment for creating Leanback browse screens. It is composed of a RowsFragment and a HeadersFragment.<pre><code>public class BrowseFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.html
BrowseFragment.ListRowFragmentFactory	A										<section class="prog__container">FragmentFactory implementation for <pre><code>ListRow</code></pre>.<pre><code>public static class BrowseFragment.ListRowFragmentFactory</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.ListRowFragmentFactory.html
BrowseFragment.MainFragmentAdapter	A										<section class="prog__container">Interface that defines the interaction between <pre><code>BrowseFragment</code></pre> and it's main content fragment. The key method is <pre><code>getFragment()</code></pre>, it will be used to get the fragment to be shown in the content section. Clients can provide any implementation of fragment and customize it's interaction with <pre><code>BrowseFragment</code></pre> by overriding the necessary methods.<pre><code>public static class BrowseFragment.MainFragmentAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.MainFragmentAdapter.html
BrowseFragment.MainFragmentAdapterProvider	A										<section class="prog__container">Interface to be implemented by all fragments for providing an instance of <pre><code>BrowseFragment.MainFragmentAdapter</code></pre>. Both <pre><code>RowsFragment</code></pre> and custom fragment provided against <pre><code>PageRow</code></pre> will need to implement this interface.<pre><code>public static interface BrowseFragment.MainFragmentAdapterProvider</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.MainFragmentAdapterProvider.html
BrowseFragment.MainFragmentAdapterRegistry	A										<section class="prog__container">Registry class maintaining the mapping of <pre><code>Row</code></pre> subclasses to <pre><code>BrowseFragment.FragmentFactory</code></pre>. BrowseRowFragment automatically registers <pre><code>BrowseFragment.ListRowFragmentFactory</code></pre> for handling <pre><code>ListRow</code></pre>. Developers can override that and also if they want to use custom fragment, they can register a custom <pre><code>BrowseFragment.FragmentFactory</code></pre> against <pre><code>PageRow</code></pre>.<pre><code>public static final class BrowseFragment.MainFragmentAdapterRegistry</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.MainFragmentAdapterRegistry.html
BrowseFragment.MainFragmentRowsAdapter	A										<section class="prog__container">This is used to pass information to <pre><code>RowsFragment</code></pre> or its subclasses. <pre><code>BrowseFragment</code></pre> uses this interface to pass row based interaction events to the target fragment.<pre><code>public static class BrowseFragment.MainFragmentRowsAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.MainFragmentRowsAdapter.html
BrowseFragment.MainFragmentRowsAdapterProvider	A										<section class="prog__container">Interface to be implemented by <pre><code>RowsFragment</code></pre> and it's subclasses for providing an instance of <pre><code>BrowseFragment.MainFragmentRowsAdapter</code></pre>.<pre><code>public static interface BrowseFragment.MainFragmentRowsAdapterProvider</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.MainFragmentRowsAdapterProvider.html
BrowseSupportFragment.BrowseTransitionListener	A										<section class="prog__container">Listener for transitions between browse headers and rows.<pre><code>public static class BrowseSupportFragment.BrowseTransitionListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.BrowseTransitionListener.html
BrowseSupportFragment.FragmentFactory	A										<section class="prog__container">Factory class responsible for creating fragment given the current item. <pre><code>ListRow</code></pre> should returns <pre><code>RowsSupportFragment</code></pre> or it's subclass whereas <pre><code>PageRow</code></pre> can return any fragment class.<pre><code>public static abstract class BrowseSupportFragment.FragmentFactory</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.FragmentFactory.html
BrowseSupportFragment.FragmentHost	A										<section class="prog__container">Possible set of actions that <pre><code>BrowseSupportFragment</code></pre> exposes to clients. Custom fragments can interact with <pre><code>BrowseSupportFragment</code></pre> using this interface.<pre><code>public static interface BrowseSupportFragment.FragmentHost</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.FragmentHost.html
BrowseSupportFragment	A										<section class="prog__container">A fragment for creating Leanback browse screens. It is composed of a RowsSupportFragment and a HeadersSupportFragment.<pre><code>public class BrowseSupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.html
BrowseSupportFragment.ListRowFragmentFactory	A										<section class="prog__container">FragmentFactory implementation for <pre><code>ListRow</code></pre>.<pre><code>public static class BrowseSupportFragment.ListRowFragmentFactory</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.ListRowFragmentFactory.html
BrowseSupportFragment.MainFragmentAdapter	A										<section class="prog__container">Interface that defines the interaction between <pre><code>BrowseSupportFragment</code></pre> and it's main content fragment. The key method is <pre><code>getFragment()</code></pre>, it will be used to get the fragment to be shown in the content section. Clients can provide any implementation of fragment and customize it's interaction with <pre><code>BrowseSupportFragment</code></pre> by overriding the necessary methods.<pre><code>public static class BrowseSupportFragment.MainFragmentAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.MainFragmentAdapter.html
BrowseSupportFragment.MainFragmentAdapterProvider	A										<section class="prog__container">Interface to be implemented by all fragments for providing an instance of <pre><code>BrowseSupportFragment.MainFragmentAdapter</code></pre>. Both <pre><code>RowsSupportFragment</code></pre> and custom fragment provided against <pre><code>PageRow</code></pre> will need to implement this interface.<pre><code>public static interface BrowseSupportFragment.MainFragmentAdapterProvider</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.MainFragmentAdapterProvider.html
BrowseSupportFragment.MainFragmentAdapterRegistry	A										<section class="prog__container">Registry class maintaining the mapping of <pre><code>Row</code></pre> subclasses to <pre><code>BrowseSupportFragment.FragmentFactory</code></pre>. BrowseRowFragment automatically registers <pre><code>BrowseSupportFragment.ListRowFragmentFactory</code></pre> for handling <pre><code>ListRow</code></pre>. Developers can override that and also if they want to use custom fragment, they can register a custom <pre><code>BrowseSupportFragment.FragmentFactory</code></pre> against <pre><code>PageRow</code></pre>.<pre><code>public static final class BrowseSupportFragment.MainFragmentAdapterRegistry</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.MainFragmentAdapterRegistry.html
BrowseSupportFragment.MainFragmentRowsAdapter	A										<section class="prog__container">This is used to pass information to <pre><code>RowsSupportFragment</code></pre> or its subclasses. <pre><code>BrowseSupportFragment</code></pre> uses this interface to pass row based interaction events to the target fragment.<pre><code>public static class BrowseSupportFragment.MainFragmentRowsAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.MainFragmentRowsAdapter.html
BrowseSupportFragment.MainFragmentRowsAdapterProvider	A										<section class="prog__container">Interface to be implemented by <pre><code>RowsSupportFragment</code></pre> and it's subclasses for providing an instance of <pre><code>BrowseSupportFragment.MainFragmentRowsAdapter</code></pre>.<pre><code>public static interface BrowseSupportFragment.MainFragmentRowsAdapterProvider</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.MainFragmentRowsAdapterProvider.html
DetailsFragment	A										<section class="prog__container">A fragment for creating Leanback details screens.<pre><code>public class DetailsFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/DetailsFragment.html
DetailsSupportFragment	A										<section class="prog__container">A fragment for creating Leanback details screens.<pre><code>public class DetailsSupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/DetailsSupportFragment.html
ErrorFragment	A										<section class="prog__container">A fragment for displaying an error indication.<pre><code>public class ErrorFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/ErrorFragment.html
ErrorSupportFragment	A										<section class="prog__container">A fragment for displaying an error indication.<pre><code>public class ErrorSupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/ErrorSupportFragment.html
GuidedStepFragment	A										<section class="prog__container">A GuidedStepFragment is used to guide the user through a decision or series of decisions. It is composed of a guidance view on the left and a view on the right containing a list of possible actions.<pre><code>public class GuidedStepFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/GuidedStepFragment.html
GuidedStepSupportFragment	A										<section class="prog__container">A GuidedStepSupportFragment is used to guide the user through a decision or series of decisions. It is composed of a guidance view on the left and a view on the right containing a list of possible actions.<pre><code>public class GuidedStepSupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/GuidedStepSupportFragment.html
HeadersFragment	A										<section class="prog__container">An internal fragment containing a list of row headers.<pre><code>public class HeadersFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersFragment.html
HeadersFragment.OnHeaderClickedListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a header item is clicked.<pre><code>public static interface HeadersFragment.OnHeaderClickedListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersFragment.OnHeaderClickedListener.html
HeadersFragment.OnHeaderViewSelectedListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a header item is selected.<pre><code>public static interface HeadersFragment.OnHeaderViewSelectedListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersFragment.OnHeaderViewSelectedListener.html
HeadersSupportFragment	A										<section class="prog__container">An internal fragment containing a list of row headers.<pre><code>public class HeadersSupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersSupportFragment.html
HeadersSupportFragment.OnHeaderClickedListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a header item is clicked.<pre><code>public static interface HeadersSupportFragment.OnHeaderClickedListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersSupportFragment.OnHeaderClickedListener.html
HeadersSupportFragment.OnHeaderViewSelectedListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a header item is selected.<pre><code>public static interface HeadersSupportFragment.OnHeaderViewSelectedListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersSupportFragment.OnHeaderViewSelectedListener.html
MediaControllerGlue	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Use <pre><code>MediaControllerGlue</code></pre>.<pre><code>public abstract class MediaControllerGlue</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/MediaControllerGlue.html
OnboardingFragment	A										<section class="prog__container">An OnboardingFragment provides a common and simple way to build onboarding screen for applications.<pre><code>public abstract class OnboardingFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/OnboardingFragment.html
OnboardingSupportFragment	A										<section class="prog__container">An OnboardingSupportFragment provides a common and simple way to build onboarding screen for applications.<pre><code>public abstract class OnboardingSupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/OnboardingSupportFragment.html
android.support.v17.leanback.app	A										<section class="prog__container">Support classes providing high level Leanback user interface building blocks: fragments and helpers.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/package-summary.html
PlaybackControlGlue	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Use <pre><code>PlaybackControlGlue</code></pre><pre><code>public abstract class PlaybackControlGlue</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackControlGlue.html
PlaybackControlGlue.InputEventHandler	A										<section class="prog__container"><p class="caution"><strong> This interface is deprecated.</strong><br/> Use <pre><code>setOnKeyInterceptListener(View.OnKeyListener)</code></pre>.<pre><code>public static interface PlaybackControlGlue.InputEventHandler</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackControlGlue.InputEventHandler.html
PlaybackControlSupportGlue	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Use <pre><code>PlaybackControlGlue</code></pre> and <pre><code>PlaybackSupportFragmentGlueHost</code></pre> for <pre><code>PlaybackSupportFragment</code></pre>.<pre><code>public abstract class PlaybackControlSupportGlue</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackControlSupportGlue.html
PlaybackFragment	A										<section class="prog__container">A fragment for displaying playback controls and related content.<pre><code>public class PlaybackFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackFragment.html
PlaybackFragmentGlueHost	A										<section class="prog__container"><pre><code>PlaybackGlueHost</code></pre> implementation the interaction between this class and <pre><code>PlaybackFragment</code></pre>.<pre><code>public class PlaybackFragmentGlueHost</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackFragmentGlueHost.html
PlaybackOverlayFragment	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Use <pre><code>PlaybackFragment</code></pre>.<pre><code>public class PlaybackOverlayFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlayFragment.html
PlaybackOverlayFragment.InputEventHandler	A										<section class="prog__container"><pre><code>public static interface PlaybackOverlayFragment.InputEventHandler</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlayFragment.InputEventHandler.html
PlaybackOverlayFragment.OnFadeCompleteListener	A										<section class="prog__container">Listener allowing the application to receive notification of fade in and/or fade out completion events.<pre><code>public static class PlaybackOverlayFragment.OnFadeCompleteListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlayFragment.OnFadeCompleteListener.html
PlaybackOverlaySupportFragment	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Use <pre><code>PlaybackSupportFragment</code></pre>.<pre><code>public class PlaybackOverlaySupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlaySupportFragment.html
PlaybackOverlaySupportFragment.InputEventHandler	A										<section class="prog__container"><pre><code>public static interface PlaybackOverlaySupportFragment.InputEventHandler</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlaySupportFragment.InputEventHandler.html
PlaybackOverlaySupportFragment.OnFadeCompleteListener	A										<section class="prog__container">Listener allowing the application to receive notification of fade in and/or fade out completion events.<pre><code>public static class PlaybackOverlaySupportFragment.OnFadeCompleteListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlaySupportFragment.OnFadeCompleteListener.html
PlaybackSupportFragment	A										<section class="prog__container">A fragment for displaying playback controls and related content.<pre><code>public class PlaybackSupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackSupportFragment.html
PlaybackSupportFragmentGlueHost	A										<section class="prog__container"><pre><code>PlaybackGlueHost</code></pre> implementation the interaction between this class and <pre><code>PlaybackSupportFragment</code></pre>.<pre><code>public class PlaybackSupportFragmentGlueHost</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackSupportFragmentGlueHost.html
ProgressBarManager	A										<section class="prog__container">Manager for showing/hiding progress bar widget. This class lets user specify an initial delay after which the progress bar will be shown. This is currently being used in <pre><code>BrowseFragment</code></pre> &amp; <pre><code>VerticalGridFragment</code></pre> to show <pre><code>ProgressBar</code></pre> while the data is being loaded.<pre><code>public final class ProgressBarManager</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/ProgressBarManager.html
RowsFragment	A										<section class="prog__container">An ordered set of rows of leanback widgets.<pre><code>public class RowsFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsFragment.html
RowsFragment.MainFragmentAdapter	A										<section class="prog__container"><pre><code>public static class RowsFragment.MainFragmentAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsFragment.MainFragmentAdapter.html
RowsFragment.MainFragmentRowsAdapter	A										<section class="prog__container"><pre><code>public static class RowsFragment.MainFragmentRowsAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsFragment.MainFragmentRowsAdapter.html
RowsSupportFragment	A										<section class="prog__container">An ordered set of rows of leanback widgets.<pre><code>public class RowsSupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsSupportFragment.html
RowsSupportFragment.MainFragmentAdapter	A										<section class="prog__container"><pre><code>public static class RowsSupportFragment.MainFragmentAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsSupportFragment.MainFragmentAdapter.html
RowsSupportFragment.MainFragmentRowsAdapter	A										<section class="prog__container"><pre><code>public static class RowsSupportFragment.MainFragmentRowsAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsSupportFragment.MainFragmentRowsAdapter.html
SearchFragment	A										<section class="prog__container">A fragment to handle searches. An application will supply an implementation of the <pre><code>SearchFragment.SearchResultProvider</code></pre> interface to handle the search and return an <pre><code>ObjectAdapter</code></pre> containing the results. The results are rendered into a <pre><code>RowsFragment</code></pre>, in the same way that they are in a <pre><code>BrowseFragment</code></pre>.<pre><code>public class SearchFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/SearchFragment.html
SearchFragment.SearchResultProvider	A										<section class="prog__container">Search API to be provided by the application.<pre><code>public static interface SearchFragment.SearchResultProvider</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/SearchFragment.SearchResultProvider.html
SearchSupportFragment	A										<section class="prog__container">A fragment to handle searches. An application will supply an implementation of the <pre><code>SearchSupportFragment.SearchResultProvider</code></pre> interface to handle the search and return an <pre><code>ObjectAdapter</code></pre> containing the results. The results are rendered into a <pre><code>RowsSupportFragment</code></pre>, in the same way that they are in a <pre><code>BrowseSupportFragment</code></pre>.<pre><code>public class SearchSupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/SearchSupportFragment.html
SearchSupportFragment.SearchResultProvider	A										<section class="prog__container">Search API to be provided by the application.<pre><code>public static interface SearchSupportFragment.SearchResultProvider</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/SearchSupportFragment.SearchResultProvider.html
VerticalGridFragment	A										<section class="prog__container">A fragment for creating leanback vertical grids.<pre><code>public class VerticalGridFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/VerticalGridFragment.html
VerticalGridSupportFragment	A										<section class="prog__container">A fragment for creating leanback vertical grids.<pre><code>public class VerticalGridSupportFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/VerticalGridSupportFragment.html
CursorMapper	A										<section class="prog__container">Abstract class used to convert the current <pre><code>Cursor</code></pre> row to a single object.<pre><code>public abstract class CursorMapper</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/database/CursorMapper.html
ColorFilterCache	A										<section class="prog__container">Cache of <pre><code>ColorFilter</code></pre>s for a given color at different alpha levels.<pre><code>public final class ColorFilterCache</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/graphics/ColorFilterCache.html
ColorFilterDimmer	A										<section class="prog__container">Helper class for applying a dim level to a View. The ColorFilterDimmer uses a ColorFilter in a Paint object to dim the view according to the currently active level.<pre><code>public final class ColorFilterDimmer</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/graphics/ColorFilterDimmer.html
ColorOverlayDimmer	A										<section class="prog__container">Helper class for assigning a dim color to Paint. It holds the alpha value for the current active level.<pre><code>public final class ColorOverlayDimmer</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/graphics/ColorOverlayDimmer.html
Settings	A										<section class="prog__container">Provides various preferences affecting Leanback runtime behavior.<pre><code>public class Settings</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/system/Settings.html
AbstractDetailsDescriptionPresenter	A										<section class="prog__container">An abstract <pre><code>Presenter</code></pre> for rendering a detailed description of an item. Typically this Presenter will be used in a <pre><code>DetailsOverviewRowPresenter</code></pre> or <pre><code>PlaybackControlsRowPresenter</code></pre>.<pre><code>public abstract class AbstractDetailsDescriptionPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractDetailsDescriptionPresenter.html
AbstractDetailsDescriptionPresenter.ViewHolder	A										<section class="prog__container">The ViewHolder for the <pre><code>AbstractDetailsDescriptionPresenter</code></pre>.<pre><code>public static class AbstractDetailsDescriptionPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractDetailsDescriptionPresenter.ViewHolder.html
AbstractMediaItemPresenter	A										<section class="prog__container">Abstract <pre><code>Presenter</code></pre> class for rendering media items in a playlist format. Media item data provided for this presenter can implement the interface <pre><code>MultiActionsProvider</code></pre>, if the media rows wish to contain custom actions. Media items in the playlist are arranged as a vertical list with each row holding each media item's details provided by the user of this class and a set of optional custom actions. Each media item's details and actions are separately focusable. The appearance of each one of the media row components can be controlled through setting theme's attributes. Each media item row provides a view flipper for switching between different views depending on the playback state. A default layout is provided by this presenter for rendering different playback states, or a custom layout can be provided by the user by overriding the playbackMediaItemNumberViewFlipperLayout attribute in the currently specified theme. Subclasses should also override <pre><code>getMediaPlayState(Object)</code></pre> to provide the current play state of their media item model in case they wish to use different views depending on the playback state. The presenter can optionally provide line separators between media rows by setting <pre><code>setHasMediaRowSeparator(boolean)</code></pre> to true.<pre><code>public abstract class AbstractMediaItemPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractMediaItemPresenter.html
AbstractMediaItemPresenter.ViewHolder	A										<section class="prog__container">The ViewHolder for the <pre><code>AbstractMediaItemPresenter</code></pre>. It references different views that place different meta-data corresponding to a media item details, actions, selector, listeners, and presenters,<pre><code>public static class AbstractMediaItemPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractMediaItemPresenter.ViewHolder.html
AbstractMediaListHeaderPresenter	A										<section class="prog__container">Abstract presenter class for rendering the header for a list of media items in a playlist. The presenter creates a <pre><code>AbstractMediaListHeaderPresenter.ViewHolder</code></pre> for the TextView holding the header text.<pre><code>public abstract class AbstractMediaListHeaderPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractMediaListHeaderPresenter.html
AbstractMediaListHeaderPresenter.ViewHolder	A										<section class="prog__container">The ViewHolder for the <pre><code>AbstractMediaListHeaderPresenter</code></pre>. It references the TextView that places the header text provided by the data binder.<pre><code>public static class AbstractMediaListHeaderPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractMediaListHeaderPresenter.ViewHolder.html
Action	A										<section class="prog__container">An action contains one or two lines of text, an optional image and an optional id. It may also be invoked by one or more keycodes.<pre><code>public class Action</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/Action.html
ArrayObjectAdapter	A										<section class="prog__container">An <pre><code>ObjectAdapter</code></pre> implemented with an <pre><code>ArrayList</code></pre>.<pre><code>public class ArrayObjectAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ArrayObjectAdapter.html
BaseCardView	A										<section class="prog__container">A card style layout that responds to certain state changes. It arranges its children in a vertical column, with different regions becoming visible at different times.<pre><code>public class BaseCardView</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BaseCardView.html
BaseCardView.LayoutParams	A										<section class="prog__container">Per-child layout information associated with BaseCardView.<pre><code>public static class BaseCardView.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BaseCardView.LayoutParams.html
BaseOnItemViewClickedListener	A										<section class="prog__container">Interface for receiving notification when an item view holder is clicked.<pre><code>public interface BaseOnItemViewClickedListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BaseOnItemViewClickedListener.html
BaseOnItemViewSelectedListener	A										<section class="prog__container">Interface for receiving notification when a row or item becomes selected. The concept of current selection is different than focus. A row or item can be selected without having focus; for example, when a row header view gains focus then the corresponding row view becomes selected.<pre><code>public interface BaseOnItemViewSelectedListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BaseOnItemViewSelectedListener.html
BrowseFrameLayout	A										<section class="prog__container">A ViewGroup for managing focus behavior between overlapping views.<pre><code>public class BrowseFrameLayout</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BrowseFrameLayout.html
BrowseFrameLayout.OnChildFocusListener	A										<section class="prog__container">Interface for managing child focus in a BrowseFrameLayout.<pre><code>public static interface BrowseFrameLayout.OnChildFocusListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BrowseFrameLayout.OnChildFocusListener.html
BrowseFrameLayout.OnFocusSearchListener	A										<section class="prog__container">Interface for selecting a focused view in a BrowseFrameLayout when the system focus finder couldn't find a view to focus.<pre><code>public static interface BrowseFrameLayout.OnFocusSearchListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BrowseFrameLayout.OnFocusSearchListener.html
ClassPresenterSelector	A										<section class="prog__container">A ClassPresenterSelector selects a <pre><code>Presenter</code></pre> based on the item's Java class.<pre><code>public final class ClassPresenterSelector</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ClassPresenterSelector.html
ControlButtonPresenterSelector	A										<section class="prog__container">Displays primary and secondary controls for a <pre><code>PlaybackControlsRow</code></pre>. Binds to items of type <pre><code>Action</code></pre>.<pre><code>public class ControlButtonPresenterSelector</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ControlButtonPresenterSelector.html
CursorObjectAdapter	A										<section class="prog__container">An <pre><code>ObjectAdapter</code></pre> implemented with a <pre><code>Cursor</code></pre>.<pre><code>public class CursorObjectAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/CursorObjectAdapter.html
DetailsOverviewLogoPresenter	A										<section class="prog__container">Presenter that responsible to create a ImageView and bind to DetailsOverviewRow. The default implementation uses <pre><code>getImageDrawable()</code></pre> and binds to <pre><code>ImageView</code></pre>.<pre><code>public class DetailsOverviewLogoPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewLogoPresenter.html
DetailsOverviewLogoPresenter.ViewHolder	A										<section class="prog__container">ViewHolder for Logo view of DetailsOverviewRow.<pre><code>public static class DetailsOverviewLogoPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewLogoPresenter.ViewHolder.html
DetailsOverviewRow	A										<section class="prog__container">An overview <pre><code>Row</code></pre> for a details fragment. This row consists of an image, a description view, and optionally a series of <pre><code>Action</code></pre>s that can be taken for the item. <h3>Actions</h3> Application uses <pre><code>setActionsAdapter(ObjectAdapter)</code></pre> to set actions on the overview row. <pre><code>SparseArrayObjectAdapter</code></pre> is recommended for easily updating actions while maintaining the order. The application can add or remove actions on the UI thread after the row is bound to a view. <h3>Updating main item</h3> After the row is bound to a view, the application may call <pre><code>setItem(Object)</code></pre> on UI thread and the view will be updated. <h3>Updating image</h3> After the row is bound to view, the application may change the image by calling <pre><code>setImageBitmap(Context, Bitmap)</code></pre> or <pre><code>setImageDrawable(Drawable)</code></pre> on the UI thread, and the view will be updated.<pre><code>public class DetailsOverviewRow</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewRow.html
DetailsOverviewRow.Listener	A										<section class="prog__container">Listener for changes of DetailsOverviewRow.<pre><code>public static class DetailsOverviewRow.Listener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewRow.Listener.html
DetailsOverviewRowPresenter	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Use <pre><code>FullWidthDetailsOverviewRowPresenter</code></pre><pre><code>public class DetailsOverviewRowPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewRowPresenter.html
DetailsOverviewRowPresenter.ViewHolder	A										<section class="prog__container">A ViewHolder for the DetailsOverviewRow.<pre><code>public final class DetailsOverviewRowPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewRowPresenter.ViewHolder.html
DividerPresenter	A										<section class="prog__container">DividerPresenter provides a default presentation for <pre><code>DividerRow</code></pre> in HeadersFragment.<pre><code>public class DividerPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DividerPresenter.html
DividerRow	A										<section class="prog__container">Used to represent divider in HeadersFragment.<pre><code>public class DividerRow</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DividerRow.html
FacetProvider	A										<section class="prog__container">This is the query interface to supply optional features(aka facets) on an object without the need of letting the object to subclass or implement java interfaces.<pre><code>public interface FacetProvider</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FacetProvider.html
FacetProviderAdapter	A										<section class="prog__container">Optional interface that implemented by <pre><code>RecyclerView.Adapter</code></pre> to query <pre><code>FacetProvider</code></pre> for a given type within Adapter. Note that <pre><code>RecyclerView.ViewHolder</code></pre> may also implement <pre><code>FacetProvider</code></pre> which has a higher priority than the one returned from the FacetProviderAdapter.<pre><code>public interface FacetProviderAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FacetProviderAdapter.html
FocusHighlight	A										<section class="prog__container">Interface for highlighting the item that has focus.<pre><code>public interface FocusHighlight</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FocusHighlight.html
FocusHighlightHelper	A										<section class="prog__container">Sets up the highlighting behavior when an item gains focus.<pre><code>public class FocusHighlightHelper</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FocusHighlightHelper.html
FragmentAnimationProvider	A										<section class="prog__container">FragmentAnimationProvider supplies animations for use during a fragment's onCreateAnimator callback. Animators added here will be added to an animation set and played together. This allows presenters used by a fragment to control their own fragment lifecycle animations.<pre><code>public interface FragmentAnimationProvider</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FragmentAnimationProvider.html
FullWidthDetailsOverviewRowPresenter	A										<section class="prog__container">Renders a <pre><code>DetailsOverviewRow</code></pre> to display an overview of an item. Typically this row will be the first row in a fragment such as the <pre><code>DetailsFragment</code></pre>. The View created by the FullWidthDetailsOverviewRowPresenter is made in three parts: logo view on the left, action list view on the top and a customizable detailed description view on the right.<pre><code>public class FullWidthDetailsOverviewRowPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FullWidthDetailsOverviewRowPresenter.html
FullWidthDetailsOverviewRowPresenter.Listener	A										<section class="prog__container">Listeners for events on ViewHolder.<pre><code>public static abstract class FullWidthDetailsOverviewRowPresenter.Listener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FullWidthDetailsOverviewRowPresenter.Listener.html
FullWidthDetailsOverviewRowPresenter.ViewHolder.DetailsOverviewRowListener	A										<section class="prog__container"><pre><code>public class FullWidthDetailsOverviewRowPresenter.ViewHolder.DetailsOverviewRowListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FullWidthDetailsOverviewRowPresenter.ViewHolder.DetailsOverviewRowListener.html
FullWidthDetailsOverviewRowPresenter.ViewHolder	A										<section class="prog__container">A ViewHolder for the DetailsOverviewRow.<pre><code>public class FullWidthDetailsOverviewRowPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FullWidthDetailsOverviewRowPresenter.ViewHolder.html
FullWidthDetailsOverviewSharedElementHelper	A										<section class="prog__container">Helper class to assist delayed shared element activity transition for view created by <pre><code>FullWidthDetailsOverviewRowPresenter</code></pre>. User must call <pre><code>setSharedElementEnterTransition(Activity, String, long)</code></pre> during activity onCreate() and call <pre><code>setListener(FullWidthDetailsOverviewRowPresenter.Listener)</code></pre>. The helper implements <pre><code>FullWidthDetailsOverviewRowPresenter.Listener</code></pre> and starts delayed activity transition once <pre><code>onBindLogo(ViewHolder)</code></pre> is called.<pre><code>public class FullWidthDetailsOverviewSharedElementHelper</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FullWidthDetailsOverviewSharedElementHelper.html
GuidanceStylist.Guidance	A										<section class="prog__container">A data class representing contextual information for a <pre><code>GuidedStepFragment</code></pre>. Guidance consists of a short title, a longer description, a breadcrumb to help with global navigation (often indicating where the back button will lead), and an optional icon. All this information is intended to provide users with the appropriate context to make the decision(s) required by the current step.<pre><code>public static class GuidanceStylist.Guidance</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidanceStylist.Guidance.html
GuidanceStylist	A										<section class="prog__container">GuidanceStylist is used within a <pre><code>GuidedStepFragment</code></pre> to display contextual information for the decision(s) required at that step.<pre><code>public class GuidanceStylist</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidanceStylist.html
GuidedAction.Builder	A										<section class="prog__container">Builds a <pre><code>GuidedAction</code></pre> object.<pre><code>public static class GuidedAction.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedAction.Builder.html
GuidedAction.BuilderBase	A										<section class="prog__container">Base builder class to build a <pre><code>GuidedAction</code></pre> object. When subclass GuidedAction, you can override this BuilderBase class, implements your build() method which should call <pre><code>applyValues(GuidedAction)</code></pre>. When using GuidedAction directly, use <pre><code>GuidedAction.Builder</code></pre>.<pre><code>public static abstract class GuidedAction.BuilderBase</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedAction.BuilderBase.html
GuidedAction	A										<section class="prog__container">A data class which represents an action within a <pre><code>GuidedStepFragment</code></pre>. GuidedActions contain at minimum a title and a description, and typically also an icon.<pre><code>public class GuidedAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedAction.html
GuidedActionEditText	A										<section class="prog__container">A custom EditText that satisfies the IME key monitoring requirements of GuidedStepFragment.<pre><code>public class GuidedActionEditText</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedActionEditText.html
GuidedActionsStylist	A										<section class="prog__container">GuidedActionsStylist is used within a <pre><code>GuidedStepFragment</code></pre> to supply the right-side panel where users can take actions. It consists of a container for the list of actions, and a stationary selector view that indicates visually the location of focus. GuidedActionsStylist has two different layouts: default is for normal actions including text, radio, checkbox, DatePicker, etc, the other when <pre><code>setAsButtonActions()</code></pre> is called is recommended for button actions such as "yes", "no".<pre><code>public class GuidedActionsStylist</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedActionsStylist.html
GuidedActionsStylist.ViewHolder	A										<section class="prog__container">ViewHolder caches information about the action item layouts' subviews. Subclasses of <pre><code>GuidedActionsStylist</code></pre> may also wish to subclass this in order to add fields.<pre><code>public static class GuidedActionsStylist.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedActionsStylist.ViewHolder.html
GuidedDatePickerAction.Builder	A										<section class="prog__container">Builder class to build a GuidedDatePickerAction.<pre><code>public static final class GuidedDatePickerAction.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedDatePickerAction.Builder.html
GuidedDatePickerAction.BuilderBase	A										<section class="prog__container">Base Builder class to build GuidedDatePickerAction. Subclass this BuilderBase when app needs to subclass GuidedDatePickerAction, implement your build() which should call <pre><code>applyDatePickerValues(GuidedDatePickerAction)</code></pre>. When using GuidedDatePickerAction directly, use <pre><code>GuidedDatePickerAction.Builder</code></pre>.<pre><code>public static abstract class GuidedDatePickerAction.BuilderBase</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedDatePickerAction.BuilderBase.html
GuidedDatePickerAction	A										<section class="prog__container">Subclass of GuidedAction that can choose a date. The Action is editable by default; to make it read only, call hasEditableActivatorView(false) on the Builder.<pre><code>public class GuidedDatePickerAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedDatePickerAction.html
HeaderItem	A										<section class="prog__container">A header item describes the metadata of a <pre><code>Row</code></pre>, such as a category of media items. May be subclassed to add more information.<pre><code>public class HeaderItem</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/HeaderItem.html
HorizontalGridView	A										<section class="prog__container">A <pre><code>ViewGroup</code></pre> that shows items in a horizontal scrolling list. The items come from the <pre><code>RecyclerView.Adapter</code></pre> associated with this view.<pre><code>public class HorizontalGridView</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/HorizontalGridView.html
HorizontalHoverCardSwitcher	A										<section class="prog__container">A helper class for showing a hover card view below a <pre><code>HorizontalGridView</code></pre>. The hover card is aligned to the starting edge of the selected child view. If there is no space when scrolling to the end, the ending edge of the hover card will be aligned to the ending edge of the parent view, excluding padding.<pre><code>public final class HorizontalHoverCardSwitcher</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/HorizontalHoverCardSwitcher.html
ImageCardView	A										<section class="prog__container">A subclass of <pre><code>BaseCardView</code></pre> with an <pre><code>ImageView</code></pre> as its main region. The <pre><code>ImageCardView</code></pre> is highly customizable and can be used for various use-cases by adjusting the ImageViewCard's type to any combination of Title, Content, Badge or ImageOnly.<pre><code>public class ImageCardView</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ImageCardView.html
ImeKeyMonitor	A										<section class="prog__container">Interface for an EditText subclass that can delegate calls to onKeyPreIme up to a registered listener.<pre><code>public interface ImeKeyMonitor</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ImeKeyMonitor.html
ImeKeyMonitor.ImeKeyListener	A										<section class="prog__container">Listener interface for key events intercepted pre-IME by edit text objects.<pre><code>public static interface ImeKeyMonitor.ImeKeyListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ImeKeyMonitor.ImeKeyListener.html
ItemAlignmentFacet	A										<section class="prog__container">Optional facet provided by <pre><code>RecyclerView.Adapter</code></pre> or <pre><code>RecyclerView.ViewHolder</code></pre> for use in <pre><code>HorizontalGridView</code></pre> and <pre><code>VerticalGridView</code></pre>. Apps using <pre><code>Presenter</code></pre> may set facet using <pre><code>setFacet(Class, Object)</code></pre> or <pre><code>setFacet(Class, Object)</code></pre>. Facet on ViewHolder has a higher priority than Presenter or Adapter.<pre><code>public final class ItemAlignmentFacet</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemAlignmentFacet.html
ItemAlignmentFacet.ItemAlignmentDef	A										<section class="prog__container">Definition of an alignment position under a view.<pre><code>public static class ItemAlignmentFacet.ItemAlignmentDef</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemAlignmentFacet.ItemAlignmentDef.html
ItemBridgeAdapter.AdapterListener	A										<section class="prog__container">Interface for listening to ViewHolder operations.<pre><code>public static class ItemBridgeAdapter.AdapterListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemBridgeAdapter.AdapterListener.html
ItemBridgeAdapter	A										<section class="prog__container">Bridge from <pre><code>Presenter</code></pre> to <pre><code>RecyclerView.Adapter</code></pre>. Public to allow use by third party Presenters.<pre><code>public class ItemBridgeAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemBridgeAdapter.html
ItemBridgeAdapter.ViewHolder	A										<section class="prog__container">ViewHolder for the ItemBridgeAdapter.<pre><code>public class ItemBridgeAdapter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemBridgeAdapter.ViewHolder.html
ItemBridgeAdapter.Wrapper	A										<section class="prog__container">Interface for wrapping a view created by a Presenter into another view. The wrapper must be the immediate parent of the wrapped view.<pre><code>public static abstract class ItemBridgeAdapter.Wrapper</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemBridgeAdapter.Wrapper.html
ItemBridgeAdapterShadowOverlayWrapper	A										<section class="prog__container">A wrapper class working with <pre><code>ItemBridgeAdapter</code></pre> to wrap item view in a <pre><code>ShadowOverlayContainer</code></pre>. The ShadowOverlayContainer is created from conditions of <pre><code>ShadowOverlayHelper</code></pre>.<pre><code>public class ItemBridgeAdapterShadowOverlayWrapper</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemBridgeAdapterShadowOverlayWrapper.html
ListRow	A										<section class="prog__container">A <pre><code>Row</code></pre> composed of a optional <pre><code>HeaderItem</code></pre>, and an <pre><code>ObjectAdapter</code></pre> describing the items in the list.<pre><code>public class ListRow</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRow.html
ListRowHoverCardView	A										<section class="prog__container">ListRowHoverCardView contains a title and description.<pre><code>public final class ListRowHoverCardView</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRowHoverCardView.html
ListRowPresenter	A										<section class="prog__container">ListRowPresenter renders <pre><code>ListRow</code></pre> using a <pre><code>HorizontalGridView</code></pre> hosted in a <pre><code>ListRowView</code></pre>. <h3>Hover card</h3> Optionally, <pre><code>setHoverCardPresenterSelector(PresenterSelector)</code></pre> can be used to display a view for the currently focused list item below the rendered list. This view is known as a hover card. <h3>Selection animation</h3> ListRowPresenter disables <pre><code>RowPresenter</code></pre>'s default dimming effect and draws a dim overlay on each view individually. A subclass may override and disable <pre><code>isUsingDefaultListSelectEffect()</code></pre> and write its own dim effect in <pre><code>onSelectLevelChanged(RowPresenter.ViewHolder)</code></pre>. <h3>Shadow</h3> ListRowPresenter applies a default shadow to each child view. Call <pre><code>setShadowEnabled(boolean)</code></pre> to disable shadows. A subclass may override and return false in <pre><code>isUsingDefaultShadow()</code></pre> and replace with its own shadow implementation.<pre><code>public class ListRowPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRowPresenter.html
ListRowPresenter.SelectItemViewHolderTask	A										<section class="prog__container">A task on the ListRowPresenter.ViewHolder that can select an item by position in the HorizontalGridView and perform an optional item task on it.<pre><code>public static class ListRowPresenter.SelectItemViewHolderTask</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRowPresenter.SelectItemViewHolderTask.html
ListRowPresenter.ViewHolder	A										<section class="prog__container">ViewHolder for the ListRowPresenter.<pre><code>public static class ListRowPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRowPresenter.ViewHolder.html
ListRowView	A										<section class="prog__container">ListRowView is a <pre><code>ViewGroup</code></pre> which always contains a <pre><code>HorizontalGridView</code></pre>, and may optionally include a hover card.<pre><code>public final class ListRowView</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRowView.html
MultiActionsProvider	A										<section class="prog__container">An interface implemented by the user if they wish to provide actions for a media item row to be displayed by an <pre><code>AbstractMediaItemPresenter</code></pre>. A media row consists of media item details together with a number of custom actions, following the media item details. Classes implementing <pre><code>MultiActionsProvider</code></pre> can define their own media data model within their derived classes.<pre><code>public interface MultiActionsProvider</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/MultiActionsProvider.html
MultiActionsProvider.MultiAction	A										<section class="prog__container">MultiAction represents an action that can have multiple states. <pre><code>getIndex()</code></pre> returns the current index within the drawables. Both list of drawables and index can be updated dynamically in the program, and the UI could be updated by notifying the listeners provided in <pre><code>AbstractMediaItemPresenter.ViewHolder</code></pre>.<pre><code>public static class MultiActionsProvider.MultiAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/MultiActionsProvider.MultiAction.html
ObjectAdapter.DataObserver	A										<section class="prog__container">A DataObserver can be notified when an ObjectAdapter's underlying data changes. Separate methods provide notifications about different types of changes.<pre><code>public static abstract class ObjectAdapter.DataObserver</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ObjectAdapter.DataObserver.html
ObjectAdapter	A										<section class="prog__container">Base class adapter to be used in leanback activities. Provides access to a data model and is decoupled from the presentation of the items via <pre><code>PresenterSelector</code></pre>.<pre><code>public abstract class ObjectAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ObjectAdapter.html
OnActionClickedListener	A										<section class="prog__container">Interface for receiving notification when an <pre><code>Action</code></pre> is clicked.<pre><code>public interface OnActionClickedListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnActionClickedListener.html
OnChildLaidOutListener	A										<section class="prog__container">Interface for receiving notification when a child of this ViewGroup has been laid out.<pre><code>public interface OnChildLaidOutListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnChildLaidOutListener.html
OnChildSelectedListener	A										<section class="prog__container"><p class="caution"><strong> This interface is deprecated.</strong><br/> Use <pre><code>OnChildViewHolderSelectedListener</code></pre><pre><code>public interface OnChildSelectedListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnChildSelectedListener.html
OnChildViewHolderSelectedListener	A										<section class="prog__container">Interface for receiving notification when a child of this ViewGroup has been selected. There are two methods: <li> {link <pre><code>onChildViewHolderSelected(RecyclerView, RecyclerView.ViewHolder, int, int)</code></pre>} is called when the view holder is about to be selected. The listener could change size of the view holder in this callback. </li> <li> {link <pre><code>onChildViewHolderSelectedAndPositioned(RecyclerView, RecyclerView.ViewHolder, int, int)</code></pre> is called when view holder has been selected and laid out in RecyclerView. </li><pre><code>public abstract class OnChildViewHolderSelectedListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnChildViewHolderSelectedListener.html
OnItemViewClickedListener	A										<section class="prog__container">Interface for receiving notification when a item view holder is clicked. This interface expects row object to be sub class of <pre><code>Row</code></pre>.<pre><code>public interface OnItemViewClickedListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnItemViewClickedListener.html
OnItemViewSelectedListener	A										<section class="prog__container">Interface for receiving notification when a row or item becomes selected. The concept of current selection is different than focus. A row or item can be selected without having focus; for example, when a row header view gains focus then the corresponding row view becomes selected. This interface expects row object to be sub class of <pre><code>Row</code></pre>.<pre><code>public interface OnItemViewSelectedListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnItemViewSelectedListener.html
android.support.v17.leanback.widget	A										<section class="prog__container">Support classes providing low level Leanback user interface building blocks: widgets and helpers.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/package-summary.html
PageRow	A										<section class="prog__container">Used to represent content spanning full page.<pre><code>public class PageRow</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PageRow.html
PlaybackControlsRow.ClosedCaptioningAction	A										<section class="prog__container">An action for displaying a CC (Closed Captioning) icon.<pre><code>public static class PlaybackControlsRow.ClosedCaptioningAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.ClosedCaptioningAction.html
PlaybackControlsRow.FastForwardAction	A										<section class="prog__container">An action displaying an icon for fast forward.<pre><code>public static class PlaybackControlsRow.FastForwardAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.FastForwardAction.html
PlaybackControlsRow.HighQualityAction	A										<section class="prog__container">An action for displaying a HQ (High Quality) icon.<pre><code>public static class PlaybackControlsRow.HighQualityAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.HighQualityAction.html
PlaybackControlsRow	A										<section class="prog__container">A <pre><code>Row</code></pre> of playback controls to be displayed by a <pre><code>PlaybackControlsRowPresenter</code></pre>. This row consists of some optional item detail, a series of primary actions, and an optional series of secondary actions.<pre><code>public class PlaybackControlsRow</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.html
PlaybackControlsRow.MoreActions	A										<section class="prog__container">An action displaying an icon for "more actions".<pre><code>public static class PlaybackControlsRow.MoreActions</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.MoreActions.html
PlaybackControlsRow.MultiAction	A										<section class="prog__container">Base class for an action comprised of a series of icons.<pre><code>public static abstract class PlaybackControlsRow.MultiAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.MultiAction.html
PlaybackControlsRow.PictureInPictureAction	A										<section class="prog__container">An action displaying an icon for picture-in-picture.<pre><code>public static class PlaybackControlsRow.PictureInPictureAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.PictureInPictureAction.html
PlaybackControlsRow.PlayPauseAction	A										<section class="prog__container">An action displaying icons for play and pause.<pre><code>public static class PlaybackControlsRow.PlayPauseAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.PlayPauseAction.html
PlaybackControlsRow.RepeatAction	A										<section class="prog__container">An action for displaying three repeat states: none, one, or all.<pre><code>public static class PlaybackControlsRow.RepeatAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.RepeatAction.html
PlaybackControlsRow.RewindAction	A										<section class="prog__container">An action displaying an icon for rewind.<pre><code>public static class PlaybackControlsRow.RewindAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.RewindAction.html
PlaybackControlsRow.ShuffleAction	A										<section class="prog__container">An action for displaying a shuffle icon.<pre><code>public static class PlaybackControlsRow.ShuffleAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.ShuffleAction.html
PlaybackControlsRow.SkipNextAction	A										<section class="prog__container">An action displaying an icon for skip next.<pre><code>public static class PlaybackControlsRow.SkipNextAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.SkipNextAction.html
PlaybackControlsRow.SkipPreviousAction	A										<section class="prog__container">An action displaying an icon for skip previous.<pre><code>public static class PlaybackControlsRow.SkipPreviousAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.SkipPreviousAction.html
PlaybackControlsRow.ThumbsAction	A										<section class="prog__container">A base class for displaying a thumbs action.<pre><code>public static abstract class PlaybackControlsRow.ThumbsAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.ThumbsAction.html
PlaybackControlsRow.ThumbsDownAction	A										<section class="prog__container">An action displaying an icon for thumbs down.<pre><code>public static class PlaybackControlsRow.ThumbsDownAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.ThumbsDownAction.html
PlaybackControlsRow.ThumbsUpAction	A										<section class="prog__container">An action displaying an icon for thumbs up.<pre><code>public static class PlaybackControlsRow.ThumbsUpAction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.ThumbsUpAction.html
PlaybackControlsRowPresenter	A										<section class="prog__container">A PlaybackControlsRowPresenter renders a <pre><code>PlaybackControlsRow</code></pre> to display a series of playback control buttons. Typically this row will be the first row in a fragment such as the <pre><code>PlaybackOverlayFragment</code></pre>.<pre><code>public class PlaybackControlsRowPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRowPresenter.html
PlaybackControlsRowPresenter.ViewHolder	A										<section class="prog__container">A ViewHolder for the PlaybackControlsRow.<pre><code>public class PlaybackControlsRowPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRowPresenter.ViewHolder.html
PlaybackRowPresenter	A										<section class="prog__container">Subclass of <pre><code>RowPresenter</code></pre> that can define the desired behavior when the view reappears. This is presently used by <pre><code>PlaybackControlsRowPresenter</code></pre> to update the UI after we show/hide the controls view.<pre><code>public abstract class PlaybackRowPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackRowPresenter.html
PlaybackRowPresenter.ViewHolder	A										<section class="prog__container">This container is used for trapping click events and passing them to the playback controls.<pre><code>public static class PlaybackRowPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackRowPresenter.ViewHolder.html
Presenter	A										<section class="prog__container">A Presenter is used to generate <pre><code>View</code></pre>s and bind Objects to them on demand. It is closely related to the concept of an <pre><code>RecyclerView.Adapter</code></pre>, but is not position-based. The leanback framework implements the adapter concept using <pre><code>ObjectAdapter</code></pre> which refers to a Presenter (or <pre><code>PresenterSelector</code></pre>) instance.<pre><code>public abstract class Presenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/Presenter.html
Presenter.ViewHolder	A										<section class="prog__container">ViewHolder can be subclassed and used to cache any view accessors needed to improve binding performance (for example, results of findViewById) without needing to subclass a View.<pre><code>public static class Presenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/Presenter.ViewHolder.html
Presenter.ViewHolderTask	A										<section class="prog__container">Base class to perform a task on Presenter.ViewHolder.<pre><code>public static abstract class Presenter.ViewHolderTask</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/Presenter.ViewHolderTask.html
PresenterSelector	A										<section class="prog__container">A PresenterSelector is used to obtain a <pre><code>Presenter</code></pre> for a given Object. Similar to <pre><code>Presenter</code></pre>, PresenterSelector is stateless.<pre><code>public abstract class PresenterSelector</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PresenterSelector.html
PresenterSwitcher	A										<section class="prog__container">An abstract helper class that switches a view in its parent view using a <pre><code>PresenterSelector</code></pre>. A subclass should implement <pre><code>insertView(View)</code></pre> to define how to add the view in parent, and may optionally override <pre><code>onViewSelected(View)</code></pre>.<pre><code>public abstract class PresenterSwitcher</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PresenterSwitcher.html
Row	A										<section class="prog__container">The base class for all rows. A commonly used subclass is the <pre><code>ListRow</code></pre>. Custom subclasses may define other types of rows.<pre><code>public class Row</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/Row.html
RowHeaderPresenter	A										<section class="prog__container">RowHeaderPresenter provides a default presentation for <pre><code>HeaderItem</code></pre> using a <pre><code>RowHeaderView</code></pre> and optionally a TextView for description. If a subclass creates its own view, the subclass must also override <pre><code>onCreateViewHolder(ViewGroup)</code></pre>, <pre><code>onSelectLevelChanged(ViewHolder)</code></pre>.<pre><code>public class RowHeaderPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/RowHeaderPresenter.html
RowHeaderPresenter.ViewHolder	A										<section class="prog__container">A ViewHolder for the RowHeaderPresenter.<pre><code>public static class RowHeaderPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/RowHeaderPresenter.ViewHolder.html
RowHeaderView	A										<section class="prog__container">RowHeaderView is a header text view.<pre><code>public final class RowHeaderView</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/RowHeaderView.html
RowPresenter	A										<section class="prog__container">An abstract <pre><code>Presenter</code></pre> that renders an Object in RowsFragment, the object can be subclass <pre><code>Row</code></pre> or a generic one. When the object is not <pre><code>Row</code></pre> class, <pre><code>getRow()</code></pre> returns null. <h3>Customize UI widgets</h3> When a subclass of RowPresenter adds UI widgets, it should subclass <pre><code>RowPresenter.ViewHolder</code></pre> and override <pre><code>createRowViewHolder(ViewGroup)</code></pre> and <pre><code>initializeRowViewHolder(ViewHolder)</code></pre>. The subclass must use layout id "row_content" for the widget that will be aligned to the title of any <pre><code>HeadersFragment</code></pre> that may exist in the parent fragment. RowPresenter contains an optional and replaceable <pre><code>RowHeaderPresenter</code></pre> that renders the header. You can disable the default rendering or replace the Presenter with a new header presenter by calling <pre><code>setHeaderPresenter(RowHeaderPresenter)</code></pre>. <h3>UI events from fragments</h3> RowPresenter receives calls from its parent (typically a Fragment) when: <ul> <li> A row is selected via <pre><code>setRowViewSelected(Presenter.ViewHolder, boolean)</code></pre>. The event is triggered immediately when there is a row selection change before the selection animation is started. Selected status may control activated status of the row (see "Activated status" below). Subclasses of RowPresenter may override <pre><code>onRowViewSelected(ViewHolder, boolean)</code></pre>. </li> <li> A row is expanded to full height via <pre><code>setRowViewExpanded(Presenter.ViewHolder, boolean)</code></pre> when BrowseFragment hides fast lane on the left. The event is triggered immediately before the expand animation is started. Row title is shown when row is expanded. Expanded status may control activated status of the row (see "Activated status" below). Subclasses of RowPresenter may override <pre><code>onRowViewExpanded(ViewHolder, boolean)</code></pre>. </li> </ul> <h3>Activated status</h3> The activated status of a row is applied to the row view and it's children via <pre><code>setActivated(boolean)</code></pre>. The activated status is typically used to control <pre><code>BaseCardView</code></pre> info region visibility. The row's activated status can be controlled by selected status and/or expanded status. Call <pre><code>setSyncActivatePolicy(int)</code></pre> and choose one of the four policies: <ul> <li><pre><code>SYNC_ACTIVATED_TO_EXPANDED</code></pre> Activated status is synced with row expanded status</li> <li><pre><code>SYNC_ACTIVATED_TO_SELECTED</code></pre> Activated status is synced with row selected status</li> <li><pre><code>SYNC_ACTIVATED_TO_EXPANDED_AND_SELECTED</code></pre> Activated status is set to true when both expanded and selected status are true</li> <li><pre><code>SYNC_ACTIVATED_CUSTOM</code></pre> Activated status is not controlled by selected status or expanded status, application can control activated status by its own. Application should call <pre><code>setActivated(boolean)</code></pre> to change activated status of row view. </li> </ul> <h3>User events</h3> RowPresenter provides <pre><code>OnItemViewSelectedListener</code></pre> and <pre><code>OnItemViewClickedListener</code></pre>. If a subclass wants to add its own <pre><code>View.OnFocusChangeListener</code></pre> or <pre><code>View.OnClickListener</code></pre>, it must do that in <pre><code>createRowViewHolder(ViewGroup)</code></pre> to be properly chained by the library. Adding View listeners after <pre><code>createRowViewHolder(ViewGroup)</code></pre> is undefined and may result in incorrect behavior by the library's listeners. <h3>Selection animation</h3><pre><code>public abstract class RowPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/RowPresenter.html
RowPresenter.ViewHolder	A										<section class="prog__container">A ViewHolder for a <pre><code>Row</code></pre>.<pre><code>public static class RowPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/RowPresenter.ViewHolder.html
SearchBar	A										<section class="prog__container">A search widget containing a search orb and a text entry view.<pre><code>public class SearchBar</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchBar.html
SearchBar.SearchBarListener	A										<section class="prog__container">Interface for receiving notification of search query changes.<pre><code>public static interface SearchBar.SearchBarListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchBar.SearchBarListener.html
SearchBar.SearchBarPermissionListener	A										<section class="prog__container">Interface that handles runtime permissions requests. App sets listener on SearchBar via <pre><code>setPermissionListener(SearchBarPermissionListener)</code></pre>.<pre><code>public static interface SearchBar.SearchBarPermissionListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchBar.SearchBarPermissionListener.html
SearchEditText	A										<section class="prog__container">EditText widget that monitors keyboard changes.<pre><code>public class SearchEditText</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchEditText.html
SearchEditText.OnKeyboardDismissListener	A										<section class="prog__container">Interface for receiving notification when the keyboard is dismissed.<pre><code>public static interface SearchEditText.OnKeyboardDismissListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchEditText.OnKeyboardDismissListener.html
SearchOrbView.Colors	A										<section class="prog__container">A set of colors used to display the search orb.<pre><code>public static class SearchOrbView.Colors</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchOrbView.Colors.html
SearchOrbView	A										<section class="prog__container"><pre><code>public class SearchOrbView</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchOrbView.html
SectionRow	A										<section class="prog__container">Used to represent section item in HeadersFragment. Unlike a normal Row, it's not focusable.<pre><code>public class SectionRow</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SectionRow.html
ShadowOverlayContainer	A										<section class="prog__container">Provides an SDK version-independent wrapper to support shadows, color overlays, and rounded corners. It's not always preferred to create a ShadowOverlayContainer, use <pre><code>ShadowOverlayHelper</code></pre> instead.<pre><code>public class ShadowOverlayContainer</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ShadowOverlayContainer.html
ShadowOverlayHelper.Builder	A										<section class="prog__container">Builder for creating ShadowOverlayHelper.<pre><code>public static final class ShadowOverlayHelper.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ShadowOverlayHelper.Builder.html
ShadowOverlayHelper	A										<section class="prog__container">ShadowOverlayHelper is a helper class for shadow, overlay color and rounded corner. There are many choices to implement Shadow, overlay color. Initialize it with ShadowOverlayHelper.Builder and it decides the best strategy based on options user choose and current platform version. <li> For shadow: it may use 9-patch with opticalBounds or Z-value based shadow for API &gt;= 21. When 9-patch is used, it requires a ShadowOverlayContainer to include 9-patch views. <li> For overlay: it may use ShadowOverlayContainer which overrides draw() or it may use setForeground(new ColorDrawable()) for API&gt;=23. The foreground support might be disabled if rounded corner is applied due to performance reason. <li> For rounded-corner: it uses a ViewOutlineProvider for API&gt;=21. There are two different strategies: use Wrapper with a ShadowOverlayContainer; or apply rounded corner, overlay and rounded-corner to the view itself. Below is an example of how helper is used. <pre><code> ShadowOverlayHelper mHelper = new ShadowOverlayHelper.Builder(). .needsOverlay(true).needsRoundedCorner(true).needsShadow(true) .build(); mHelper.prepareParentForShadow(parentView); // apply optical-bounds for 9-patch shadow. mHelper.setOverlayColor(view, Color.argb(0x80, 0x80, 0x80, 0x80)); mHelper.setShadowFocusLevel(view, 1.0f); ... View initializeView(View view) { if (mHelper.needsWrapper()) { ShadowOverlayContainer wrapper = mHelper.createShadowOverlayContainer(context); wrapper.wrap(view); return wrapper; } else { mHelper.onViewCreated(view); return view; } } ... </code></pre> </li></li></li><pre><code>public final class ShadowOverlayHelper</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ShadowOverlayHelper.html
ShadowOverlayHelper.Options	A										<section class="prog__container">Option values for ShadowOverlayContainer.<pre><code>public static final class ShadowOverlayHelper.Options</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ShadowOverlayHelper.Options.html
SinglePresenterSelector	A										<section class="prog__container">A <pre><code>PresenterSelector</code></pre> that always returns the same <pre><code>Presenter</code></pre>. Useful for rows of items of the same type that are all rendered the same way.<pre><code>public final class SinglePresenterSelector</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SinglePresenterSelector.html
SparseArrayObjectAdapter	A										<section class="prog__container">An <pre><code>ObjectAdapter</code></pre> implemented with a <pre><code>SparseArray</code></pre>. This class maintains an array of objects where each object is associated with an integer key which determines its order relative to other objects.<pre><code>public class SparseArrayObjectAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SparseArrayObjectAdapter.html
SpeechOrbView	A										<section class="prog__container">A subclass of <pre><code>SearchOrbView</code></pre> that visualizes the state of an ongoing speech recognition.<pre><code>public class SpeechOrbView</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SpeechOrbView.html
SpeechRecognitionCallback	A										<section class="prog__container">Interface for receiving notification that speech recognition should be initiated.<pre><code>public interface SpeechRecognitionCallback</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SpeechRecognitionCallback.html
TitleHelper	A										<section class="prog__container">Helper for managing <pre><code>TitleView</code></pre>, including transitions and focus movement. Assumes the TitleView is overlayed on the topmost portion of the scene root view.<pre><code>public class TitleHelper</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/TitleHelper.html
TitleView	A										<section class="prog__container">Title view for a leanback fragment.<pre><code>public class TitleView</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/TitleView.html
TitleViewAdapter	A										<section class="prog__container">This class allows a customized widget class to implement <pre><code>TitleViewAdapter.Provider</code></pre> and expose <pre><code>TitleViewAdapter</code></pre> methods to containing fragment (e.g. BrowseFragment or DetailsFragment). The title view must have a search orb view (<pre><code>getSearchAffordanceView()</code></pre> aligned to start and can typically have a branding Drawable and or title text aligned to end. The branding part is fully open to customization: not necessary to be a drawable or text.<pre><code>public abstract class TitleViewAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/TitleViewAdapter.html
TitleViewAdapter.Provider	A										<section class="prog__container">Interface to be implemented by a customized widget class to implement <pre><code>TitleViewAdapter</code></pre>.<pre><code>public static interface TitleViewAdapter.Provider</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/TitleViewAdapter.Provider.html
VerticalGridPresenter	A										<section class="prog__container">A presenter that renders objects in a <pre><code>VerticalGridView</code></pre>.<pre><code>public class VerticalGridPresenter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/VerticalGridPresenter.html
VerticalGridPresenter.ViewHolder	A										<section class="prog__container">ViewHolder for the VerticalGridPresenter.<pre><code>public static class VerticalGridPresenter.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/VerticalGridPresenter.ViewHolder.html
VerticalGridView	A										<section class="prog__container">A <pre><code>ViewGroup</code></pre> that shows items in a vertically scrolling list. The items come from the <pre><code>RecyclerView.Adapter</code></pre> associated with this view.<pre><code>public class VerticalGridView</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/VerticalGridView.html
ViewHolderTask	A										<section class="prog__container">Interface for schedule task on a ViewHolder.<pre><code>public interface ViewHolderTask</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ViewHolderTask.html
Picker	A										<section class="prog__container">Picker is a widget showing multiple customized <pre><code>PickerColumn</code></pre>s. The PickerColumns are initialized in <pre><code>setColumns(List)</code></pre>. Call <pre><code>setColumnAt(int, PickerColumn)</code></pre> if the column value range or labels change. Call <pre><code>setColumnValue(int, int, boolean)</code></pre> to update the current value of PickerColumn.<pre><code>public class Picker</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/picker/Picker.html
Picker.PickerValueListener	A										<section class="prog__container"><pre><code>public static interface Picker.PickerValueListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/picker/Picker.PickerValueListener.html
PickerColumn	A										<section class="prog__container">Picker column class used by <pre><code>Picker</code></pre>, defines a contiguous value ranges and associated labels. A PickerColumn has a minValue and maxValue to choose between. The Picker column has a current value. The labels can be dynamically generated from value by <pre><code>setLabelFormat(String)</code></pre> or a list of static labels set by <pre><code>setStaticLabels(CharSequence[])</code></pre>.<pre><code>public class PickerColumn</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/picker/PickerColumn.html
BaseLeanbackPreferenceFragment	A										<section class="prog__container">This fragment provides a preference fragment with leanback-style behavior, suitable for embedding into broader UI elements.<pre><code>public abstract class BaseLeanbackPreferenceFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/BaseLeanbackPreferenceFragment.html
LeanbackListPreferenceDialogFragment.AdapterMulti	A										<section class="prog__container"><pre><code>public class LeanbackListPreferenceDialogFragment.AdapterMulti</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackListPreferenceDialogFragment.AdapterMulti.html
LeanbackListPreferenceDialogFragment.AdapterSingle	A										<section class="prog__container"><pre><code>public class LeanbackListPreferenceDialogFragment.AdapterSingle</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackListPreferenceDialogFragment.AdapterSingle.html
LeanbackListPreferenceDialogFragment	A										<section class="prog__container"><pre><code>public class LeanbackListPreferenceDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackListPreferenceDialogFragment.html
LeanbackListPreferenceDialogFragment.ViewHolder	A										<section class="prog__container"><pre><code>public static class LeanbackListPreferenceDialogFragment.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackListPreferenceDialogFragment.ViewHolder.html
LeanbackListPreferenceDialogFragment.ViewHolder.OnItemClickListener	A										<section class="prog__container"><pre><code>public static interface LeanbackListPreferenceDialogFragment.ViewHolder.OnItemClickListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackListPreferenceDialogFragment.ViewHolder.OnItemClickListener.html
LeanbackPreferenceDialogFragment	A										<section class="prog__container"><pre><code>public class LeanbackPreferenceDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackPreferenceDialogFragment.html
LeanbackPreferenceFragment	A										<section class="prog__container">This fragment provides a fully decorated leanback-style preference fragment, including a list background and header.<pre><code>public abstract class LeanbackPreferenceFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackPreferenceFragment.html
LeanbackSettingsFragment	A										<section class="prog__container">This fragment provides a container for displaying a <pre><code>LeanbackPreferenceFragment</code></pre><pre><code>public abstract class LeanbackSettingsFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackSettingsFragment.html
R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.color.html
R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.dimen.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.html
R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.id.html
R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.layout.html
R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.style.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v4/R.html
AccessibilityServiceInfoCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>AccessibilityService</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class AccessibilityServiceInfoCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/accessibilityservice/AccessibilityServiceInfoCompat.html
ActionBarDrawerToggle.Delegate	A										<section class="prog__container"><pre><code>public static interface ActionBarDrawerToggle.Delegate</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.Delegate.html
ActionBarDrawerToggle.DelegateProvider	A										<section class="prog__container">Allows an implementing Activity to return an <pre><code>ActionBarDrawerToggle.Delegate</code></pre> to use with ActionBarDrawerToggle.<pre><code>public static interface ActionBarDrawerToggle.DelegateProvider</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.DelegateProvider.html
ActionBarDrawerToggle	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Please use ActionBarDrawerToggle in support-v7-appcompat.<pre><code>public class ActionBarDrawerToggle</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html
ActivityCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Activity</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public class ActivityCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ActivityCompat.html
ActivityCompat.OnRequestPermissionsResultCallback	A										<section class="prog__container">This interface is the contract for receiving the results for permission requests.<pre><code>public static interface ActivityCompat.OnRequestPermissionsResultCallback</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ActivityCompat.OnRequestPermissionsResultCallback.html
ActivityManagerCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>ActivityManager</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class ActivityManagerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ActivityManagerCompat.html
ActivityOptionsCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>ActivityOptions</code></pre> introduced in API level 16 in a backwards compatible fashion.<pre><code>public class ActivityOptionsCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ActivityOptionsCompat.html
AppLaunchChecker	A										<section class="prog__container">This class provides APIs for determining how an app has been launched. This can be useful if you want to confirm that a user has launched your app through its front door activity from their launcher/home screen, rather than just if the app has been opened in the past in order to view a link, open a document or perform some other service for other apps on the device.<pre><code>public class AppLaunchChecker</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/AppLaunchChecker.html
AppOpsManagerCompat	A										<section class="prog__container">Helper for accessing features in android.app.AppOpsManager introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class AppOpsManagerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat.html
BundleCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Bundle</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class BundleCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/BundleCompat.html
DialogFragment	A										<section class="prog__container">Static library support version of the framework's <pre><code>DialogFragment</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public class DialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/DialogFragment.html
Fragment	A										<section class="prog__container">Static library support version of the framework's <pre><code>Fragment</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework <pre><code>Fragment</code></pre> documentation for a class overview.<pre><code>public class Fragment</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/Fragment.html
Fragment.InstantiationException	A										<section class="prog__container">Thrown by <pre><code>instantiate(Context, String, Bundle)</code></pre> when there is an instantiation failure.<pre><code>public static class Fragment.InstantiationException</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/Fragment.InstantiationException.html
Fragment.SavedState	A										<section class="prog__container">State information that has been retrieved from a fragment instance through <pre><code>FragmentManager.saveFragmentInstanceState</code></pre>.<pre><code>public static class Fragment.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/Fragment.SavedState.html
FragmentActivity	A										<section class="prog__container">Base class for activities that want to use the support-based <pre><code>Fragment</code></pre> and <pre><code>Loader</code></pre> APIs.<pre><code>public class FragmentActivity</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentActivity.html
FragmentContainer	A										<section class="prog__container">Callbacks to a <pre><code>Fragment</code></pre>'s container.<pre><code>public abstract class FragmentContainer</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentContainer.html
FragmentController	A										<section class="prog__container">Provides integration points with a <pre><code>FragmentManager</code></pre> for a fragment host.<pre><code>public class FragmentController</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentController.html
FragmentHostCallback	A										<section class="prog__container">Integration points with the Fragment host.<pre><code>public abstract class FragmentHostCallback</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html
FragmentManager.BackStackEntry	A										<section class="prog__container">Representation of an entry on the fragment back stack, as created with <pre><code>FragmentTransaction.addToBackStack()</code></pre>. Entries can later be retrieved with <pre><code>FragmentManager.getBackStackEntryAt()</code></pre>.<pre><code>public static interface FragmentManager.BackStackEntry</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentManager.BackStackEntry.html
FragmentManager.FragmentLifecycleCallbacks	A										<section class="prog__container">Callback interface for listening to fragment state changes that happen within a given FragmentManager.<pre><code>public static abstract class FragmentManager.FragmentLifecycleCallbacks</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentManager.FragmentLifecycleCallbacks.html
FragmentManager	A										<section class="prog__container">Static library support version of the framework's <pre><code>FragmentManager</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework <pre><code>FragmentManager</code></pre> documentation for a class overview.<pre><code>public abstract class FragmentManager</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentManager.html
FragmentManager.OnBackStackChangedListener	A										<section class="prog__container">Interface to watch for changes to the back stack.<pre><code>public static interface FragmentManager.OnBackStackChangedListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentManager.OnBackStackChangedListener.html
FragmentManagerNonConfig	A										<section class="prog__container">FragmentManagerNonConfig stores the retained instance fragments across activity recreation events.<pre><code>public class FragmentManagerNonConfig</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentManagerNonConfig.html
FragmentPagerAdapter	A										<section class="prog__container">Implementation of <pre><code>PagerAdapter</code></pre> that represents each page as a <pre><code>Fragment</code></pre> that is persistently kept in the fragment manager as long as the user can return to the page.<pre><code>public abstract class FragmentPagerAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html
FragmentStatePagerAdapter	A										<section class="prog__container">Implementation of <pre><code>PagerAdapter</code></pre> that uses a <pre><code>Fragment</code></pre> to manage each page. This class also handles saving and restoring of fragment's state.<pre><code>public abstract class FragmentStatePagerAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html
FragmentTabHost	A										<section class="prog__container">Special TabHost that allows the use of <pre><code>Fragment</code></pre> objects for its tab content. When placing this in a view hierarchy, after inflating the hierarchy you must call <pre><code>setup(Context, FragmentManager, int)</code></pre> to complete the initialization of the tab host.<pre><code>public class FragmentTabHost</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentTabHost.html
FragmentTransaction	A										<section class="prog__container">Static library support version of the framework's <pre><code>FragmentTransaction</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public abstract class FragmentTransaction</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html
ListFragment	A										<section class="prog__container">Static library support version of the framework's <pre><code>ListFragment</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public class ListFragment</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ListFragment.html
LoaderManager	A										<section class="prog__container">Static library support version of the framework's <pre><code>LoaderManager</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public abstract class LoaderManager</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/LoaderManager.html
LoaderManager.LoaderCallbacks	A										<section class="prog__container">Callback interface for a client to interact with the manager.<pre><code>public static interface LoaderManager.LoaderCallbacks</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/LoaderManager.LoaderCallbacks.html
NavUtils	A										<section class="prog__container">NavUtils provides helper functionality for applications implementing recommended Android UI navigation patterns. For information about recommended navigation patterns see Tasks and Back Stack from the developer guide and Navigation from the design guide.<pre><code>public final class NavUtils</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NavUtils.html
NotificationCompat.Action.Builder	A										<section class="prog__container">Builder class for <pre><code>NotificationCompat.Action</code></pre> objects.<pre><code>public static final class NotificationCompat.Action.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.Builder.html
NotificationCompat.Action.Extender	A										<section class="prog__container">Extender interface for use with <pre><code>extend(NotificationCompat.Extender)</code></pre>. Extenders may be used to add metadata or change options on an action builder.<pre><code>public static interface NotificationCompat.Action.Extender</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.Extender.html
NotificationCompat.Action	A										<section class="prog__container">Structure to encapsulate a named action that can be shown as part of this notification. It must include an icon, a label, and a <pre><code>PendingIntent</code></pre> to be fired when the action is selected by the user. Action buttons won't appear on platforms prior to Android 4.1.<pre><code>public static class NotificationCompat.Action</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.html
NotificationCompat.Action.WearableExtender	A										<section class="prog__container">Wearable extender for notification actions. To add extensions to an action, create a new <pre><code>NotificationCompat.Action.WearableExtender</code></pre> object using the <pre><code>WearableExtender()</code></pre> constructor and apply it to a <pre><code>NotificationCompat.Action.Builder</code></pre> using <pre><code>extend(NotificationCompat.Action.Extender)</code></pre>. <pre class="prettyprint"> NotificationCompat.Action action = new NotificationCompat.Action.Builder( R.drawable.archive_all, "Archive all", actionIntent) .extend(new NotificationCompat.Action.WearableExtender() .setAvailableOffline(false)) .build();</pre><pre><code>public static final class NotificationCompat.Action.WearableExtender</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html
NotificationCompat.BigPictureStyle	A										<section class="prog__container">Helper class for generating large-format notifications that include a large image attachment. <br> If the platform does not provide large-format notifications, this method has no effect. The user will always see the normal notification view. <br> This class is a "rebuilder": It attaches to a Builder object and modifies its behavior, like so: <pre class="prettyprint"> Notification notif = new Notification.Builder(mContext) .setContentTitle("New photo from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_post) .setLargeIcon(aBitmap) .setStyle(new Notification.BigPictureStyle() .bigPicture(aBigBitmap)) .build(); </pre></br></br><pre><code>public static class NotificationCompat.BigPictureStyle</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigPictureStyle.html
NotificationCompat.BigTextStyle	A										<section class="prog__container">Helper class for generating large-format notifications that include a lot of text. <br> If the platform does not provide large-format notifications, this method has no effect. The user will always see the normal notification view. <br> This class is a "rebuilder": It attaches to a Builder object and modifies its behavior, like so: <pre class="prettyprint"> Notification notif = new Notification.Builder(mContext) .setContentTitle("New mail from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_mail) .setLargeIcon(aBitmap) .setStyle(new Notification.BigTextStyle() .bigText(aVeryLongString)) .build(); </pre></br></br><pre><code>public static class NotificationCompat.BigTextStyle</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigTextStyle.html
NotificationCompat.Builder	A										<section class="prog__container">Builder class for <pre><code>NotificationCompat</code></pre> objects. Allows easier control over all the flags, as well as help constructing the typical notification layouts.<pre><code>public static class NotificationCompat.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html
NotificationCompat.CarExtender	A										<section class="prog__container"><pre><code>public static final class NotificationCompat.CarExtender</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.html
NotificationCompat.CarExtender.UnreadConversation.Builder	A										<section class="prog__container">Builder class for <pre><code>NotificationCompat.CarExtender.UnreadConversation</code></pre> objects.<pre><code>public static class NotificationCompat.CarExtender.UnreadConversation.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.Builder.html
NotificationCompat.CarExtender.UnreadConversation	A										<section class="prog__container">A class which holds the unread messages from a conversation.<pre><code>public static class NotificationCompat.CarExtender.UnreadConversation</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.html
NotificationCompat.Extender	A										<section class="prog__container">Extender interface for use with <pre><code>extend(NotificationCompat.Extender)</code></pre>. Extenders may be used to add metadata or change options on a notification builder.<pre><code>public static interface NotificationCompat.Extender</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Extender.html
NotificationCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Notification</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public class NotificationCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.html
NotificationCompat.InboxStyle	A										<section class="prog__container">Helper class for generating large-format notifications that include a list of (up to 5) strings. <br> If the platform does not provide large-format notifications, this method has no effect. The user will always see the normal notification view. <br> This class is a "rebuilder": It attaches to a Builder object and modifies its behavior, like so: <pre class="prettyprint"> Notification noti = new Notification.Builder() .setContentTitle("5 New mails from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_mail) .setLargeIcon(aBitmap) .setStyle(new Notification.InboxStyle() .addLine(str1) .addLine(str2) .setContentTitle("") .setSummaryText("+3 more")) .build(); </pre></br></br><pre><code>public static class NotificationCompat.InboxStyle</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.InboxStyle.html
NotificationCompat.MessagingStyle	A										<section class="prog__container">Helper class for generating large-format notifications that include multiple back-and-forth messages of varying types between any number of people. <br> In order to get a backwards compatible behavior, the app needs to use the v7 version of the notification builder together with this style, otherwise the user will see the normal notification view. <br> Use <pre><code>setConversationTitle(CharSequence)</code></pre> to set a conversation title for group chats with more than two people. This could be the user-created name of the group or, if it doesn't have a specific name, a list of the participants in the conversation. Do not set a conversation title for one-on-one chats, since platforms use the existence of this field as a hint that the conversation is a group. <br> This class is a "rebuilder": It attaches to a Builder object and modifies its behavior, like so: <pre class="prettyprint"> Notification noti = new Notification.Builder() .setContentTitle("2 new messages wtih " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_message) .setLargeIcon(aBitmap) .setStyle(new Notification.MessagingStyle(resources.getString(R.string.reply_name)) .addMessage(messages[0].getText(), messages[0].getTime(), messages[0].getSender()) .addMessage(messages[1].getText(), messages[1].getTime(), messages[1].getSender())) .build(); </pre> </br></br></br><pre><code>public static class NotificationCompat.MessagingStyle</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.MessagingStyle.html
NotificationCompat.MessagingStyle.Message	A										<section class="prog__container"><pre><code>public static final class NotificationCompat.MessagingStyle.Message</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.MessagingStyle.Message.html
NotificationCompat.Style	A										<section class="prog__container">An object that can apply a rich notification style to a <pre><code>Notification.Action.Builder</code></pre> object. <br> If the platform does not provide rich notification styles, methods in this class have no effect. </br><pre><code>public static abstract class NotificationCompat.Style</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Style.html
NotificationCompat.WearableExtender	A										<section class="prog__container">Helper class to add wearable extensions to notifications. <p class="note"> See Creating Notifications for Android Wear for more information on how to use this class.<pre><code>public static final class NotificationCompat.WearableExtender</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html
NotificationCompatExtras	A										<section class="prog__container">Well-known extras used by <pre><code>NotificationCompat</code></pre> for backwards compatibility.<pre><code>public final class NotificationCompatExtras</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompatExtras.html
NotificationCompatSideChannelService	A										<section class="prog__container">Abstract service to receive side channel notifications sent from <pre><code>NotificationManagerCompat</code></pre>.<pre><code>public abstract class NotificationCompatSideChannelService</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompatSideChannelService.html
NotificationManagerCompat	A										<section class="prog__container">Compatibility library for NotificationManager with fallbacks for older platforms.<pre><code>public final class NotificationManagerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationManagerCompat.html
RemoteInput.Builder	A										<section class="prog__container">Builder class for <pre><code>RemoteInput</code></pre> objects.<pre><code>public static final class RemoteInput.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/RemoteInput.Builder.html
RemoteInput	A										<section class="prog__container">Helper for using the <pre><code>RemoteInput</code></pre> API introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class RemoteInput</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/RemoteInput.html
ServiceCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Service</code></pre> introduced after API level 9 in a backwards compatible fashion.<pre><code>public final class ServiceCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ServiceCompat.html
ShareCompat	A										<section class="prog__container">Extra helper functionality for sharing data between activities. ShareCompat provides functionality to extend the <pre><code>ACTION_SEND</code></pre>/ <pre><code>ACTION_SEND_MULTIPLE</code></pre> protocol and support retrieving more info about the activity that invoked a social sharing action. <pre><code>ShareCompat.IntentBuilder</code></pre> provides helper functions for constructing a sharing intent that always includes data about the calling activity and app. This lets the called activity provide attribution for the app that shared content. Constructing an intent this way can be done in a method-chaining style. To obtain an IntentBuilder with info about your calling activity, use the static method <pre><code>from(Activity)</code></pre>. <pre><code>ShareCompat.IntentReader</code></pre> provides helper functions for parsing the defined extras within an <pre><code>ACTION_SEND</code></pre> or <pre><code>ACTION_SEND_MULTIPLE</code></pre> intent used to launch an activity. You can also obtain a Drawable for the caller's application icon and the application's localized label (the app's human-readable name). Social apps that enable sharing content are encouraged to use this information to call out the app that the content was shared from.<pre><code>public final class ShareCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ShareCompat.html
ShareCompat.IntentBuilder	A										<section class="prog__container">IntentBuilder is a helper for constructing <pre><code>ACTION_SEND</code></pre> and <pre><code>ACTION_SEND_MULTIPLE</code></pre> sharing intents and starting activities to share content. The ComponentName and package name of the calling activity will be included.<pre><code>public static class ShareCompat.IntentBuilder</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html
ShareCompat.IntentReader	A										<section class="prog__container">IntentReader is a helper for reading the data contained within a sharing (ACTION_SEND) Intent. It provides methods to parse standard elements included with a share in addition to extra metadata about the app that shared the content.<pre><code>public static class ShareCompat.IntentReader</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html
SharedElementCallback	A										<section class="prog__container">Listener provided in <pre><code>setEnterSharedElementCallback(SharedElementCallback)</code></pre> and <pre><code>setExitSharedElementCallback(SharedElementCallback)</code></pre> to monitor the Activity transitions. The events can be used to customize Activity Transition behavior.<pre><code>public abstract class SharedElementCallback</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/SharedElementCallback.html
SharedElementCallback.OnSharedElementsReadyListener	A										<section class="prog__container">Listener to be called after <pre><code>onSharedElementsArrived(List, List, OnSharedElementsReadyListener)</code></pre> when the shared elements are ready to be hidden in the source Activity and shown in the destination Activity.<pre><code>public static interface SharedElementCallback.OnSharedElementsReadyListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/SharedElementCallback.OnSharedElementsReadyListener.html
TaskStackBuilder	A										<section class="prog__container">Utility class for constructing synthetic back stacks for cross-task navigation on Android 3.0 and newer.<pre><code>public final class TaskStackBuilder</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html
TaskStackBuilder.SupportParentable	A										<section class="prog__container"><pre><code>public static interface TaskStackBuilder.SupportParentable</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.SupportParentable.html
AsyncTaskLoader	A										<section class="prog__container">Static library support version of the framework's <pre><code>AsyncTaskLoader</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public abstract class AsyncTaskLoader</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/AsyncTaskLoader.html
ContentResolverCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>ContentResolver</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class ContentResolverCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/ContentResolverCompat.html
ContextCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Context</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public class ContextCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/ContextCompat.html
CursorLoader	A										<section class="prog__container">Static library support version of the framework's <pre><code>CursorLoader</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public class CursorLoader</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/CursorLoader.html
FileProvider	A										<section class="prog__container">FileProvider is a special subclass of <pre><code>ContentProvider</code></pre> that facilitates secure sharing of files associated with an app by creating a <pre><code>content://</code></pre> <pre><code>Uri</code></pre> for a file instead of a <pre><code>file:///</code></pre> <pre><code>Uri</code></pre>.<pre><code>public class FileProvider</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/FileProvider.html
IntentCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Intent</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class IntentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/IntentCompat.html
Loader.ForceLoadContentObserver	A										<section class="prog__container">An implementation of a ContentObserver that takes care of connecting it to the Loader to have the loader re-load its data when the observer is told it has changed. You do not normally need to use this yourself; it is used for you by <pre><code>CursorLoader</code></pre> to take care of executing an update when the cursor's backing data changes.<pre><code>public final class Loader.ForceLoadContentObserver</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/Loader.ForceLoadContentObserver.html
Loader	A										<section class="prog__container">Static library support version of the framework's <pre><code>Loader</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public class Loader</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/Loader.html
Loader.OnLoadCanceledListener	A										<section class="prog__container">Interface that is implemented to discover when a Loader has been canceled before it finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <pre><code>LoaderManager</code></pre> to find out when a Loader it is managing has been canceled so that it can schedule the next Loader. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.<pre><code>public static interface Loader.OnLoadCanceledListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/Loader.OnLoadCanceledListener.html
Loader.OnLoadCompleteListener	A										<section class="prog__container">Interface that is implemented to discover when a Loader has finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <pre><code>LoaderManager</code></pre> to find out when a Loader it is managing has completed so that this can be reported to its client. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.<pre><code>public static interface Loader.OnLoadCompleteListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/Loader.OnLoadCompleteListener.html
LocalBroadcastManager	A										<section class="prog__container">Helper to register for and send broadcasts of Intents to local objects within your process. This has a number of advantages over sending global broadcasts with <pre><code>sendBroadcast(Intent)</code></pre>: <ul> <li> You know that the data you are broadcasting won't leave your app, so don't need to worry about leaking private data. <li> It is not possible for other applications to send these broadcasts to your app, so you don't need to worry about having security holes they can exploit. <li> It is more efficient than sending a global broadcast through the system. </li></li></li></ul><pre><code>public final class LocalBroadcastManager</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/LocalBroadcastManager.html
ParallelExecutorCompat	A										<section class="prog__container">Helper for accessing a shared parallel Executor instance introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class ParallelExecutorCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/ParallelExecutorCompat.html
PermissionChecker	A										<section class="prog__container">This class provides permission check APIs that verify both the permission and the associated app op for this permission if such is defined.<pre><code>public final class PermissionChecker</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/PermissionChecker.html
PermissionChecker.PermissionResult	A										<section class="prog__container"><pre><code>public static abstract @interface PermissionChecker.PermissionResult</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/PermissionChecker.PermissionResult.html
SharedPreferencesCompat.EditorCompat	A										<section class="prog__container"><pre><code>public static final class SharedPreferencesCompat.EditorCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/SharedPreferencesCompat.EditorCompat.html
SharedPreferencesCompat	A										<section class="prog__container"><pre><code>public final class SharedPreferencesCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/SharedPreferencesCompat.html
WakefulBroadcastReceiver	A										<section class="prog__container">Helper for the common pattern of implementing a <pre><code>BroadcastReceiver</code></pre> that receives a device wakeup event and then passes the work off to a <pre><code>Service</code></pre>, while ensuring that the device does not go back to sleep during the transition.<pre><code>public abstract class WakefulBroadcastReceiver</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/WakefulBroadcastReceiver.html
ActivityInfoCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>ActivityInfo</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class ActivityInfoCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/pm/ActivityInfoCompat.html
ConfigurationHelper	A										<section class="prog__container">Helper class which allows access to properties of <pre><code>Configuration</code></pre> in a backward compatible fashion.<pre><code>public final class ConfigurationHelper</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/res/ConfigurationHelper.html
ResourcesCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Resources</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class ResourcesCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/res/ResourcesCompat.html
DatabaseUtilsCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>DatabaseUtils</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class DatabaseUtilsCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/database/DatabaseUtilsCompat.html
BitmapCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Bitmap</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class BitmapCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/graphics/BitmapCompat.html
ColorUtils	A										<section class="prog__container">A set of color-related utility methods, building upon those available in <pre><code>Color</code></pre>.<pre><code>public final class ColorUtils</code></pre></section>	https://developer.android.com/reference/android/support/v4/graphics/ColorUtils.html
DrawableCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Drawable</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class DrawableCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/graphics/drawable/DrawableCompat.html
RoundedBitmapDrawable	A										<section class="prog__container">A Drawable that wraps a bitmap and can be drawn with rounded corners. You can create a RoundedBitmapDrawable from a file path, an input stream, or from a <pre><code>Bitmap</code></pre> object.<pre><code>public abstract class RoundedBitmapDrawable</code></pre></section>	https://developer.android.com/reference/android/support/v4/graphics/drawable/RoundedBitmapDrawable.html
RoundedBitmapDrawableFactory	A										<section class="prog__container">Constructs <pre><code>RoundedBitmapDrawable</code></pre> objects, either from Bitmaps directly, or from streams and files.<pre><code>public final class RoundedBitmapDrawableFactory</code></pre></section>	https://developer.android.com/reference/android/support/v4/graphics/drawable/RoundedBitmapDrawableFactory.html
DisplayManagerCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>DisplayManager</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public abstract class DisplayManagerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/hardware/display/DisplayManagerCompat.html
FingerprintManagerCompat.AuthenticationCallback	A										<section class="prog__container">Callback structure provided to <pre><code>authenticate(CryptoObject, int, CancellationSignal, AuthenticationCallback, Handler)</code></pre>. Users of <pre><code>authenticate(CryptoObject, int, CancellationSignal, AuthenticationCallback, Handler)</code></pre> must provide an implementation of this for listening to fingerprint events.<pre><code>public static abstract class FingerprintManagerCompat.AuthenticationCallback</code></pre></section>	https://developer.android.com/reference/android/support/v4/hardware/fingerprint/FingerprintManagerCompat.AuthenticationCallback.html
FingerprintManagerCompat.AuthenticationResult	A										<section class="prog__container">Container for callback data from <pre><code>authenticate(CryptoObject, int, CancellationSignal, AuthenticationCallback, Handler)</code></pre>.<pre><code>public static final class FingerprintManagerCompat.AuthenticationResult</code></pre></section>	https://developer.android.com/reference/android/support/v4/hardware/fingerprint/FingerprintManagerCompat.AuthenticationResult.html
FingerprintManagerCompat.CryptoObject	A										<section class="prog__container">A wrapper class for the crypto objects supported by FingerprintManager. Currently the framework supports <pre><code>Signature</code></pre> and <pre><code>Cipher</code></pre> objects.<pre><code>public static class FingerprintManagerCompat.CryptoObject</code></pre></section>	https://developer.android.com/reference/android/support/v4/hardware/fingerprint/FingerprintManagerCompat.CryptoObject.html
FingerprintManagerCompat	A										<section class="prog__container">A class that coordinates access to the fingerprint hardware.<pre><code>public final class FingerprintManagerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/hardware/fingerprint/FingerprintManagerCompat.html
MediaBrowserCompat.ConnectionCallback	A										<section class="prog__container">Callbacks for connection related events.<pre><code>public static class MediaBrowserCompat.ConnectionCallback</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserCompat.ConnectionCallback.html
MediaBrowserCompat	A										<section class="prog__container">Browses media content offered by a <pre><code>MediaBrowserServiceCompat</code></pre>.<pre><code>public final class MediaBrowserCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserCompat.html
MediaBrowserCompat.ItemCallback	A										<section class="prog__container">Callback for receiving the result of <pre><code>getItem(String, MediaBrowserCompat.ItemCallback)</code></pre>.<pre><code>public static abstract class MediaBrowserCompat.ItemCallback</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserCompat.ItemCallback.html
MediaBrowserCompat.MediaItem	A										<section class="prog__container">A class with information on a single media item for use in browsing media.<pre><code>public static class MediaBrowserCompat.MediaItem</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserCompat.MediaItem.html
MediaBrowserCompat.SubscriptionCallback	A										<section class="prog__container">Callbacks for subscription related events.<pre><code>public static abstract class MediaBrowserCompat.SubscriptionCallback</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserCompat.SubscriptionCallback.html
MediaBrowserServiceCompat.BrowserRoot	A										<section class="prog__container">Contains information that the browser service needs to send to the client when first connected.<pre><code>public static final class MediaBrowserServiceCompat.BrowserRoot</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserServiceCompat.BrowserRoot.html
MediaBrowserServiceCompat	A										<section class="prog__container">Base class for media browse services.<pre><code>public abstract class MediaBrowserServiceCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserServiceCompat.html
MediaBrowserServiceCompat.Result	A										<section class="prog__container">Completion handler for asynchronous callback methods in <pre><code>MediaBrowserServiceCompat</code></pre>.<pre><code>public static class MediaBrowserServiceCompat.Result</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserServiceCompat.Result.html
MediaDescriptionCompat.Builder	A										<section class="prog__container">Builder for <pre><code>MediaDescriptionCompat</code></pre> objects.<pre><code>public static final class MediaDescriptionCompat.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaDescriptionCompat.Builder.html
MediaDescriptionCompat	A										<section class="prog__container">A simple set of metadata for a media item suitable for display. This can be created using the Builder or retrieved from existing metadata using <pre><code>getDescription()</code></pre>.<pre><code>public final class MediaDescriptionCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaDescriptionCompat.html
MediaMetadataCompat.Builder	A										<section class="prog__container">Use to build MediaMetadata objects. The system defined metadata keys must use the appropriate data type.<pre><code>public static final class MediaMetadataCompat.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaMetadataCompat.Builder.html
MediaMetadataCompat	A										<section class="prog__container">Contains metadata about an item, such as the title, artist, etc.<pre><code>public final class MediaMetadataCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/MediaMetadataCompat.html
RatingCompat	A										<section class="prog__container">A class to encapsulate rating information used as content metadata. A rating is defined by its rating style (see <pre><code>RATING_HEART</code></pre>, <pre><code>RATING_THUMB_UP_DOWN</code></pre>, <pre><code>RATING_3_STARS</code></pre>, <pre><code>RATING_4_STARS</code></pre>, <pre><code>RATING_5_STARS</code></pre> or <pre><code>RATING_PERCENTAGE</code></pre>) and the actual rating value (which may be defined as "unrated"), both of which are defined when the rating instance is constructed through one of the factory methods.<pre><code>public final class RatingCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/RatingCompat.html
TransportController	A										<section class="prog__container">Base interface to controlling a media transport. This is the interface for implementing things like on-screen controls: it allows them to request changes in playback, retrieve the current playback state, and monitor for changes to the playback state.<pre><code>public abstract class TransportController</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/TransportController.html
TransportMediator	A										<section class="prog__container">Helper for implementing a media transport control (with play, pause, skip, and other media actions). Takes care of both key events and advanced features like <pre><code>RemoteControlClient</code></pre>. This class is intended to serve as an intermediary between transport controls (whether they be on-screen controls, hardware buttons, remote controls) and the actual player. The player is represented by a single <pre><code>TransportPerformer</code></pre> that must be supplied to this class. On-screen controls that want to control and show the state of the player should do this through calls to the <pre><code>TransportController</code></pre> interface.<pre><code>public class TransportMediator</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/TransportMediator.html
TransportPerformer	A										<section class="prog__container">Implemented by the playback side of the media system, to respond to requests to perform actions and to retrieve its current state. These requests may either come from key events dispatched directly to your UI, or events sent over a media button event receiver that this class keeps active while your window is in focus.<pre><code>public abstract class TransportPerformer</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/TransportPerformer.html
TransportStateListener	A										<section class="prog__container">A listener for playback changes that can be registered with <pre><code>TransportController</code></pre>.<pre><code>public class TransportStateListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/TransportStateListener.html
VolumeProviderCompat.Callback	A										<section class="prog__container">Listens for changes to the volume.<pre><code>public static abstract class VolumeProviderCompat.Callback</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/VolumeProviderCompat.Callback.html
VolumeProviderCompat	A										<section class="prog__container">Handles requests to adjust or set the volume on a session. This is also used to push volume updates back to the session after a request has been handled. You can set a volume provider on a session by calling <pre><code>setPlaybackToRemote(VolumeProviderCompat)</code></pre>.<pre><code>public abstract class VolumeProviderCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/VolumeProviderCompat.html
MediaButtonReceiver	A										<section class="prog__container">A media button receiver receives and helps translate hardware media playback buttons, such as those found on wired and wireless headsets, into the appropriate callbacks in your app.<pre><code>public class MediaButtonReceiver</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaButtonReceiver.html
MediaControllerCompat.Callback	A										<section class="prog__container">Callback for receiving updates on from the session. A Callback can be registered using <pre><code>registerCallback(MediaControllerCompat.Callback)</code></pre><pre><code>public static abstract class MediaControllerCompat.Callback</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaControllerCompat.Callback.html
MediaControllerCompat	A										<section class="prog__container">Allows an app to interact with an ongoing media session. Media buttons and other commands can be sent to the session. A callback may be registered to receive updates from the session, such as metadata and play state changes.<pre><code>public final class MediaControllerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaControllerCompat.html
MediaControllerCompat.PlaybackInfo	A										<section class="prog__container">Holds information about the way volume is handled for this session.<pre><code>public static final class MediaControllerCompat.PlaybackInfo</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaControllerCompat.PlaybackInfo.html
MediaControllerCompat.TransportControls	A										<section class="prog__container">Interface for controlling media playback on a session. This allows an app to send media transport commands to the session.<pre><code>public static abstract class MediaControllerCompat.TransportControls</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaControllerCompat.TransportControls.html
MediaSessionCompat.Callback	A										<section class="prog__container">Receives transport controls, media buttons, and commands from controllers and the system. The callback may be set using <pre><code>setCallback(MediaSessionCompat.Callback)</code></pre>.<pre><code>public static abstract class MediaSessionCompat.Callback</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaSessionCompat.Callback.html
MediaSessionCompat	A										<section class="prog__container">Allows interaction with media controllers, volume keys, media buttons, and transport controls.<pre><code>public class MediaSessionCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaSessionCompat.html
MediaSessionCompat.OnActiveChangeListener	A										<section class="prog__container"><pre><code>public static interface MediaSessionCompat.OnActiveChangeListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaSessionCompat.OnActiveChangeListener.html
MediaSessionCompat.QueueItem	A										<section class="prog__container">A single item that is part of the play queue. It contains a description of the item and its id in the queue.<pre><code>public static final class MediaSessionCompat.QueueItem</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaSessionCompat.QueueItem.html
MediaSessionCompat.Token	A										<section class="prog__container">Represents an ongoing session. This may be passed to apps by the session owner to allow them to create a <pre><code>MediaControllerCompat</code></pre> to communicate with the session.<pre><code>public static final class MediaSessionCompat.Token</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaSessionCompat.Token.html
ParcelableVolumeInfo	A										<section class="prog__container">Convenience class for passing information about the audio configuration of a <pre><code>MediaSessionCompat</code></pre>.<pre><code>public class ParcelableVolumeInfo</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/ParcelableVolumeInfo.html
PlaybackStateCompat.Builder	A										<section class="prog__container">Builder for <pre><code>PlaybackStateCompat</code></pre> objects.<pre><code>public static final class PlaybackStateCompat.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/PlaybackStateCompat.Builder.html
PlaybackStateCompat.CustomAction.Builder	A										<section class="prog__container">Builder for <pre><code>PlaybackStateCompat.CustomAction</code></pre> objects.<pre><code>public static final class PlaybackStateCompat.CustomAction.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/PlaybackStateCompat.CustomAction.Builder.html
PlaybackStateCompat.CustomAction	A										<section class="prog__container"><pre><code>CustomActions</code></pre> can be used to extend the capabilities of the standard transport controls by exposing app specific actions to <pre><code>Controllers</code></pre>.<pre><code>public static final class PlaybackStateCompat.CustomAction</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/PlaybackStateCompat.CustomAction.html
PlaybackStateCompat	A										<section class="prog__container">Playback state for a <pre><code>MediaSessionCompat</code></pre>. This includes a state like <pre><code>STATE_PLAYING</code></pre>, the current playback position, and the current control capabilities.<pre><code>public final class PlaybackStateCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/PlaybackStateCompat.html
ConnectivityManagerCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>ConnectivityManager</code></pre> introduced after API level 16 in a backwards compatible fashion.<pre><code>public final class ConnectivityManagerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/net/ConnectivityManagerCompat.html
TrafficStatsCompat	A										<section class="prog__container">Helper for accessing features in TrafficStats introduced after API level 14 in a backwards compatible fashion.<pre><code>public final class TrafficStatsCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/net/TrafficStatsCompat.html
AsyncTaskCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>AsyncTask</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class AsyncTaskCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/os/AsyncTaskCompat.html
BuildCompat	A										<section class="prog__container">BuildCompat contains additional platform version checking methods for testing compatibility with new features.<pre><code>public class BuildCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/os/BuildCompat.html
CancellationSignal	A										<section class="prog__container">Static library support version of the framework's <pre><code>CancellationSignal</code></pre>. Used to write apps that run on platforms prior to Android 4.1. See the framework SDK documentation for a class overview.<pre><code>public final class CancellationSignal</code></pre></section>	https://developer.android.com/reference/android/support/v4/os/CancellationSignal.html
CancellationSignal.OnCancelListener	A										<section class="prog__container">Listens for cancellation.<pre><code>public static interface CancellationSignal.OnCancelListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/os/CancellationSignal.OnCancelListener.html
EnvironmentCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Environment</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class EnvironmentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/os/EnvironmentCompat.html
OperationCanceledException	A										<section class="prog__container">An exception type that is thrown when an operation in progress is canceled.<pre><code>public class OperationCanceledException</code></pre></section>	https://developer.android.com/reference/android/support/v4/os/OperationCanceledException.html
ParcelableCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Parcelable</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class ParcelableCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/os/ParcelableCompat.html
ParcelableCompatCreatorCallbacks	A										<section class="prog__container">Callbacks a <pre><code>Parcelable</code></pre> creator should implement.<pre><code>public interface ParcelableCompatCreatorCallbacks</code></pre></section>	https://developer.android.com/reference/android/support/v4/os/ParcelableCompatCreatorCallbacks.html
TraceCompat	A										<section class="prog__container">Writes trace events to the system trace buffer. These trace events can be collected and visualized using the Systrace tool.<pre><code>public final class TraceCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/os/TraceCompat.html
UserManagerCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>UserManager</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public class UserManagerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/os/UserManagerCompat.html
PrintHelper	A										<section class="prog__container">Helper for printing bitmaps.<pre><code>public final class PrintHelper</code></pre></section>	https://developer.android.com/reference/android/support/v4/print/PrintHelper.html
PrintHelper.OnPrintFinishCallback	A										<section class="prog__container">Callback for observing when a print operation is completed. When print is finished either the system acquired the document to print or printing was cancelled.<pre><code>public static interface PrintHelper.OnPrintFinishCallback</code></pre></section>	https://developer.android.com/reference/android/support/v4/print/PrintHelper.OnPrintFinishCallback.html
DocumentFile	A										<section class="prog__container">Representation of a document backed by either a <pre><code>DocumentsProvider</code></pre> or a raw file on disk. This is a utility class designed to emulate the traditional <pre><code>File</code></pre> interface. It offers a simplified view of a tree of documents, but it has substantial overhead. For optimal performance and a richer feature set, use the <pre><code>DocumentsContract</code></pre> methods and constants directly.<pre><code>public abstract class DocumentFile</code></pre></section>	https://developer.android.com/reference/android/support/v4/provider/DocumentFile.html
BidiFormatter.Builder	A										<section class="prog__container">A class for building a BidiFormatter with non-default options.<pre><code>public static final class BidiFormatter.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v4/text/BidiFormatter.Builder.html
BidiFormatter	A										<section class="prog__container">Utility class for formatting text for display in a potentially opposite-directionality context without garbling. The directionality of the context is set at formatter creation and the directionality of the text can be either estimated or passed in when known. Provides the following functionality:<pre><code>public final class BidiFormatter</code></pre></section>	https://developer.android.com/reference/android/support/v4/text/BidiFormatter.html
ICUCompat	A										<section class="prog__container"><pre><code>public final class ICUCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/text/ICUCompat.html
TextDirectionHeuristicCompat	A										<section class="prog__container">Interface for objects that use a heuristic for guessing at the paragraph direction by examining text.<pre><code>public interface TextDirectionHeuristicCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/text/TextDirectionHeuristicCompat.html
TextDirectionHeuristicsCompat	A										<section class="prog__container">Some objects that implement TextDirectionHeuristic.<pre><code>public final class TextDirectionHeuristicsCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/text/TextDirectionHeuristicsCompat.html
TextUtilsCompat	A										<section class="prog__container"><pre><code>public final class TextUtilsCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/text/TextUtilsCompat.html
LinkifyCompat	A										<section class="prog__container">LinkifyCompat brings in <pre><code>Linkify</code></pre> improvements for URLs and email addresses to older API levels.<pre><code>public final class LinkifyCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/text/util/LinkifyCompat.html
LinkifyCompat.LinkifyMask	A										<section class="prog__container"><pre><code>public static abstract @interface LinkifyCompat.LinkifyMask</code></pre></section>	https://developer.android.com/reference/android/support/v4/text/util/LinkifyCompat.LinkifyMask.html
ArrayMap	A										<section class="prog__container">ArrayMap is a generic key-&gt;value mapping data structure that is designed to be more memory efficient than a traditional <pre><code>HashMap</code></pre>, this implementation is a version of the platform's <pre><code>ArrayMap</code></pre> that can be used on older versions of the platform. It keeps its mappings in an array data structure -- an integer array of hash codes for each item, and an Object array of the key/value pairs. This allows it to avoid having to create an extra object for every entry put in to the map, and it also tries to control the growth of the size of these arrays more aggressively (since growing them only requires copying the entries in the array, not rebuilding a hash map).<pre><code>public class ArrayMap</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/ArrayMap.html
ArraySet	A										<section class="prog__container">ArraySet is a generic set data structure that is designed to be more memory efficient than a traditional <pre><code>HashSet</code></pre>. The design is very similar to <pre><code>ArrayMap</code></pre>, with all of the caveats described there. This implementation is separate from ArrayMap, however, so the Object array contains only one item for each entry in the set (instead of a pair for a mapping).<pre><code>public final class ArraySet</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/ArraySet.html
AtomicFile	A										<section class="prog__container">Static library support version of the framework's <pre><code>AtomicFile</code></pre>, a helper class for performing atomic operations on a file by creating a backup file until a write has successfully completed.<pre><code>public class AtomicFile</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/AtomicFile.html
CircularArray	A										<section class="prog__container">CircularArray is a generic circular array data structure that provides O(1) random read, O(1) prepend and O(1) append. The CircularArray automatically grows its capacity when number of added items is over its capacity.<pre><code>public final class CircularArray</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/CircularArray.html
CircularIntArray	A										<section class="prog__container">CircularIntArray is a circular integer array data structure that provides O(1) random read, O(1) prepend and O(1) append. The CircularIntArray automatically grows its capacity when number of added integers is over its capacity.<pre><code>public final class CircularIntArray</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/CircularIntArray.html
LongSparseArray	A										<section class="prog__container">SparseArray mapping longs to Objects, a version of the platform's <pre><code>LongSparseArray</code></pre> that can be used on older versions of the platform. Unlike a normal array of Objects, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Longs to Objects, both because it avoids auto-boxing keys and its data structure doesn't rely on an extra entry object for each mapping.<pre><code>public class LongSparseArray</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/LongSparseArray.html
LruCache	A										<section class="prog__container">Static library version of <pre><code>LruCache</code></pre>. Used to write apps that run on API levels prior to 12. When running on API level 12 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public class LruCache</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/LruCache.html
Pair	A										<section class="prog__container">Container to ease passing around a tuple of two objects. This object provides a sensible implementation of equals(), returning true if equals() is true on each of the contained objects.<pre><code>public class Pair</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/Pair.html
PatternsCompat	A										<section class="prog__container">Commonly used regular expression patterns.<pre><code>public final class PatternsCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/PatternsCompat.html
Pools	A										<section class="prog__container">Helper class for creating pools of objects. An example use looks like this: <pre> public class MyPooledClass { private static final SynchronizedPool<mypooledclass> sPool = new SynchronizedPool<mypooledclass>(10); public static MyPooledClass obtain() { MyPooledClass instance = sPool.acquire(); return (instance != null) ? instance : new MyPooledClass(); } public void recycle() { // Clear state if needed. sPool.release(this); } . . . } </mypooledclass></mypooledclass></pre><pre><code>public final class Pools</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/Pools.html
Pools.Pool	A										<section class="prog__container">Interface for managing a pool of objects.<pre><code>public static interface Pools.Pool</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/Pools.Pool.html
Pools.SimplePool	A										<section class="prog__container">Simple (non-synchronized) pool of objects.<pre><code>public static class Pools.SimplePool</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/Pools.SimplePool.html
Pools.SynchronizedPool	A										<section class="prog__container">Synchronized) pool of objects.<pre><code>public static class Pools.SynchronizedPool</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/Pools.SynchronizedPool.html
SimpleArrayMap	A										<section class="prog__container">Base implementation of <pre><code>ArrayMap</code></pre> that doesn't include any standard Java container API interoperability. These features are generally heavier-weight ways to interact with the container, so discouraged, but they can be useful to make it easier to use as a drop-in replacement for HashMap. If you don't need them, this class can be preferrable since it doesn't bring in any of the implementation of those APIs, allowing that code to be stripped by ProGuard.<pre><code>public class SimpleArrayMap</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/SimpleArrayMap.html
SparseArrayCompat	A										<section class="prog__container">A copy of the current platform (currently <pre><code>KITKAT</code></pre> version of <pre><code>SparseArray</code></pre>; provides a removeAt() method and other things.<pre><code>public class SparseArrayCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/util/SparseArrayCompat.html
AbsSavedState	A										<section class="prog__container">A <pre><code>Parcelable</code></pre> implementation that should be used by inheritance hierarchies to ensure the state of all classes along the chain is saved.<pre><code>public abstract class AbsSavedState</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/AbsSavedState.html
AccessibilityDelegateCompat	A										<section class="prog__container">Helper for accessing <pre><code>View.AccessibilityDelegate</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public class AccessibilityDelegateCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html
ActionProvider	A										<section class="prog__container">This class is a mediator for accomplishing a given task, for example sharing a file. It is responsible for creating a view that performs an action that accomplishes the task. This class also implements other functions such a performing a default action. <p class="note"><strong>Note:</strong> This class is included in the support library for compatibility with API level 4 and higher. If you're developing your app for API level 14 and higher <em>only</em>, you should instead use the framework <pre><code>ActionProvider</code></pre> class.<pre><code>public abstract class ActionProvider</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ActionProvider.html
ActionProvider.VisibilityListener	A										<section class="prog__container">Listens to changes in visibility as reported by <pre><code>refreshVisibility()</code></pre>.<pre><code>public static interface ActionProvider.VisibilityListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ActionProvider.VisibilityListener.html
AsyncLayoutInflater	A										<section class="prog__container"><pre><code>public final class AsyncLayoutInflater</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/AsyncLayoutInflater.html
AsyncLayoutInflater.OnInflateFinishedListener	A										<section class="prog__container"><pre><code>public static interface AsyncLayoutInflater.OnInflateFinishedListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/AsyncLayoutInflater.OnInflateFinishedListener.html
GestureDetectorCompat	A										<section class="prog__container">Detects various gestures and events using the supplied <pre><code>MotionEvent</code></pre>s. The <pre><code>GestureDetector.OnGestureListener</code></pre> callback will notify users when a particular motion event has occurred. This class should only be used with <pre><code>MotionEvent</code></pre>s reported via touch (don't use for trackball events).<pre><code>public final class GestureDetectorCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/GestureDetectorCompat.html
GravityCompat	A										<section class="prog__container">Compatibility shim for accessing newer functionality from <pre><code>Gravity</code></pre>.<pre><code>public final class GravityCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/GravityCompat.html
InputDeviceCompat	A										<section class="prog__container">Helper class for accessing values in <pre><code>InputDevice</code></pre>.<pre><code>public final class InputDeviceCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/InputDeviceCompat.html
KeyEventCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>KeyEvent</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class KeyEventCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/KeyEventCompat.html
LayoutInflaterCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>LayoutInflater</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class LayoutInflaterCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/LayoutInflaterCompat.html
LayoutInflaterFactory	A										<section class="prog__container">Used with <pre><code>LayoutInflaterCompat.setFactory()</code></pre>. Offers the same API as <pre><code>LayoutInflater.Factory2</code></pre>.<pre><code>public interface LayoutInflaterFactory</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/LayoutInflaterFactory.html
MarginLayoutParamsCompat	A										<section class="prog__container">Helper for accessing API features in <pre><code>MarginLayoutParams</code></pre> added after API 4.<pre><code>public final class MarginLayoutParamsCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/MarginLayoutParamsCompat.html
MenuCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Menu</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class MenuCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/MenuCompat.html
MenuItemCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>MenuItem</code></pre> introduced after API level 4 in a backwards compatible fashion. <p class="note"><strong>Note:</strong> You cannot get an instance of this class. Instead, it provides <em>static</em> methods that correspond to the methods in <pre><code>MenuItem</code></pre>, but take a <pre><code>MenuItem</code></pre> object as an additional argument.<pre><code>public final class MenuItemCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/MenuItemCompat.html
MenuItemCompat.OnActionExpandListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a menu item marked with <pre><code>SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW</code></pre> is expanded or collapsed.<pre><code>public static interface MenuItemCompat.OnActionExpandListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/MenuItemCompat.OnActionExpandListener.html
MotionEventCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>MotionEvent</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class MotionEventCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/MotionEventCompat.html
NestedScrollingChild	A										<section class="prog__container">This interface should be implemented by <pre><code>View</code></pre> subclasses that wish to support dispatching nested scrolling operations to a cooperating parent <pre><code>ViewGroup</code></pre>.<pre><code>public interface NestedScrollingChild</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/NestedScrollingChild.html
NestedScrollingChildHelper	A										<section class="prog__container">Helper class for implementing nested scrolling child views compatible with Android platform versions earlier than Android 5.0 Lollipop (API 21).<pre><code>public class NestedScrollingChildHelper</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/NestedScrollingChildHelper.html
NestedScrollingParent	A										<section class="prog__container">This interface should be implemented by <pre><code>ViewGroup</code></pre> subclasses that wish to support scrolling operations delegated by a nested child view.<pre><code>public interface NestedScrollingParent</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/NestedScrollingParent.html
NestedScrollingParentHelper	A										<section class="prog__container">Helper class for implementing nested scrolling parent views compatible with Android platform versions earlier than Android 5.0 Lollipop (API 21).<pre><code>public class NestedScrollingParentHelper</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/NestedScrollingParentHelper.html
OnApplyWindowInsetsListener	A										<section class="prog__container">Listener for applying window insets on a view in a custom way.<pre><code>public interface OnApplyWindowInsetsListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/OnApplyWindowInsetsListener.html
PagerAdapter	A										<section class="prog__container">Base class providing the adapter to populate pages inside of a <pre><code>ViewPager</code></pre>. You will most likely want to use a more specific implementation of this, such as <pre><code>FragmentPagerAdapter</code></pre> or <pre><code>FragmentStatePagerAdapter</code></pre>.<pre><code>public abstract class PagerAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/PagerAdapter.html
PagerTabStrip	A										<section class="prog__container">PagerTabStrip is an interactive indicator of the current, next, and previous pages of a <pre><code>ViewPager</code></pre>. It is intended to be used as a child view of a ViewPager widget in your XML layout. Add it as a child of a ViewPager in your layout file and set its android:layout_gravity to TOP or BOTTOM to pin it to the top or bottom of the ViewPager. The title from each page is supplied by the method <pre><code>getPageTitle(int)</code></pre> in the adapter supplied to the ViewPager.<pre><code>public class PagerTabStrip</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/PagerTabStrip.html
PagerTitleStrip	A										<section class="prog__container">PagerTitleStrip is a non-interactive indicator of the current, next, and previous pages of a <pre><code>ViewPager</code></pre>. It is intended to be used as a child view of a ViewPager widget in your XML layout. Add it as a child of a ViewPager in your layout file and set its android:layout_gravity to TOP or BOTTOM to pin it to the top or bottom of the ViewPager. The title from each page is supplied by the method <pre><code>getPageTitle(int)</code></pre> in the adapter supplied to the ViewPager.<pre><code>public class PagerTitleStrip</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/PagerTitleStrip.html
PointerIconCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>PointerIcon</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class PointerIconCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/PointerIconCompat.html
ScaleGestureDetectorCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>ScaleGestureDetector</code></pre> introduced after API level 19 (KitKat) in a backwards compatible fashion.<pre><code>public final class ScaleGestureDetectorCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ScaleGestureDetectorCompat.html
ScrollingView	A										<section class="prog__container">An interface that can be implemented by Views to provide scroll related APIs.<pre><code>public interface ScrollingView</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ScrollingView.html
TintableBackgroundView	A										<section class="prog__container">Interface which allows a <pre><code>View</code></pre> to receive background tinting calls from <pre><code>ViewCompat</code></pre> when running on API v20 devices or lower.<pre><code>public interface TintableBackgroundView</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/TintableBackgroundView.html
VelocityTrackerCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>VelocityTracker</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class VelocityTrackerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/VelocityTrackerCompat.html
ViewCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>View</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public class ViewCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewCompat.html
ViewConfigurationCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>ViewConfiguration</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class ViewConfigurationCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewConfigurationCompat.html
ViewGroupCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>ViewGroup</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class ViewGroupCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewGroupCompat.html
ViewPager.DecorView	A										<section class="prog__container">Annotation which allows marking of views to be decoration views when added to a view pager.<pre><code>public static abstract @interface ViewPager.DecorView</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.DecorView.html
ViewPager	A										<section class="prog__container">Layout manager that allows the user to flip left and right through pages of data. You supply an implementation of a <pre><code>PagerAdapter</code></pre> to generate the pages that the view shows.<pre><code>public class ViewPager</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.html
ViewPager.LayoutParams	A										<section class="prog__container">Layout parameters that should be supplied for views added to a ViewPager.<pre><code>public static class ViewPager.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.LayoutParams.html
ViewPager.OnAdapterChangeListener	A										<section class="prog__container">Callback interface for responding to adapter changes.<pre><code>public static interface ViewPager.OnAdapterChangeListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.OnAdapterChangeListener.html
ViewPager.OnPageChangeListener	A										<section class="prog__container">Callback interface for responding to changing state of the selected page.<pre><code>public static interface ViewPager.OnPageChangeListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.OnPageChangeListener.html
ViewPager.PageTransformer	A										<section class="prog__container">A PageTransformer is invoked whenever a visible/attached page is scrolled. This offers an opportunity for the application to apply a custom transformation to the page views using animation properties.<pre><code>public static interface ViewPager.PageTransformer</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.PageTransformer.html
ViewPager.SavedState	A										<section class="prog__container">This is the persistent state that is saved by ViewPager. Only needed if you are creating a sublass of ViewPager that must save its own state, in which case it should implement a subclass of this which contains that state.<pre><code>public static class ViewPager.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.SavedState.html
ViewPager.SimpleOnPageChangeListener	A										<section class="prog__container">Simple implementation of the <pre><code>ViewPager.OnPageChangeListener</code></pre> interface with stub implementations of each method. Extend this if you do not intend to override every method of <pre><code>ViewPager.OnPageChangeListener</code></pre>.<pre><code>public static class ViewPager.SimpleOnPageChangeListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.SimpleOnPageChangeListener.html
ViewParentCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>ViewParent</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class ViewParentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewParentCompat.html
ViewPropertyAnimatorCompat	A										<section class="prog__container"><pre><code>public final class ViewPropertyAnimatorCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPropertyAnimatorCompat.html
ViewPropertyAnimatorListener	A										<section class="prog__container"><pre><code>public interface ViewPropertyAnimatorListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPropertyAnimatorListener.html
ViewPropertyAnimatorListenerAdapter	A										<section class="prog__container">This adapter class provides empty implementations of the methods from <pre><code>ViewPropertyAnimatorListener</code></pre>. Any custom listener that cares only about a subset of the methods of this listener can simply subclass this adapter class instead of implementing the interface directly.<pre><code>public class ViewPropertyAnimatorListenerAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPropertyAnimatorListenerAdapter.html
ViewPropertyAnimatorUpdateListener	A										<section class="prog__container">Implementors of this interface can add themselves as update listeners to an <pre><code>ViewPropertyAnimatorCompat</code></pre> instance to receive callbacks on every animation frame, after the current frame's values have been calculated for that <pre><code>ViewPropertyAnimatorCompat</code></pre>.<pre><code>public interface ViewPropertyAnimatorUpdateListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPropertyAnimatorUpdateListener.html
WindowCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>Window</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class WindowCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/WindowCompat.html
WindowInsetsCompat	A										<section class="prog__container">Describes a set of insets for window content.<pre><code>public class WindowInsetsCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/WindowInsetsCompat.html
AccessibilityEventCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>AccessibilityEvent</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class AccessibilityEventCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityEventCompat.html
AccessibilityManagerCompat.AccessibilityStateChangeListener	A										<section class="prog__container">Listener for the accessibility state.<pre><code>public static interface AccessibilityManagerCompat.AccessibilityStateChangeListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityManagerCompat.AccessibilityStateChangeListener.html
AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Use <pre><code>AccessibilityManagerCompat.AccessibilityStateChangeListener</code></pre> instead.<pre><code>public static abstract class AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat.html
AccessibilityManagerCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>AccessibilityManager</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class AccessibilityManagerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityManagerCompat.html
AccessibilityManagerCompat.TouchExplorationStateChangeListener	A										<section class="prog__container">Listener for the system touch exploration state. To listen for changes to the touch exploration state on the device, implement this interface and register it with the system by calling <pre><code>addTouchExplorationStateChangeListener(AccessibilityManager, AccessibilityManagerCompat.TouchExplorationStateChangeListener)</code></pre>.<pre><code>public static interface AccessibilityManagerCompat.TouchExplorationStateChangeListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityManagerCompat.TouchExplorationStateChangeListener.html
AccessibilityNodeInfoCompat.AccessibilityActionCompat	A										<section class="prog__container"><pre><code>public static class AccessibilityNodeInfoCompat.AccessibilityActionCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeInfoCompat.AccessibilityActionCompat.html
AccessibilityNodeInfoCompat.CollectionInfoCompat	A										<section class="prog__container">Class with information if a node is a collection.<pre><code>public static class AccessibilityNodeInfoCompat.CollectionInfoCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeInfoCompat.CollectionInfoCompat.html
AccessibilityNodeInfoCompat.CollectionItemInfoCompat	A										<section class="prog__container">Class with information if a node is a collection item.<pre><code>public static class AccessibilityNodeInfoCompat.CollectionItemInfoCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeInfoCompat.CollectionItemInfoCompat.html
AccessibilityNodeInfoCompat	A										<section class="prog__container">Helper for accessing <pre><code>AccessibilityNodeInfo</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public class AccessibilityNodeInfoCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeInfoCompat.html
AccessibilityNodeInfoCompat.RangeInfoCompat	A										<section class="prog__container">Class with information if a node is a range.<pre><code>public static class AccessibilityNodeInfoCompat.RangeInfoCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeInfoCompat.RangeInfoCompat.html
AccessibilityNodeProviderCompat	A										<section class="prog__container">Helper for accessing <pre><code>AccessibilityNodeProvider</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public class AccessibilityNodeProviderCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeProviderCompat.html
AccessibilityRecordCompat	A										<section class="prog__container">Helper for accessing <pre><code>AccessibilityRecord</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public class AccessibilityRecordCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityRecordCompat.html
AccessibilityWindowInfoCompat	A										<section class="prog__container">Helper for accessing <pre><code>AccessibilityWindowInfo</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public class AccessibilityWindowInfoCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityWindowInfoCompat.html
FastOutLinearInInterpolator	A										<section class="prog__container">Interpolator corresponding to <pre><code>fast_out_linear_in</code></pre>. Uses a lookup table for the Bezier curve from (0,0) to (1,1) with control points: P0 (0, 0) P1 (0.4, 0) P2 (1.0, 1.0) P3 (1.0, 1.0)<pre><code>public class FastOutLinearInInterpolator</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/animation/FastOutLinearInInterpolator.html
FastOutSlowInInterpolator	A										<section class="prog__container">Interpolator corresponding to <pre><code>fast_out_slow_in</code></pre>. Uses a lookup table for the Bezier curve from (0,0) to (1,1) with control points: P0 (0, 0) P1 (0.4, 0) P2 (0.2, 1.0) P3 (1.0, 1.0)<pre><code>public class FastOutSlowInInterpolator</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/animation/FastOutSlowInInterpolator.html
LinearOutSlowInInterpolator	A										<section class="prog__container">Interpolator corresponding to <pre><code>linear_out_slow_in</code></pre>. Uses a lookup table for the Bezier curve from (0,0) to (1,1) with control points: P0 (0, 0) P1 (0, 0) P2 (0.2, 1.0) P3 (1.0, 1.0)<pre><code>public class LinearOutSlowInInterpolator</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/animation/LinearOutSlowInInterpolator.html
PathInterpolatorCompat	A										<section class="prog__container">Helper for creating path-based <pre><code>Interpolator</code></pre> instances. On API 21 or newer, the platform implementation will be used and on older platforms a compatible alternative implementation will be used.<pre><code>public final class PathInterpolatorCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/animation/PathInterpolatorCompat.html
AutoScrollHelper	A										<section class="prog__container">AutoScrollHelper is a utility class for adding automatic edge-triggered scrolling to Views.<pre><code>public abstract class AutoScrollHelper</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/AutoScrollHelper.html
CompoundButtonCompat	A										<section class="prog__container">Helper for accessing <pre><code>CompoundButton</code></pre> methods introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class CompoundButtonCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/CompoundButtonCompat.html
ContentLoadingProgressBar	A										<section class="prog__container">ContentLoadingProgressBar implements a ProgressBar that waits a minimum time to be dismissed before showing. Once visible, the progress bar will be visible for a minimum amount of time to avoid "flashes" in the UI when an event could take a largely variable time to complete (from none, to a user perceivable amount)<pre><code>public class ContentLoadingProgressBar</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/ContentLoadingProgressBar.html
CursorAdapter	A										<section class="prog__container">Static library support version of the framework's <pre><code>CursorAdapter</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public abstract class CursorAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/CursorAdapter.html
DrawerLayout.DrawerListener	A										<section class="prog__container">Listener for monitoring events about drawers.<pre><code>public static interface DrawerLayout.DrawerListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/DrawerLayout.DrawerListener.html
DrawerLayout	A										<section class="prog__container">DrawerLayout acts as a top-level container for window content that allows for interactive "drawer" views to be pulled out from one or both vertical edges of the window.<pre><code>public class DrawerLayout</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/DrawerLayout.html
DrawerLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class DrawerLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/DrawerLayout.LayoutParams.html
DrawerLayout.SavedState	A										<section class="prog__container">State persisted across instances<pre><code>protected static class DrawerLayout.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/DrawerLayout.SavedState.html
DrawerLayout.SimpleDrawerListener	A										<section class="prog__container">Stub/no-op implementations of all methods of <pre><code>DrawerLayout.DrawerListener</code></pre>. Override this if you only care about a few of the available callback methods.<pre><code>public static abstract class DrawerLayout.SimpleDrawerListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/DrawerLayout.SimpleDrawerListener.html
EdgeEffectCompat	A										<section class="prog__container">Helper for accessing <pre><code>EdgeEffect</code></pre> introduced after API level 4 in a backwards compatible fashion. This class is used to access <pre><code>EdgeEffect</code></pre> on platform versions that support it. When running on older platforms it will result in no-ops. It should be used by views that wish to use the standard Android visual effects at the edges of scrolling containers.<pre><code>public final class EdgeEffectCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/EdgeEffectCompat.html
ExploreByTouchHelper	A										<section class="prog__container">ExploreByTouchHelper is a utility class for implementing accessibility support in custom <pre><code>View</code></pre>s that represent a collection of View-like logical items. It extends <pre><code>AccessibilityNodeProviderCompat</code></pre> and simplifies many aspects of providing information to accessibility services and managing accessibility focus. This class does not currently support hierarchies of logical items.<pre><code>public abstract class ExploreByTouchHelper</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/ExploreByTouchHelper.html
ListPopupWindowCompat	A										<section class="prog__container">Helper for accessing features in ListPopupWindow introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class ListPopupWindowCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/ListPopupWindowCompat.html
ListViewAutoScrollHelper	A										<section class="prog__container">An implementation of <pre><code>AutoScrollHelper</code></pre> that knows how to scroll through a <pre><code>ListView</code></pre>.<pre><code>public class ListViewAutoScrollHelper</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/ListViewAutoScrollHelper.html
ListViewCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>ListView</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class ListViewCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/ListViewCompat.html
NestedScrollView	A										<section class="prog__container">NestedScrollView is just like <pre><code>ScrollView</code></pre>, but it supports acting as both a nested scrolling parent and child on both new and old versions of Android. Nested scrolling is enabled by default.<pre><code>public class NestedScrollView</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/NestedScrollView.html
NestedScrollView.OnScrollChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the scroll X or Y positions of a view change.<pre><code>public static interface NestedScrollView.OnScrollChangeListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/NestedScrollView.OnScrollChangeListener.html
PopupMenuCompat	A										<section class="prog__container">Helper for accessing features in PopupMenu introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class PopupMenuCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/PopupMenuCompat.html
PopupWindowCompat	A										<section class="prog__container">Helper for accessing features in PopupWindow introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class PopupWindowCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/PopupWindowCompat.html
ResourceCursorAdapter	A										<section class="prog__container">Static library support version of the framework's <pre><code>ResourceCursorAdapter</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public abstract class ResourceCursorAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/ResourceCursorAdapter.html
ScrollerCompat	A										<section class="prog__container">Provides access to new <pre><code>Scroller</code></pre> APIs when available.<pre><code>public final class ScrollerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/ScrollerCompat.html
SearchViewCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>SearchView</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class SearchViewCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SearchViewCompat.html
SearchViewCompat.OnCloseListener	A										<section class="prog__container">Callback for closing the query UI.<pre><code>public static interface SearchViewCompat.OnCloseListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SearchViewCompat.OnCloseListener.html
SearchViewCompat.OnCloseListenerCompat	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Use <pre><code>SearchViewCompat.OnCloseListener</code></pre> instead.<pre><code>public static abstract class SearchViewCompat.OnCloseListenerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SearchViewCompat.OnCloseListenerCompat.html
SearchViewCompat.OnQueryTextListener	A										<section class="prog__container">Callbacks for changes to the query text.<pre><code>public static interface SearchViewCompat.OnQueryTextListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SearchViewCompat.OnQueryTextListener.html
SearchViewCompat.OnQueryTextListenerCompat	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Use <pre><code>SearchViewCompat.OnQueryTextListener</code></pre> instead.<pre><code>public static abstract class SearchViewCompat.OnQueryTextListenerCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SearchViewCompat.OnQueryTextListenerCompat.html
SimpleCursorAdapter.CursorToStringConverter	A										<section class="prog__container">This class can be used by external clients of SimpleCursorAdapter to define how the Cursor should be converted to a String.<pre><code>public static interface SimpleCursorAdapter.CursorToStringConverter</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SimpleCursorAdapter.CursorToStringConverter.html
SimpleCursorAdapter	A										<section class="prog__container">Static library support version of the framework's <pre><code>SimpleCursorAdapter</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public class SimpleCursorAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SimpleCursorAdapter.html
SimpleCursorAdapter.ViewBinder	A										<section class="prog__container">This class can be used by external clients of SimpleCursorAdapter to bind values fom the Cursor to views. You should use this class to bind values from the Cursor to views that are not directly supported by SimpleCursorAdapter or to change the way binding occurs for views supported by SimpleCursorAdapter.<pre><code>public static interface SimpleCursorAdapter.ViewBinder</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SimpleCursorAdapter.ViewBinder.html
SlidingPaneLayout	A										<section class="prog__container">SlidingPaneLayout provides a horizontal, multi-pane layout for use at the top level of a UI. A left (or first) pane is treated as a content list or browser, subordinate to a primary detail view for displaying content.<pre><code>public class SlidingPaneLayout</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html
SlidingPaneLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class SlidingPaneLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.LayoutParams.html
SlidingPaneLayout.PanelSlideListener	A										<section class="prog__container">Listener for monitoring events about sliding panes.<pre><code>public static interface SlidingPaneLayout.PanelSlideListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.PanelSlideListener.html
SlidingPaneLayout.SimplePanelSlideListener	A										<section class="prog__container">No-op stubs for <pre><code>SlidingPaneLayout.PanelSlideListener</code></pre>. If you only want to implement a subset of the listener methods you can extend this instead of implement the full interface.<pre><code>public static class SlidingPaneLayout.SimplePanelSlideListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.SimplePanelSlideListener.html
Space	A										<section class="prog__container">Space is a lightweight <pre><code>View</code></pre> subclass that may be used to create gaps between components in general purpose layouts.<pre><code>public class Space</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/Space.html
SwipeRefreshLayout	A										<section class="prog__container">The SwipeRefreshLayout should be used whenever the user can refresh the contents of a view via a vertical swipe gesture. The activity that instantiates this view should add an OnRefreshListener to be notified whenever the swipe to refresh gesture is completed. The SwipeRefreshLayout will notify the listener each and every time the gesture is completed again; the listener is responsible for correctly determining when to actually initiate a refresh of its content. If the listener determines there should not be a refresh, it must call setRefreshing(false) to cancel any visual indication of a refresh. If an activity wishes to show just the progress animation, it should call setRefreshing(true). To disable the gesture and progress animation, call setEnabled(false) on the view.<pre><code>public class SwipeRefreshLayout</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.html
SwipeRefreshLayout.OnChildScrollUpCallback	A										<section class="prog__container">Classes that wish to override <pre><code>canChildScrollUp()</code></pre> method behavior should implement this interface.<pre><code>public static interface SwipeRefreshLayout.OnChildScrollUpCallback</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.OnChildScrollUpCallback.html
SwipeRefreshLayout.OnRefreshListener	A										<section class="prog__container">Classes that wish to be notified when the swipe gesture correctly triggers a refresh should implement this interface.<pre><code>public static interface SwipeRefreshLayout.OnRefreshListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.OnRefreshListener.html
TextViewCompat	A										<section class="prog__container">Helper for accessing features in <pre><code>TextView</code></pre> introduced after API level 4 in a backwards compatible fashion.<pre><code>public final class TextViewCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/TextViewCompat.html
TintableCompoundButton	A										<section class="prog__container">Interface which allows a <pre><code>CompoundButton</code></pre> to receive tinting calls from <pre><code>CompoundButtonCompat</code></pre> when running on API v20 devices or lower.<pre><code>public interface TintableCompoundButton</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/TintableCompoundButton.html
ViewDragHelper.Callback	A										<section class="prog__container">A Callback is used as a communication channel with the ViewDragHelper back to the parent view using it. <pre><code>on*</code></pre>methods are invoked on siginficant events and several accessor methods are expected to provide the ViewDragHelper with more information about the state of the parent view upon request. The callback also makes decisions governing the range and draggability of child views.<pre><code>public static abstract class ViewDragHelper.Callback</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html
ViewDragHelper	A										<section class="prog__container">ViewDragHelper is a utility class for writing custom ViewGroups. It offers a number of useful operations and state tracking for allowing a user to drag and reposition views within their parent ViewGroup.<pre><code>public class ViewDragHelper</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.html
ActionBar	A										<section class="prog__container">A primary toolbar within the activity that may display the activity title, application-level navigation affordances, and other interactive items.<pre><code>public abstract class ActionBar</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.html
ActionBar.LayoutParams	A										<section class="prog__container">Per-child layout information associated with action bar custom views.<pre><code>public static class ActionBar.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.LayoutParams.html
ActionBar.OnMenuVisibilityListener	A										<section class="prog__container">Listener for receiving events when action bar menus are shown or hidden.<pre><code>public static interface ActionBar.OnMenuVisibilityListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.OnMenuVisibilityListener.html
ActionBar.OnNavigationListener	A										<section class="prog__container"><p class="caution"><strong> This interface is deprecated.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.<pre><code>public static interface ActionBar.OnNavigationListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.OnNavigationListener.html
ActionBar.Tab	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.<pre><code>public static abstract class ActionBar.Tab</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.Tab.html
ActionBar.TabListener	A										<section class="prog__container"><p class="caution"><strong> This interface is deprecated.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.<pre><code>public static interface ActionBar.TabListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.TabListener.html
ActionBarActivity	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Use <pre><code>AppCompatActivity</code></pre> instead.<pre><code>public class ActionBarActivity</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/ActionBarActivity.html
ActionBarDrawerToggle.Delegate	A										<section class="prog__container"><pre><code>public static interface ActionBarDrawerToggle.Delegate</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/ActionBarDrawerToggle.Delegate.html
ActionBarDrawerToggle.DelegateProvider	A										<section class="prog__container">Allows an implementing Activity to return an <pre><code>ActionBarDrawerToggle.Delegate</code></pre> to use with ActionBarDrawerToggle.<pre><code>public static interface ActionBarDrawerToggle.DelegateProvider</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/ActionBarDrawerToggle.DelegateProvider.html
ActionBarDrawerToggle	A										<section class="prog__container">This class provides a handy way to tie together the functionality of <pre><code>DrawerLayout</code></pre> and the framework <pre><code>ActionBar</code></pre> to implement the recommended design for navigation drawers.<pre><code>public class ActionBarDrawerToggle</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/ActionBarDrawerToggle.html
AlertDialog.Builder	A										<section class="prog__container"><pre><code>public static class AlertDialog.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/AlertDialog.Builder.html
AlertDialog	A										<section class="prog__container">A subclass of Dialog that can display one, two or three buttons. If you only want to display a String in this dialog box, use the setMessage() method. If you want to display a more complex view, look up the FrameLayout called "custom" and add your view to it: <pre> FrameLayout fl = (FrameLayout) findViewById(android.R.id.custom); fl.addView(myView, new LayoutParams(MATCH_PARENT, WRAP_CONTENT)); </pre><pre><code>public class AlertDialog</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/AlertDialog.html
AppCompatActivity	A										<section class="prog__container">Base class for activities that use the support library action bar features.<pre><code>public class AppCompatActivity</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/AppCompatActivity.html
AppCompatCallback	A										<section class="prog__container">Implemented this in order for AppCompat to be able to callback in certain situations.<pre><code>public interface AppCompatCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/AppCompatCallback.html
AppCompatDelegate	A										<section class="prog__container">This class represents a delegate which you can use to extend AppCompat's support to any <pre><code>Activity</code></pre>.<pre><code>public abstract class AppCompatDelegate</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/AppCompatDelegate.html
AppCompatDialog	A										<section class="prog__container">Base class for AppCompat themed <pre><code>Dialog</code></pre>s.<pre><code>public class AppCompatDialog</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/AppCompatDialog.html
AppCompatDialogFragment	A										<section class="prog__container">A special version of <pre><code>DialogFragment</code></pre> which uses an <pre><code>AppCompatDialog</code></pre> in place of a platform-styled dialog.<pre><code>public class AppCompatDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/AppCompatDialogFragment.html
MediaRouteActionProvider	A										<section class="prog__container">The media route action provider displays a <pre><code>media route button</code></pre> in the application's <pre><code>ActionBar</code></pre> to allow the user to select routes and to control the currently selected route.<pre><code>public class MediaRouteActionProvider</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteActionProvider.html
MediaRouteButton	A										<section class="prog__container">The media route button allows the user to select routes and to control the currently selected route.<pre><code>public class MediaRouteButton</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteButton.html
MediaRouteChooserDialog	A										<section class="prog__container">This class implements the route chooser dialog for <pre><code>MediaRouter</code></pre>.<pre><code>public class MediaRouteChooserDialog</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteChooserDialog.html
MediaRouteChooserDialogFragment	A										<section class="prog__container">Media route chooser dialog fragment.<pre><code>public class MediaRouteChooserDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteChooserDialogFragment.html
MediaRouteControllerDialog	A										<section class="prog__container">This class implements the route controller dialog for <pre><code>MediaRouter</code></pre>.<pre><code>public class MediaRouteControllerDialog</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteControllerDialog.html
MediaRouteControllerDialogFragment	A										<section class="prog__container">Media route controller dialog fragment.<pre><code>public class MediaRouteControllerDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteControllerDialogFragment.html
MediaRouteDialogFactory	A										<section class="prog__container">The media route dialog factory is responsible for creating the media route chooser and controller dialogs as needed.<pre><code>public class MediaRouteDialogFactory</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteDialogFactory.html
MediaRouteDiscoveryFragment	A										<section class="prog__container">Media route discovery fragment.<pre><code>public class MediaRouteDiscoveryFragment</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteDiscoveryFragment.html
NotificationCompat.Builder	A										<section class="prog__container">See <pre><code>NotificationCompat</code></pre>. In addition to the builder in v4, this builder also supports <pre><code>NotificationCompat.MediaStyle</code></pre>.<pre><code>public static class NotificationCompat.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/NotificationCompat.Builder.html
NotificationCompat.DecoratedCustomViewStyle	A										<section class="prog__container">Notification style for custom views that are decorated by the system.<pre><code>public static class NotificationCompat.DecoratedCustomViewStyle</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/NotificationCompat.DecoratedCustomViewStyle.html
NotificationCompat.DecoratedMediaCustomViewStyle	A										<section class="prog__container">Notification style for media custom views that are decorated by the system.<pre><code>public static class NotificationCompat.DecoratedMediaCustomViewStyle</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/NotificationCompat.DecoratedMediaCustomViewStyle.html
NotificationCompat	A										<section class="prog__container">An extension of <pre><code>NotificationCompat</code></pre> which supports <pre><code>NotificationCompat.MediaStyle</code></pre>, <pre><code>NotificationCompat.DecoratedCustomViewStyle</code></pre>, and <pre><code>NotificationCompat.DecoratedMediaCustomViewStyle</code></pre>. You should start using this variant if you need support any of these styles.<pre><code>public class NotificationCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/NotificationCompat.html
NotificationCompat.MediaStyle	A										<section class="prog__container">Notification style for media playback notifications. In the expanded form, <pre><code>bigContentView</code></pre>, up to 5 <pre><code>NotificationCompat.Action</code></pre>s specified with <pre><code>addAction</code></pre> will be shown as icon-only pushbuttons, suitable for transport controls. The Bitmap given to <pre><code>setLargeIcon()</code></pre> will be treated as album artwork. Unlike the other styles provided here, MediaStyle can also modify the standard-size <pre><code>contentView</code></pre>; by providing action indices to <pre><code>setShowActionsInCompactView(int)</code></pre> you can promote up to 3 actions to be displayed in the standard view alongside the usual content. Notifications created with MediaStyle will have their category set to <pre><code>CATEGORY_TRANSPORT</code></pre> unless you set a different category using <pre><code>setCategory()</code></pre>. Finally, if you attach a <pre><code>MediaSession.Token</code></pre> using <pre><code>setMediaSession(MediaSessionCompat.Token)</code></pre>, the System UI can identify this as a notification representing an active media session and respond accordingly (by showing album artwork in the lockscreen, for example). To use this style with your Notification, feed it to <pre><code>setStyle(NotificationCompat.Style)</code></pre> like so: <pre class="prettyprint"> Notification noti = new NotificationCompat.Builder() .setSmallIcon(R.drawable.ic_stat_player) .setContentTitle("Track title") .setContentText("Artist - Album") .setLargeIcon(albumArtBitmap)) .setStyle(<b>new NotificationCompat.MediaStyle()</b> .setMediaSession(mySession)) .build(); </pre><pre><code>public static class NotificationCompat.MediaStyle</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/NotificationCompat.MediaStyle.html
R.anim	A										<section class="prog__container"><pre><code>public static final class R.anim</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.anim.html
R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.attr.html
R.bool	A										<section class="prog__container"><pre><code>public static final class R.bool</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.bool.html
R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.color.html
R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.dimen.html
R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.drawable.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.html
R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.id.html
R.integer	A										<section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.integer.html
R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.layout.html
R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.string.html
R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.style.html
R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.styleable.html
R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.attr.html
R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.color.html
R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.dimen.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.html
R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.style.html
R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.styleable.html
AppCompatResources	A										<section class="prog__container">Class for accessing an application's resources through AppCompat, and thus any backward compatible functionality.<pre><code>public final class AppCompatResources</code></pre></section>	https://developer.android.com/reference/android/support/v7/content/res/AppCompatResources.html
Palette.Builder	A										<section class="prog__container">Builder class for generating <pre><code>Palette</code></pre> instances.<pre><code>public static final class Palette.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v7/graphics/Palette.Builder.html
Palette.Filter	A										<section class="prog__container">A Filter provides a mechanism for exercising fine-grained control over which colors are valid within a resulting <pre><code>Palette</code></pre>.<pre><code>public static interface Palette.Filter</code></pre></section>	https://developer.android.com/reference/android/support/v7/graphics/Palette.Filter.html
Palette	A										<section class="prog__container">A helper class to extract prominent colors from an image.<pre><code>public final class Palette</code></pre></section>	https://developer.android.com/reference/android/support/v7/graphics/Palette.html
Palette.PaletteAsyncListener	A										<section class="prog__container">Listener to be used with <pre><code>generateAsync(Bitmap, PaletteAsyncListener)</code></pre> or <pre><code>generateAsync(Bitmap, int, PaletteAsyncListener)</code></pre><pre><code>public static interface Palette.PaletteAsyncListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/graphics/Palette.PaletteAsyncListener.html
Palette.Swatch	A										<section class="prog__container">Represents a color swatch generated from an image's palette. The RGB color can be retrieved by calling <pre><code>getRgb()</code></pre>.<pre><code>public static final class Palette.Swatch</code></pre></section>	https://developer.android.com/reference/android/support/v7/graphics/Palette.Swatch.html
Target.Builder	A										<section class="prog__container">Builder class for generating custom <pre><code>Target</code></pre> instances.<pre><code>public static final class Target.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v7/graphics/Target.Builder.html
Target	A										<section class="prog__container">A class which allows custom selection of colors in a <pre><code>Palette</code></pre>'s generation. Instances can be created via the <pre><code>Target.Builder</code></pre> class.<pre><code>public final class Target</code></pre></section>	https://developer.android.com/reference/android/support/v7/graphics/Target.html
DrawerArrowDrawable	A										<section class="prog__container">A drawable that can draw a "Drawer hamburger" menu or an arrow and animate between them.<pre><code>public class DrawerArrowDrawable</code></pre></section>	https://developer.android.com/reference/android/support/v7/graphics/drawable/DrawerArrowDrawable.html
R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/gridlayout/R.attr.html
R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/gridlayout/R.dimen.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/gridlayout/R.html
R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v7/gridlayout/R.id.html
R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/gridlayout/R.styleable.html
MediaControlIntent	A										<section class="prog__container">Constants for media control intents.<pre><code>public final class MediaControlIntent</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaControlIntent.html
MediaItemMetadata	A										<section class="prog__container">Constants for specifying metadata about a media item as a <pre><code>Bundle</code></pre>.<pre><code>public final class MediaItemMetadata</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaItemMetadata.html
MediaItemStatus.Builder	A										<section class="prog__container">Builder for <pre><code>media item status objects</code></pre>.<pre><code>public static final class MediaItemStatus.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaItemStatus.Builder.html
MediaItemStatus	A										<section class="prog__container">Describes the playback status of a media item.<pre><code>public final class MediaItemStatus</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaItemStatus.html
MediaRouteDescriptor.Builder	A										<section class="prog__container">Builder for <pre><code>media route descriptors</code></pre>.<pre><code>public static final class MediaRouteDescriptor.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteDescriptor.Builder.html
MediaRouteDescriptor	A										<section class="prog__container">Describes the properties of a route.<pre><code>public final class MediaRouteDescriptor</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteDescriptor.html
MediaRouteDiscoveryRequest	A										<section class="prog__container">Describes the kinds of routes that the media router would like to discover and whether to perform active scanning.<pre><code>public final class MediaRouteDiscoveryRequest</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteDiscoveryRequest.html
MediaRouteProvider.Callback	A										<section class="prog__container">Callback which is invoked when route information becomes available or changes.<pre><code>public static abstract class MediaRouteProvider.Callback</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProvider.Callback.html
MediaRouteProvider	A										<section class="prog__container">Media route providers are used to publish additional media routes for use within an application. Media route providers may also be declared as a service to publish additional media routes to all applications in the system.<pre><code>public abstract class MediaRouteProvider</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProvider.html
MediaRouteProvider.ProviderMetadata	A										<section class="prog__container">Describes properties of the route provider's implementation.<pre><code>public static final class MediaRouteProvider.ProviderMetadata</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProvider.ProviderMetadata.html
MediaRouteProvider.RouteController	A										<section class="prog__container">Provides control over a particular route.<pre><code>public static abstract class MediaRouteProvider.RouteController</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProvider.RouteController.html
MediaRouteProviderDescriptor.Builder	A										<section class="prog__container">Builder for <pre><code>media route provider descriptors</code></pre>.<pre><code>public static final class MediaRouteProviderDescriptor.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProviderDescriptor.Builder.html
MediaRouteProviderDescriptor	A										<section class="prog__container">Describes the state of a media route provider and the routes that it publishes.<pre><code>public final class MediaRouteProviderDescriptor</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProviderDescriptor.html
MediaRouteProviderService	A										<section class="prog__container">Base class for media route provider services.<pre><code>public abstract class MediaRouteProviderService</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProviderService.html
MediaRouter.Callback	A										<section class="prog__container">Interface for receiving events about media routing changes. All methods of this interface will be called from the application's main thread.<pre><code>public static abstract class MediaRouter.Callback</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouter.Callback.html
MediaRouter.ControlRequestCallback	A										<section class="prog__container">Callback which is invoked with the result of a media control request.<pre><code>public static abstract class MediaRouter.ControlRequestCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouter.ControlRequestCallback.html
MediaRouter	A										<section class="prog__container">MediaRouter allows applications to control the routing of media channels and streams from the current device to external speakers and destination devices.<pre><code>public final class MediaRouter</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouter.html
MediaRouter.ProviderInfo	A										<section class="prog__container">Provides information about a media route provider.<pre><code>public static final class MediaRouter.ProviderInfo</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouter.ProviderInfo.html
MediaRouter.RouteInfo	A										<section class="prog__container">Provides information about a media route.<pre><code>public static class MediaRouter.RouteInfo</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouter.RouteInfo.html
MediaRouteSelector.Builder	A										<section class="prog__container">Builder for <pre><code>media route selectors</code></pre>.<pre><code>public static final class MediaRouteSelector.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteSelector.Builder.html
MediaRouteSelector	A										<section class="prog__container">Describes the capabilities of routes that applications would like to discover and use.<pre><code>public final class MediaRouteSelector</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteSelector.html
MediaSessionStatus.Builder	A										<section class="prog__container">Builder for <pre><code>media session status objects</code></pre>.<pre><code>public static final class MediaSessionStatus.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaSessionStatus.Builder.html
MediaSessionStatus	A										<section class="prog__container">Describes the playback status of a media session.<pre><code>public final class MediaSessionStatus</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/MediaSessionStatus.html
android.support.v7.media	A										<section class="prog__container">Contains APIs that control the routing of media channels and streams from the current device to external speakers and destination devices.</section>	https://developer.android.com/reference/android/support/v7/media/package-summary.html
RemotePlaybackClient.ActionCallback	A										<section class="prog__container">Base callback type for remote playback requests.<pre><code>public static abstract class RemotePlaybackClient.ActionCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.ActionCallback.html
RemotePlaybackClient	A										<section class="prog__container">A helper class for playing media on remote routes using the remote playback protocol defined by <pre><code>MediaControlIntent</code></pre>.<pre><code>public class RemotePlaybackClient</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.html
RemotePlaybackClient.ItemActionCallback	A										<section class="prog__container">Callback for remote playback requests that operate on items.<pre><code>public static abstract class RemotePlaybackClient.ItemActionCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.ItemActionCallback.html
RemotePlaybackClient.OnMessageReceivedListener	A										<section class="prog__container">A callback that will receive messages from media sessions.<pre><code>public static interface RemotePlaybackClient.OnMessageReceivedListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.OnMessageReceivedListener.html
RemotePlaybackClient.SessionActionCallback	A										<section class="prog__container">Callback for remote playback requests that operate on sessions.<pre><code>public static abstract class RemotePlaybackClient.SessionActionCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.SessionActionCallback.html
RemotePlaybackClient.StatusCallback	A										<section class="prog__container">A callback that will receive media status updates.<pre><code>public static abstract class RemotePlaybackClient.StatusCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.StatusCallback.html
R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.attr.html
R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.dimen.html
R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.drawable.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.html
R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.id.html
R.integer	A										<section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.integer.html
R.interpolator	A										<section class="prog__container"><pre><code>public static final class R.interpolator</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.interpolator.html
R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.layout.html
R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.string.html
R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.style.html
R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.styleable.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/palette/R.html
CheckBoxPreference	A										<section class="prog__container">A <pre><code>Preference</code></pre> that provides checkbox widget functionality.<pre><code>public class CheckBoxPreference</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/CheckBoxPreference.html
DialogPreference	A										<section class="prog__container">A base class for <pre><code>Preference</code></pre> objects that are dialog-based. These preferences will, when clicked, open a dialog showing the actual preference controls.<pre><code>public abstract class DialogPreference</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/DialogPreference.html
DialogPreference.TargetFragment	A										<section class="prog__container"><pre><code>public static interface DialogPreference.TargetFragment</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/DialogPreference.TargetFragment.html
DropDownPreference	A										<section class="prog__container">A version of <pre><code>ListPreference</code></pre> that presents the options in a drop down menu rather than a dialog.<pre><code>public class DropDownPreference</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/DropDownPreference.html
EditTextPreference	A										<section class="prog__container">A <pre><code>Preference</code></pre> that allows for string input.<pre><code>public class EditTextPreference</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/EditTextPreference.html
EditTextPreferenceDialogFragmentCompat	A										<section class="prog__container"><pre><code>public class EditTextPreferenceDialogFragmentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/EditTextPreferenceDialogFragmentCompat.html
ListPreference	A										<section class="prog__container">A <pre><code>Preference</code></pre> that displays a list of entries as a dialog.<pre><code>public class ListPreference</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/ListPreference.html
ListPreferenceDialogFragmentCompat	A										<section class="prog__container"><pre><code>public class ListPreferenceDialogFragmentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/ListPreferenceDialogFragmentCompat.html
MultiSelectListPreferenceDialogFragmentCompat	A										<section class="prog__container"><pre><code>public class MultiSelectListPreferenceDialogFragmentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/MultiSelectListPreferenceDialogFragmentCompat.html
Preference.BaseSavedState	A										<section class="prog__container">A base class for managing the instance state of a <pre><code>Preference</code></pre>.<pre><code>public static class Preference.BaseSavedState</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/Preference.BaseSavedState.html
Preference	A										<section class="prog__container">Represents the basic Preference UI building block displayed by a <pre><code>PreferenceFragmentCompat</code></pre> in the form of a <pre><code>RecyclerView</code></pre>. This class provides data for the <pre><code>View</code></pre> to be displayed in the list and associates with a <pre><code>SharedPreferences</code></pre> to store/retrieve the preference data.<pre><code>public class Preference</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/Preference.html
Preference.OnPreferenceChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the value of this <pre><code>Preference</code></pre> has been changed by the user and is about to be set and/or persisted. This gives the client a chance to prevent setting and/or persisting the value.<pre><code>public static interface Preference.OnPreferenceChangeListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/Preference.OnPreferenceChangeListener.html
Preference.OnPreferenceClickListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a <pre><code>Preference</code></pre> is clicked.<pre><code>public static interface Preference.OnPreferenceClickListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/Preference.OnPreferenceClickListener.html
PreferenceCategory	A										<section class="prog__container">Used to group <pre><code>Preference</code></pre> objects and provide a disabled title above the group. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class PreferenceCategory</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceCategory.html
PreferenceDialogFragmentCompat	A										<section class="prog__container">Abstract base class which presents a dialog associated with a <pre><code>DialogPreference</code></pre>. Since the preference object may not be available during fragment re-creation, the necessary information for displaying the dialog is read once during the initial call to <pre><code>onCreate(Bundle)</code></pre> and saved/restored in the saved instance state. Custom subclasses should also follow this pattern.<pre><code>public abstract class PreferenceDialogFragmentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceDialogFragmentCompat.html
PreferenceFragmentCompat	A										<section class="prog__container">Shows a hierarchy of <pre><code>Preference</code></pre> objects as lists. These preferences will automatically save to <pre><code>SharedPreferences</code></pre> as the user interacts with them. To retrieve an instance of <pre><code>SharedPreferences</code></pre> that the preference hierarchy in this fragment will use, call <pre><code>getDefaultSharedPreferences(android.content.Context)</code></pre> with a context in the same package as this fragment.<pre><code>public abstract class PreferenceFragmentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceFragmentCompat.html
PreferenceFragmentCompat.OnPreferenceDisplayDialogCallback	A										<section class="prog__container"><pre><code>public static interface PreferenceFragmentCompat.OnPreferenceDisplayDialogCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceFragmentCompat.OnPreferenceDisplayDialogCallback.html
PreferenceFragmentCompat.OnPreferenceStartFragmentCallback	A										<section class="prog__container">Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a specified fragment.<pre><code>public static interface PreferenceFragmentCompat.OnPreferenceStartFragmentCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceFragmentCompat.OnPreferenceStartFragmentCallback.html
PreferenceFragmentCompat.OnPreferenceStartScreenCallback	A										<section class="prog__container">Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a new screen of preferences.<pre><code>public static interface PreferenceFragmentCompat.OnPreferenceStartScreenCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceFragmentCompat.OnPreferenceStartScreenCallback.html
PreferenceGroup	A										<section class="prog__container">A container for multiple <pre><code>Preference</code></pre> objects. It is a base class for Preference objects that are parents, such as <pre><code>PreferenceCategory</code></pre> and <pre><code>PreferenceScreen</code></pre>. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public abstract class PreferenceGroup</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceGroup.html
PreferenceGroup.PreferencePositionCallback	A										<section class="prog__container">Interface for PreferenceGroup Adapters to implement so that <pre><code>scrollToPreference(String)</code></pre> and <pre><code>scrollToPreference(Preference)</code></pre> or <pre><code>scrollToPreference(String)</code></pre> and <pre><code>scrollToPreference(Preference)</code></pre> can determine the correct scroll position to request.<pre><code>public static interface PreferenceGroup.PreferencePositionCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceGroup.PreferencePositionCallback.html
PreferenceManager	A										<section class="prog__container">Used to help create <pre><code>Preference</code></pre> hierarchies from activities or XML.<pre><code>public class PreferenceManager</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.html
PreferenceManager.OnDisplayPreferenceDialogListener	A										<section class="prog__container">Interface definition for a class that will be called when a <pre><code>Preference</code></pre> requests to display a dialog.<pre><code>public static interface PreferenceManager.OnDisplayPreferenceDialogListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.OnDisplayPreferenceDialogListener.html
PreferenceManager.OnNavigateToScreenListener	A										<section class="prog__container">Interface definition for a class that will be called when a <pre><code>PreferenceScreen</code></pre> requests navigation.<pre><code>public static interface PreferenceManager.OnNavigateToScreenListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.OnNavigateToScreenListener.html
PreferenceManager.OnPreferenceTreeClickListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a <pre><code>Preference</code></pre> in the hierarchy rooted at this <pre><code>PreferenceScreen</code></pre> is clicked.<pre><code>public static interface PreferenceManager.OnPreferenceTreeClickListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.OnPreferenceTreeClickListener.html
PreferenceManager.PreferenceComparisonCallback	A										<section class="prog__container">Callback class to be used by the <pre><code>RecyclerView.Adapter</code></pre> associated with the <pre><code>PreferenceScreen</code></pre>, used to determine when two <pre><code>Preference</code></pre> objects are semantically and visually the same.<pre><code>public static abstract class PreferenceManager.PreferenceComparisonCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.PreferenceComparisonCallback.html
PreferenceManager.SimplePreferenceComparisonCallback	A										<section class="prog__container">A basic implementation of <pre><code>PreferenceManager.PreferenceComparisonCallback</code></pre> suitable for use with the default <pre><code>Preference</code></pre> classes. If the <pre><code>PreferenceScreen</code></pre> contains custom <pre><code>Preference</code></pre> subclasses, you must override <pre><code>arePreferenceContentsTheSame(Preference, Preference)</code></pre><pre><code>public static class PreferenceManager.SimplePreferenceComparisonCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.SimplePreferenceComparisonCallback.html
PreferenceScreen	A										<section class="prog__container">Represents a top-level <pre><code>Preference</code></pre> that is the root of a Preference hierarchy. A <pre><code>PreferenceFragmentCompat</code></pre> points to an instance of this class to show the preferences. To instantiate this class, use <pre><code>createPreferenceScreen(android.content.Context)</code></pre>. <ul> This class can appear in two places: <li> When a <pre><code>PreferenceFragmentCompat</code></pre> points to this, it is used as the root and is not shown (only the contained preferences are shown). <li> When it appears inside another preference hierarchy, it is shown and serves as the gateway to another screen of preferences (either by showing another screen of preferences as a <pre><code>Dialog</code></pre> or via a <pre><code>startActivity(android.content.Intent)</code></pre> from the <pre><code>getIntent()</code></pre>). The children of this <pre><code>PreferenceScreen</code></pre> are NOT shown in the screen that this <pre><code>PreferenceScreen</code></pre> is shown in. Instead, a separate screen will be shown when this preference is clicked. </li></li></ul><pre><code>public final class PreferenceScreen</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceScreen.html
PreferenceViewHolder	A										<section class="prog__container">A <pre><code>RecyclerView.ViewHolder</code></pre> class which caches views associated with the default <pre><code>Preference</code></pre> layouts. Cached views can be retrieved by calling <pre><code>findViewById(int)</code></pre>.<pre><code>public class PreferenceViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceViewHolder.html
R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.attr.html
R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.dimen.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.html
R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.id.html
R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.layout.html
R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.string.html
R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.style.html
R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.styleable.html
SeekBarPreference	A										<section class="prog__container">Preference based on android.preference.SeekBarPreference but uses support v7 preference as base. It contains a title and a seekbar and an optional seekbar value TextView. The actual preference layout is customizable by setting <pre><code>android:layout</code></pre> on the preference widget layout or <pre><code>seekBarPreferenceStyle</code></pre> attribute. The seekbar within the preference can be defined adjustable or not by setting <pre><code>adjustable</code></pre> attribute. If adjustable, the preference will be responsive to DPAD left/right keys. Otherwise, it skips those keys. The seekbar value view can be shown or disabled by setting <pre><code>showSeekBarValue</code></pre> attribute to true or false, respectively. Other SeekBar specific attributes (e.g. <pre><code>title, summary, defaultValue, min, max</code></pre>) can be set directly on the preference widget layout.<pre><code>public class SeekBarPreference</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/SeekBarPreference.html
SwitchPreferenceCompat	A										<section class="prog__container">A <pre><code>Preference</code></pre> that provides a two-state toggleable option.<pre><code>public class SwitchPreferenceCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/SwitchPreferenceCompat.html
TwoStatePreference	A										<section class="prog__container">Common base class for preferences that have two selectable states, persist a boolean value in SharedPreferences, and may have dependent preferences that are enabled/disabled based on the current state.<pre><code>public abstract class TwoStatePreference</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/TwoStatePreference.html
R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/recyclerview/R.attr.html
R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/recyclerview/R.dimen.html
R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/recyclerview/R.html
R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v7/recyclerview/R.id.html
R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/recyclerview/R.styleable.html
AsyncListUtil.DataCallback	A										<section class="prog__container">The callback that provides data access for <pre><code>AsyncListUtil</code></pre>.<pre><code>public static abstract class AsyncListUtil.DataCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/util/AsyncListUtil.DataCallback.html
AsyncListUtil	A										<section class="prog__container">A utility class that supports asynchronous content loading.<pre><code>public class AsyncListUtil</code></pre></section>	https://developer.android.com/reference/android/support/v7/util/AsyncListUtil.html
AsyncListUtil.ViewCallback	A										<section class="prog__container">The callback that links <pre><code>AsyncListUtil</code></pre> with the list view.<pre><code>public static abstract class AsyncListUtil.ViewCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/util/AsyncListUtil.ViewCallback.html
BatchingListUpdateCallback	A										<section class="prog__container">Wraps a <pre><code>ListUpdateCallback</code></pre> callback and batches operations that can be merged.<pre><code>public class BatchingListUpdateCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/util/BatchingListUpdateCallback.html
DiffUtil.Callback	A										<section class="prog__container">A Callback class used by DiffUtil while calculating the diff between two lists.<pre><code>public static abstract class DiffUtil.Callback</code></pre></section>	https://developer.android.com/reference/android/support/v7/util/DiffUtil.Callback.html
DiffUtil.DiffResult	A										<section class="prog__container">This class holds the information about the result of a <pre><code>calculateDiff(Callback, boolean)</code></pre> call.<pre><code>public static class DiffUtil.DiffResult</code></pre></section>	https://developer.android.com/reference/android/support/v7/util/DiffUtil.DiffResult.html
DiffUtil	A										<section class="prog__container">DiffUtil is a utility class that can calculate the difference between two lists and output a list of update operations that converts the first list into the second one.<pre><code>public class DiffUtil</code></pre></section>	https://developer.android.com/reference/android/support/v7/util/DiffUtil.html
ListUpdateCallback	A										<section class="prog__container">An interface that can receive Update operations that are applied to a list.<pre><code>public interface ListUpdateCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/util/ListUpdateCallback.html
SortedList.BatchedCallback	A										<section class="prog__container">A callback implementation that can batch notify events dispatched by the SortedList.<pre><code>public static class SortedList.BatchedCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/util/SortedList.BatchedCallback.html
SortedList.Callback	A										<section class="prog__container">The class that controls the behavior of the <pre><code>SortedList</code></pre>.<pre><code>public static abstract class SortedList.Callback</code></pre></section>	https://developer.android.com/reference/android/support/v7/util/SortedList.Callback.html
SortedList	A										<section class="prog__container">A Sorted list implementation that can keep items in order and also notify for changes in the list such that it can be bound to a <pre><code>RecyclerView.Adapter</code></pre>.<pre><code>public class SortedList</code></pre></section>	https://developer.android.com/reference/android/support/v7/util/SortedList.html
ActionMode.Callback	A										<section class="prog__container">Callback interface for action modes. Supplied to <pre><code>startSupportActionMode(Callback)</code></pre> (Callback)}, a Callback configures and handles events raised by a user's interaction with an action mode.<pre><code>public static interface ActionMode.Callback</code></pre></section>	https://developer.android.com/reference/android/support/v7/view/ActionMode.Callback.html
ActionMode	A										<section class="prog__container">Represents a contextual mode of the user interface. Action modes can be used to provide alternative interaction modes and replace parts of the normal UI until finished. Examples of good action modes include text selection and contextual actions. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public abstract class ActionMode</code></pre></section>	https://developer.android.com/reference/android/support/v7/view/ActionMode.html
CollapsibleActionView	A										<section class="prog__container">When a <pre><code>View</code></pre> implements this interface it will receive callbacks when expanded or collapsed as an action view alongside the optional, app-specified callbacks to <pre><code>MenuItemCompat.OnActionExpandListener</code></pre>.<pre><code>public interface CollapsibleActionView</code></pre></section>	https://developer.android.com/reference/android/support/v7/view/CollapsibleActionView.html
ActionMenuView	A										<section class="prog__container">ActionMenuView is a presentation of a series of menu options as a View. It provides several top level options as action buttons while spilling remaining options over as items in an overflow menu. This allows applications to present packs of actions inline with specific or repeating content.<pre><code>public class ActionMenuView</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/ActionMenuView.html
ActionMenuView.LayoutParams	A										<section class="prog__container"><pre><code>public static class ActionMenuView.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/ActionMenuView.LayoutParams.html
ActionMenuView.OnMenuItemClickListener	A										<section class="prog__container">Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.<pre><code>public static interface ActionMenuView.OnMenuItemClickListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/ActionMenuView.OnMenuItemClickListener.html
AppCompatAutoCompleteTextView	A										<section class="prog__container">A <pre><code>AutoCompleteTextView</code></pre> which supports compatible features on older version of the platform, including: <ul> <li>Supports <pre><code>textAllCaps</code></pre> style attribute which works back to <pre><code>Gingerbread</code></pre>.</li> <li>Allows dynamic tint of it background via the background tint methods in <pre><code>ViewCompat</code></pre>.</li> <li>Allows setting of the background tint using <pre><code>backgroundTint</code></pre> and <pre><code>backgroundTintMode</code></pre>.</li> </ul><pre><code>public class AppCompatAutoCompleteTextView</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatAutoCompleteTextView.html
AppCompatButton	A										<section class="prog__container">A <pre><code>Button</code></pre> which supports compatible features on older version of the platform, including: <ul> <li>Supports <pre><code>textAllCaps</code></pre> style attribute which works back to <pre><code>Gingerbread</code></pre>.</li> <li>Allows dynamic tint of it background via the background tint methods in <pre><code>ViewCompat</code></pre>.</li> <li>Allows setting of the background tint using <pre><code>backgroundTint</code></pre> and <pre><code>backgroundTintMode</code></pre>.</li> </ul><pre><code>public class AppCompatButton</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatButton.html
AppCompatCheckBox	A										<section class="prog__container">A <pre><code>CheckBox</code></pre> which supports compatible features on older version of the platform, including: <ul> <li>Allows dynamic tint of it background via the background tint methods in <pre><code>CompoundButtonCompat</code></pre>.</li> <li>Allows setting of the background tint using <pre><code>buttonTint</code></pre> and <pre><code>buttonTintMode</code></pre>.</li> </ul><pre><code>public class AppCompatCheckBox</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatCheckBox.html
AppCompatCheckedTextView	A										<section class="prog__container">A <pre><code>CheckedTextView</code></pre> which supports compatible features on older version of the platform.<pre><code>public class AppCompatCheckedTextView</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatCheckedTextView.html
AppCompatEditText	A										<section class="prog__container">A <pre><code>EditText</code></pre> which supports compatible features on older version of the platform, including: <ul> <li>Supports <pre><code>textAllCaps</code></pre> style attribute which works back to <pre><code>Gingerbread</code></pre>.</li> <li>Allows dynamic tint of it background via the background tint methods in <pre><code>ViewCompat</code></pre>.</li> <li>Allows setting of the background tint using <pre><code>backgroundTint</code></pre> and <pre><code>backgroundTintMode</code></pre>.</li> </ul><pre><code>public class AppCompatEditText</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatEditText.html
AppCompatImageButton	A										<section class="prog__container">A <pre><code>ImageButton</code></pre> which supports compatible features on older version of the platform, including: <ul> <li>Allows dynamic tint of it background via the background tint methods in <pre><code>ViewCompat</code></pre>.</li> <li>Allows setting of the background tint using <pre><code>backgroundTint</code></pre> and <pre><code>backgroundTintMode</code></pre>.</li> </ul><pre><code>public class AppCompatImageButton</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatImageButton.html
AppCompatImageView	A										<section class="prog__container">A <pre><code>ImageView</code></pre> which supports compatible features on older version of the platform, including: <ul> <li>Allows dynamic tint of it background via the background tint methods in <pre><code>ViewCompat</code></pre>.</li> <li>Allows setting of the background tint using <pre><code>backgroundTint</code></pre> and <pre><code>backgroundTintMode</code></pre>.</li> </ul><pre><code>public class AppCompatImageView</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatImageView.html
AppCompatMultiAutoCompleteTextView	A										<section class="prog__container">A <pre><code>MultiAutoCompleteTextView</code></pre> which supports compatible features on older version of the platform, including: <ul> <li>Supports <pre><code>textAllCaps</code></pre> style attribute which works back to <pre><code>Gingerbread</code></pre>.</li> <li>Allows dynamic tint of it background via the background tint methods in <pre><code>ViewCompat</code></pre>.</li> <li>Allows setting of the background tint using <pre><code>backgroundTint</code></pre> and <pre><code>backgroundTintMode</code></pre>.</li> </ul><pre><code>public class AppCompatMultiAutoCompleteTextView</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatMultiAutoCompleteTextView.html
AppCompatRadioButton	A										<section class="prog__container">A <pre><code>RadioButton</code></pre> which supports compatible features on older version of the platform, including: <ul> <li>Allows dynamic tint of it background via the background tint methods in <pre><code>CompoundButtonCompat</code></pre>.</li> <li>Allows setting of the background tint using <pre><code>buttonTint</code></pre> and <pre><code>buttonTintMode</code></pre>.</li> </ul><pre><code>public class AppCompatRadioButton</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatRadioButton.html
AppCompatRatingBar	A										<section class="prog__container">A <pre><code>RatingBar</code></pre> which supports compatible features on older version of the platform.<pre><code>public class AppCompatRatingBar</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatRatingBar.html
AppCompatSeekBar	A										<section class="prog__container">A <pre><code>SeekBar</code></pre> which supports compatible features on older version of the platform.<pre><code>public class AppCompatSeekBar</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatSeekBar.html
AppCompatSpinner	A										<section class="prog__container">A <pre><code>Spinner</code></pre> which supports compatible features on older versions of the platform, including: <ul> <li>Dynamic tinting of the background via the background tint methods in <pre><code>ViewCompat</code></pre>.</li> <li>Configuring the background tint using <pre><code>backgroundTint</code></pre> and <pre><code>backgroundTintMode</code></pre>.</li> <li>Setting the popup theme using <pre><code>popupTheme</code></pre>.</li> </ul><pre><code>public class AppCompatSpinner</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatSpinner.html
AppCompatTextView	A										<section class="prog__container">A <pre><code>TextView</code></pre> which supports compatible features on older version of the platform, including: <ul> <li>Supports <pre><code>textAllCaps</code></pre> style attribute which works back to <pre><code>Gingerbread</code></pre>.</li> <li>Allows dynamic tint of it background via the background tint methods in <pre><code>ViewCompat</code></pre>.</li> <li>Allows setting of the background tint using <pre><code>backgroundTint</code></pre> and <pre><code>backgroundTintMode</code></pre>.</li> </ul><pre><code>public class AppCompatTextView</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatTextView.html
CardView	A										<section class="prog__container">A FrameLayout with a rounded corner background and shadow.<pre><code>public class CardView</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/CardView.html
DefaultItemAnimator	A										<section class="prog__container">This implementation of <pre><code>RecyclerView.ItemAnimator</code></pre> provides basic animations on remove, add, and move events that happen to the items in a RecyclerView. RecyclerView uses a DefaultItemAnimator by default.<pre><code>public class DefaultItemAnimator</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/DefaultItemAnimator.html
DividerItemDecoration	A										<section class="prog__container">DividerItemDecoration is a <pre><code>RecyclerView.ItemDecoration</code></pre> that can be used as a divider between items of a <pre><code>LinearLayoutManager</code></pre>. It supports both <pre><code>HORIZONTAL</code></pre> and <pre><code>VERTICAL</code></pre> orientations. <pre> mDividerItemDecoration = new DividerItemDecoration(recyclerView.getContext(), mLayoutManager.getOrientation()); recyclerView.addItemDecoration(mDividerItemDecoration); </pre><pre><code>public class DividerItemDecoration</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/DividerItemDecoration.html
GridLayout.Alignment	A										<section class="prog__container">Alignments specify where a view should be placed within a cell group and what size it should be.<pre><code>public static abstract class GridLayout.Alignment</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/GridLayout.Alignment.html
GridLayout	A										<section class="prog__container">A layout that places its children in a rectangular <em>grid</em>.<pre><code>public class GridLayout</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/GridLayout.html
GridLayout.LayoutParams	A										<section class="prog__container">Layout information associated with each of the children of a GridLayout.<pre><code>public static class GridLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/GridLayout.LayoutParams.html
GridLayout.Spec	A										<section class="prog__container">A Spec defines the horizontal or vertical characteristics of a group of cells. Each spec. defines the <em>grid indices</em> and <em>alignment</em> along the appropriate axis.<pre><code>public static class GridLayout.Spec</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/GridLayout.Spec.html
GridLayoutManager.DefaultSpanSizeLookup	A										<section class="prog__container">Default implementation for <pre><code>GridLayoutManager.SpanSizeLookup</code></pre>. Each item occupies 1 span.<pre><code>public static final class GridLayoutManager.DefaultSpanSizeLookup</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/GridLayoutManager.DefaultSpanSizeLookup.html
GridLayoutManager	A										<section class="prog__container">A <pre><code>RecyclerView.LayoutManager</code></pre> implementations that lays out items in a grid.<pre><code>public class GridLayoutManager</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/GridLayoutManager.html
GridLayoutManager.LayoutParams	A										<section class="prog__container">LayoutParams used by GridLayoutManager.<pre><code>public static class GridLayoutManager.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/GridLayoutManager.LayoutParams.html
GridLayoutManager.SpanSizeLookup	A										<section class="prog__container">A helper class to provide the number of spans each item occupies.<pre><code>public static abstract class GridLayoutManager.SpanSizeLookup</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/GridLayoutManager.SpanSizeLookup.html
LinearLayoutCompat	A										<section class="prog__container">A Layout that arranges its children in a single column or a single row. The direction of the row can be set by calling <pre><code>setOrientation()</code></pre>. You can also specify gravity, which specifies the alignment of all the child elements by calling <pre><code>setGravity()</code></pre> or specify that specific children grow to fill up any remaining space in the layout by setting the <em>weight</em> member of <pre><code>LinearLayoutCompat.LayoutParams</code></pre>. The default orientation is horizontal.<pre><code>public class LinearLayoutCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/LinearLayoutCompat.html
LinearLayoutCompat.LayoutParams	A										<section class="prog__container">Per-child layout information associated with ViewLinearLayout.<pre><code>public static class LinearLayoutCompat.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/LinearLayoutCompat.LayoutParams.html
LinearLayoutManager	A										<section class="prog__container">A <pre><code>RecyclerView.LayoutManager</code></pre> implementation which provides similar functionality to <pre><code>ListView</code></pre>.<pre><code>public class LinearLayoutManager</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/LinearLayoutManager.html
LinearLayoutManager.LayoutChunkResult	A										<section class="prog__container"><pre><code>protected static class LinearLayoutManager.LayoutChunkResult</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/LinearLayoutManager.LayoutChunkResult.html
LinearSmoothScroller	A										<section class="prog__container"><pre><code>RecyclerView.SmoothScroller</code></pre> implementation which uses a <pre><code>LinearInterpolator</code></pre> until the target position becomes a child of the RecyclerView and then uses a <pre><code>DecelerateInterpolator</code></pre> to slowly approach to target position.<pre><code>public class LinearSmoothScroller</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/LinearSmoothScroller.html
LinearSnapHelper	A										<section class="prog__container">Implementation of the <pre><code>SnapHelper</code></pre> supporting snapping in either vertical or horizontal orientation.<pre><code>public class LinearSnapHelper</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/LinearSnapHelper.html
ListPopupWindow	A										<section class="prog__container">Static library support version of the framework's <pre><code>ListPopupWindow</code></pre>. Used to write apps that run on platforms prior to Android L. When running on Android L or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public class ListPopupWindow</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/ListPopupWindow.html
OrientationHelper	A										<section class="prog__container">Helper class for LayoutManagers to abstract measurements depending on the View's orientation.<pre><code>public abstract class OrientationHelper</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/OrientationHelper.html
PagerSnapHelper	A										<section class="prog__container">Implementation of the <pre><code>SnapHelper</code></pre> supporting pager style snapping in either vertical or horizontal orientation.<pre><code>public class PagerSnapHelper</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/PagerSnapHelper.html
PopupMenu	A										<section class="prog__container">Static library support version of the framework's <pre><code>PopupMenu</code></pre>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.<pre><code>public class PopupMenu</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/PopupMenu.html
PopupMenu.OnDismissListener	A										<section class="prog__container">Callback interface used to notify the application that the menu has closed.<pre><code>public static interface PopupMenu.OnDismissListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/PopupMenu.OnDismissListener.html
PopupMenu.OnMenuItemClickListener	A										<section class="prog__container">Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.<pre><code>public static interface PopupMenu.OnMenuItemClickListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/PopupMenu.OnMenuItemClickListener.html
RecyclerView.Adapter	A										<section class="prog__container">Base class for an Adapter<pre><code>public static abstract class RecyclerView.Adapter</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html
RecyclerView.AdapterDataObserver	A										<section class="prog__container">Observer base class for watching changes to an <pre><code>RecyclerView.Adapter</code></pre>. See <pre><code>registerAdapterDataObserver(AdapterDataObserver)</code></pre>.<pre><code>public static abstract class RecyclerView.AdapterDataObserver</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.AdapterDataObserver.html
RecyclerView.ChildDrawingOrderCallback	A										<section class="prog__container">A callback interface that can be used to alter the drawing order of RecyclerView children.<pre><code>public static interface RecyclerView.ChildDrawingOrderCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ChildDrawingOrderCallback.html
RecyclerView	A										<section class="prog__container">A flexible view for providing a limited window into a large data set. <h3>Glossary of terms:</h3> <ul> <li><em>Adapter:</em> A subclass of <pre><code>RecyclerView.Adapter</code></pre> responsible for providing views that represent items in a data set.</li> <li><em>Position:</em> The position of a data item within an <em>Adapter</em>.</li> <li><em>Index:</em> The index of an attached child view as used in a call to <pre><code>getChildAt(int)</code></pre>. Contrast with <em>Position.</em></li> <li><em>Binding:</em> The process of preparing a child view to display data corresponding to a <em>position</em> within the adapter.</li> <li><em>Recycle (view):</em> A view previously used to display data for a specific adapter position may be placed in a cache for later reuse to display the same type of data again later. This can drastically improve performance by skipping initial layout inflation or construction.</li> <li><em>Scrap (view):</em> A child view that has entered into a temporarily detached state during layout. Scrap views may be reused without becoming fully detached from the parent RecyclerView, either unmodified if no rebinding is required or modified by the adapter if the view was considered <em>dirty</em>.</li> <li><em>Dirty (view):</em> A child view that must be rebound by the adapter before being displayed.</li> </ul> <h4>Positions in RecyclerView:</h4><pre><code>public class RecyclerView</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.html
RecyclerView.ItemAnimator.AdapterChanges	A										<section class="prog__container">The set of flags that might be passed to <pre><code>recordPreLayoutInformation(State, ViewHolder, int, List)</code></pre>.<pre><code>public static abstract @interface RecyclerView.ItemAnimator.AdapterChanges</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ItemAnimator.AdapterChanges.html
RecyclerView.ItemAnimator	A										<section class="prog__container">This class defines the animations that take place on items as changes are made to the adapter. Subclasses of ItemAnimator can be used to implement custom animations for actions on ViewHolder items. The RecyclerView will manage retaining these items while they are being animated, but implementors must call <pre><code>dispatchAnimationFinished(ViewHolder)</code></pre> when a ViewHolder's animation is finished. In other words, there must be a matching <pre><code>dispatchAnimationFinished(ViewHolder)</code></pre> call for each <pre><code>animateAppearance()</code></pre>, <pre><code>animateChange()</code></pre> <pre><code>animatePersistence()</code></pre>, and <pre><code>animateDisappearance()</code></pre> call.<pre><code>public static abstract class RecyclerView.ItemAnimator</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ItemAnimator.html
RecyclerView.ItemAnimator.ItemAnimatorFinishedListener	A										<section class="prog__container">This interface is used to inform listeners when all pending or running animations in an ItemAnimator are finished. This can be used, for example, to delay an action in a data set until currently-running animations are complete.<pre><code>public static interface RecyclerView.ItemAnimator.ItemAnimatorFinishedListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ItemAnimator.ItemAnimatorFinishedListener.html
RecyclerView.ItemAnimator.ItemHolderInfo	A										<section class="prog__container">A simple data structure that holds information about an item's bounds. This information is used in calculating item animations. Default implementation of <pre><code>recordPreLayoutInformation(RecyclerView.State, ViewHolder, int, List)</code></pre> and <pre><code>recordPostLayoutInformation(RecyclerView.State, ViewHolder)</code></pre> returns this data structure. You can extend this class if you would like to keep more information about the Views.<pre><code>public static class RecyclerView.ItemAnimator.ItemHolderInfo</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ItemAnimator.ItemHolderInfo.html
RecyclerView.ItemDecoration	A										<section class="prog__container">An ItemDecoration allows the application to add a special drawing and layout offset to specific item views from the adapter's data set. This can be useful for drawing dividers between items, highlights, visual grouping boundaries and more.<pre><code>public static abstract class RecyclerView.ItemDecoration</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ItemDecoration.html
RecyclerView.LayoutManager	A										<section class="prog__container">A <pre><code>LayoutManager</code></pre> is responsible for measuring and positioning item views within a <pre><code>RecyclerView</code></pre> as well as determining the policy for when to recycle item views that are no longer visible to the user. By changing the <pre><code>LayoutManager</code></pre> a <pre><code>RecyclerView</code></pre> can be used to implement a standard vertically scrolling list, a uniform grid, staggered grids, horizontally scrolling collections and more. Several stock layout managers are provided for general use.<pre><code>public static abstract class RecyclerView.LayoutManager</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutManager.html
RecyclerView.LayoutManager.LayoutPrefetchRegistry	A										<section class="prog__container">Interface for LayoutManagers to request items to be prefetched, based on position, with specified distance from viewport, which indicates priority.<pre><code>public static interface RecyclerView.LayoutManager.LayoutPrefetchRegistry</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutManager.LayoutPrefetchRegistry.html
RecyclerView.LayoutManager.Properties	A										<section class="prog__container">Some general properties that a LayoutManager may want to use.<pre><code>public static class RecyclerView.LayoutManager.Properties</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutManager.Properties.html
RecyclerView.LayoutParams	A										<section class="prog__container"><pre><code>LayoutParams</code></pre> subclass for children of <pre><code>RecyclerView</code></pre>. Custom <pre><code>layout managers</code></pre> are encouraged to create their own subclass of this <pre><code>LayoutParams</code></pre> class to store any additional required per-child view metadata about the layout.<pre><code>public static class RecyclerView.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutParams.html
RecyclerView.OnChildAttachStateChangeListener	A										<section class="prog__container">A Listener interface that can be attached to a RecylcerView to get notified whenever a ViewHolder is attached to or detached from RecyclerView.<pre><code>public static interface RecyclerView.OnChildAttachStateChangeListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.OnChildAttachStateChangeListener.html
RecyclerView.OnFlingListener	A										<section class="prog__container">This class defines the behavior of fling if the developer wishes to handle it.<pre><code>public static abstract class RecyclerView.OnFlingListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.OnFlingListener.html
RecyclerView.OnItemTouchListener	A										<section class="prog__container">An OnItemTouchListener allows the application to intercept touch events in progress at the view hierarchy level of the RecyclerView before those touch events are considered for RecyclerView's own scrolling behavior.<pre><code>public static interface RecyclerView.OnItemTouchListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.OnItemTouchListener.html
RecyclerView.OnScrollListener	A										<section class="prog__container">An OnScrollListener can be added to a RecyclerView to receive messages when a scrolling event has occurred on that RecyclerView.<pre><code>public static abstract class RecyclerView.OnScrollListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.OnScrollListener.html
RecyclerView.RecycledViewPool	A										<section class="prog__container">RecycledViewPool lets you share Views between multiple RecyclerViews.<pre><code>public static class RecyclerView.RecycledViewPool</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.RecycledViewPool.html
RecyclerView.Recycler	A										<section class="prog__container">A Recycler is responsible for managing scrapped or detached item views for reuse.<pre><code>public final class RecyclerView.Recycler</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Recycler.html
RecyclerView.RecyclerListener	A										<section class="prog__container">A RecyclerListener can be set on a RecyclerView to receive messages whenever a view is recycled.<pre><code>public static interface RecyclerView.RecyclerListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.RecyclerListener.html
RecyclerView.SimpleOnItemTouchListener	A										<section class="prog__container">An implementation of <pre><code>RecyclerView.OnItemTouchListener</code></pre> that has empty method bodies and default return values.<pre><code>public static class RecyclerView.SimpleOnItemTouchListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.SimpleOnItemTouchListener.html
RecyclerView.SmoothScroller.Action	A										<section class="prog__container">Holds information about a smooth scroll request by a <pre><code>RecyclerView.SmoothScroller</code></pre>.<pre><code>public static class RecyclerView.SmoothScroller.Action</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.SmoothScroller.Action.html
RecyclerView.SmoothScroller	A										<section class="prog__container"><pre><code>public static abstract class RecyclerView.SmoothScroller</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.SmoothScroller.html
RecyclerView.SmoothScroller.ScrollVectorProvider	A										<section class="prog__container">An interface which is optionally implemented by custom <pre><code>RecyclerView.LayoutManager</code></pre> to provide a hint to a <pre><code>RecyclerView.SmoothScroller</code></pre> about the location of the target position.<pre><code>public static interface RecyclerView.SmoothScroller.ScrollVectorProvider</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.SmoothScroller.ScrollVectorProvider.html
RecyclerView.State	A										<section class="prog__container"><pre><code>public static class RecyclerView.State</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.State.html
RecyclerView.ViewCacheExtension	A										<section class="prog__container">ViewCacheExtension is a helper class to provide an additional layer of view caching that can be controlled by the developer.<pre><code>public static abstract class RecyclerView.ViewCacheExtension</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ViewCacheExtension.html
RecyclerView.ViewHolder	A										<section class="prog__container">A ViewHolder describes an item view and metadata about its place within the RecyclerView.<pre><code>public static abstract class RecyclerView.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ViewHolder.html
RecyclerViewAccessibilityDelegate	A										<section class="prog__container">The AccessibilityDelegate used by RecyclerView.<pre><code>public class RecyclerViewAccessibilityDelegate</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerViewAccessibilityDelegate.html
SearchView	A										<section class="prog__container">A widget that provides a user interface for the user to enter a search query and submit a request to a search provider. Shows a list of query suggestions or results, if available, and allows the user to pick a suggestion or result to launch into. <p class="note"><strong>Note:</strong> This class is included in the support library for compatibility with API level 7 and higher. If you're developing your app for API level 11 and higher <em>only</em>, you should instead use the framework <pre><code>SearchView</code></pre> class.<pre><code>public class SearchView</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/SearchView.html
SearchView.OnCloseListener	A										<section class="prog__container"><pre><code>public static interface SearchView.OnCloseListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/SearchView.OnCloseListener.html
SearchView.OnQueryTextListener	A										<section class="prog__container">Callbacks for changes to the query text.<pre><code>public static interface SearchView.OnQueryTextListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/SearchView.OnQueryTextListener.html
SearchView.OnSuggestionListener	A										<section class="prog__container">Callback interface for selection events on suggestions. These callbacks are only relevant when a SearchableInfo has been specified by <pre><code>setSearchableInfo(SearchableInfo)</code></pre>.<pre><code>public static interface SearchView.OnSuggestionListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/SearchView.OnSuggestionListener.html
ShareActionProvider	A										<section class="prog__container">Provides a share action, which is suitable for an activity's app bar. Creates views that enable data sharing. If the provider appears in the overflow menu, it creates a submenu with the appropriate sharing actions. <h3 id="add-share-action">Adding a share action</h3><pre><code>public class ShareActionProvider</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/ShareActionProvider.html
ShareActionProvider.OnShareTargetSelectedListener	A										<section class="prog__container">Listener for the event of selecting a share target.<pre><code>public static interface ShareActionProvider.OnShareTargetSelectedListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/ShareActionProvider.OnShareTargetSelectedListener.html
SimpleItemAnimator	A										<section class="prog__container">A wrapper class for ItemAnimator that records View bounds and decides whether it should run move, change, add or remove animations. This class also replicates the original ItemAnimator API.<pre><code>public abstract class SimpleItemAnimator</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/SimpleItemAnimator.html
SnapHelper	A										<section class="prog__container">Class intended to support snapping for a <pre><code>RecyclerView</code></pre>.<pre><code>public abstract class SnapHelper</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/SnapHelper.html
StaggeredGridLayoutManager	A										<section class="prog__container">A LayoutManager that lays out children in a staggered grid formation. It supports horizontal &amp; vertical layout as well as an ability to layout children in reverse.<pre><code>public class StaggeredGridLayoutManager</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/StaggeredGridLayoutManager.html
StaggeredGridLayoutManager.LayoutParams	A										<section class="prog__container">LayoutParams used by StaggeredGridLayoutManager.<pre><code>public static class StaggeredGridLayoutManager.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/StaggeredGridLayoutManager.LayoutParams.html
SwitchCompat	A										<section class="prog__container">SwitchCompat is a version of the Switch widget which on devices back to API v7. It does not make any attempt to use the platform provided widget on those devices which it is available normally.<pre><code>public class SwitchCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/SwitchCompat.html
ThemedSpinnerAdapter.Helper	A										<section class="prog__container">A helper class which allows easy integration of <pre><code>ThemedSpinnerAdapter</code></pre> into existing <pre><code>SpinnerAdapter</code></pre>s in a backwards compatible way.<pre><code>public static final class ThemedSpinnerAdapter.Helper</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/ThemedSpinnerAdapter.Helper.html
ThemedSpinnerAdapter	A										<section class="prog__container">An extension of SpinnerAdapter that is capable of inflating drop-down views against a different theme than normal views.<pre><code>public interface ThemedSpinnerAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/ThemedSpinnerAdapter.html
Toolbar	A										<section class="prog__container">A standard toolbar for use within application content.<pre><code>public class Toolbar</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/Toolbar.html
Toolbar.LayoutParams	A										<section class="prog__container">Layout information for child views of Toolbars.<pre><code>public static class Toolbar.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/Toolbar.LayoutParams.html
Toolbar.OnMenuItemClickListener	A										<section class="prog__container">Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.<pre><code>public static interface Toolbar.OnMenuItemClickListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/Toolbar.OnMenuItemClickListener.html
Toolbar.SavedState	A										<section class="prog__container"><pre><code>public static class Toolbar.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/Toolbar.SavedState.html
ItemTouchHelper.Callback	A										<section class="prog__container">This class is the contract between ItemTouchHelper and your application. It lets you control which touch behaviors are enabled per each ViewHolder and also receive callbacks when user performs these actions.<pre><code>public static abstract class ItemTouchHelper.Callback</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.Callback.html
ItemTouchHelper	A										<section class="prog__container">This is a utility class to add swipe to dismiss and drag &amp; drop support to RecyclerView.<pre><code>public class ItemTouchHelper</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.html
ItemTouchHelper.SimpleCallback	A										<section class="prog__container">A simple wrapper to the default Callback which you can construct with drag and swipe directions and this class will handle the flag callbacks. You should still override onMove or onSwiped depending on your use case. <pre> ItemTouchHelper mIth = new ItemTouchHelper( new ItemTouchHelper.SimpleCallback(ItemTouchHelper.UP | ItemTouchHelper.DOWN, ItemTouchHelper.LEFT) { public abstract boolean onMove(RecyclerView recyclerView, ViewHolder viewHolder, ViewHolder target) { final int fromPos = viewHolder.getAdapterPosition(); final int toPos = target.getAdapterPosition(); // move item in `fromPos` to `toPos` in adapter. return true;// true if moved, false otherwise } public void onSwiped(ViewHolder viewHolder, int direction) { // remove from adapter } }); </pre><pre><code>public static abstract class ItemTouchHelper.SimpleCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.SimpleCallback.html
ItemTouchHelper.ViewDropHandler	A										<section class="prog__container">An interface which can be implemented by LayoutManager for better integration with <pre><code>ItemTouchHelper</code></pre>.<pre><code>public static interface ItemTouchHelper.ViewDropHandler</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.ViewDropHandler.html
ItemTouchUIUtil	A										<section class="prog__container">Utility class for <pre><code>ItemTouchHelper</code></pre> which handles item transformations for different API versions.<pre><code>public interface ItemTouchUIUtil</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchUIUtil.html
SortedListAdapterCallback	A										<section class="prog__container">A <pre><code>SortedList.Callback</code></pre> implementation that can bind a <pre><code>SortedList</code></pre> to a <pre><code>RecyclerView.Adapter</code></pre>.<pre><code>public abstract class SortedListAdapterCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/util/SortedListAdapterCallback.html
Allocation	A										<section class="prog__container"><pre><code>public class Allocation</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Allocation.html
Allocation.MipmapControl	A										<section class="prog__container">Controls mipmap behavior when using the bitmap creation and update functions.<pre><code>public static final enum Allocation.MipmapControl</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Allocation.MipmapControl.html
BaseObj	A										<section class="prog__container">BaseObj is the base class for all RenderScript objects owned by a RS context. It is responsible for lifetime management and resource tracking. This class should not be used by a user application.<pre><code>public class BaseObj</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/BaseObj.html
Byte2	A										<section class="prog__container">Class for exposing the native RenderScript byte2 type back to the Android system.<pre><code>public class Byte2</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Byte2.html
Byte3	A										<section class="prog__container">Class for exposing the native RenderScript byte3 type back to the Android system.<pre><code>public class Byte3</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Byte3.html
Byte4	A										<section class="prog__container">Class for exposing the native RenderScript byte4 type back to the Android system.<pre><code>public class Byte4</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Byte4.html
Double2	A										<section class="prog__container">Class for exposing the native RenderScript double2 type back to the Android system.<pre><code>public class Double2</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Double2.html
Double3	A										<section class="prog__container">Class for exposing the native RenderScript double3 type back to the Android system.<pre><code>public class Double3</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Double3.html
Double4	A										<section class="prog__container">Class for exposing the native RenderScript double4 type back to the Android system.<pre><code>public class Double4</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Double4.html
Element.Builder	A										<section class="prog__container">Builder class for producing complex elements with matching field and name pairs. The builder starts empty. The order in which elements are added is retained for the layout in memory.<pre><code>public static class Element.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Element.Builder.html
Element.DataKind	A										<section class="prog__container">The special interpretation of the data if required. This is primarly useful for graphical data. USER indicates no special interpretation is expected. PIXEL is used in conjunction with the standard data types for representing texture formats.<pre><code>public static final enum Element.DataKind</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Element.DataKind.html
Element.DataType	A										<section class="prog__container">DataType represents the basic type information for a basic element. The naming convention follows. For numeric types it is FLOAT, SIGNED, or UNSIGNED followed by the _BITS where BITS is the size of the data. BOOLEAN is a true / false (1,0) represented in an 8 bit container. The UNSIGNED variants with multiple bit definitions are for packed graphical data formats and represent vectors with per vector member sizes which are treated as a single unit for packing and alignment purposes. MATRIX the three matrix types contain FLOAT_32 elements and are treated as 32 bits for alignment purposes. RS_* objects. 32 bit opaque handles.<pre><code>public static final enum Element.DataType</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Element.DataType.html
Element	A										<section class="prog__container"><pre><code>public class Element</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Element.html
FieldPacker	A										<section class="prog__container">Utility class for packing arguments and structures from Android system objects to RenderScript objects. This class is only intended to be used to support the reflected code generated by the RS tool chain. It should not be called directly.<pre><code>public class FieldPacker</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/FieldPacker.html
Float2	A										<section class="prog__container">Class for exposing the native RenderScript float2 type back to the Android system.<pre><code>public class Float2</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Float2.html
Float3	A										<section class="prog__container">Class for exposing the native RenderScript float2 type back to the Android system.<pre><code>public class Float3</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Float3.html
Float4	A										<section class="prog__container">Class for exposing the native RenderScript float2 type back to the Android system.<pre><code>public class Float4</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Float4.html
Int2	A										<section class="prog__container">Class for exposing the native RenderScript int2 type back to the Android system.<pre><code>public class Int2</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Int2.html
Int3	A										<section class="prog__container">Class for exposing the native RenderScript int3 type back to the Android system.<pre><code>public class Int3</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Int3.html
Int4	A										<section class="prog__container">Class for exposing the native RenderScript int4 type back to the Android system.<pre><code>public class Int4</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Int4.html
Long2	A										<section class="prog__container">Class for exposing the native RenderScript long2 type back to the Android system.<pre><code>public class Long2</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Long2.html
Long3	A										<section class="prog__container">Class for exposing the native RenderScript long3 type back to the Android system.<pre><code>public class Long3</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Long3.html
Long4	A										<section class="prog__container">Class for exposing the native RenderScript long4 type back to the Android system.<pre><code>public class Long4</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Long4.html
Matrix2f	A										<section class="prog__container">Class for exposing the native RenderScript rs_matrix2x2 type back to the Android system.<pre><code>public class Matrix2f</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Matrix2f.html
Matrix3f	A										<section class="prog__container">Class for exposing the native RenderScript rs_matrix3x3 type back to the Android system.<pre><code>public class Matrix3f</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Matrix3f.html
Matrix4f	A										<section class="prog__container">Class for exposing the native RenderScript rs_matrix4x4 type back to the Android system.<pre><code>public class Matrix4f</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Matrix4f.html
RenderScript.ContextType	A										<section class="prog__container">ContextType specifies the specific type of context to be created.<pre><code>public static final enum RenderScript.ContextType</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/RenderScript.ContextType.html
RenderScript	A										<section class="prog__container">This class provides access to a RenderScript context, which controls RenderScript initialization, resource management, and teardown. An instance of the RenderScript class must be created before any other RS objects can be created. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public class RenderScript</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/RenderScript.html
RenderScript.Priority	A										<section class="prog__container">RenderScript worker thread priority enumeration. The default value is NORMAL. Applications wishing to do background processing should set their priority to LOW to avoid starving forground processes.<pre><code>public static final enum RenderScript.Priority</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/RenderScript.Priority.html
RenderScript.RSErrorHandler	A										<section class="prog__container">The runtime error handler base class. An application should derive from this class if it wishes to install an error handler. When errors occur at runtime, the fields in this class will be filled, and the run method will be called.<pre><code>public static class RenderScript.RSErrorHandler</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/RenderScript.RSErrorHandler.html
RenderScript.RSMessageHandler	A										<section class="prog__container">The base class from which an application should derive in order to receive RS messages from scripts. When a script calls <pre><code>rsSendToClient</code></pre>, the data fields will be filled, and the run method will be called on a separate thread. This will occur some time after <pre><code>rsSendToClient</code></pre> completes in the script, as <pre><code>rsSendToClient</code></pre> is asynchronous. Message handlers are not guaranteed to have completed when <pre><code>finish()</code></pre> returns.<pre><code>public static class RenderScript.RSMessageHandler</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/RenderScript.RSMessageHandler.html
RSDriverException	A										<section class="prog__container">Base class for all exceptions thrown by the Android RenderScript<pre><code>public class RSDriverException</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/RSDriverException.html
RSIllegalArgumentException	A										<section class="prog__container">Base class for all exceptions thrown by the Android RenderScript<pre><code>public class RSIllegalArgumentException</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/RSIllegalArgumentException.html
RSInvalidStateException	A										<section class="prog__container">Base class for all exceptions thrown by the Android RenderScript<pre><code>public class RSInvalidStateException</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/RSInvalidStateException.html
RSRuntimeException	A										<section class="prog__container">Base class for all exceptions thrown by the Android RenderScript<pre><code>public class RSRuntimeException</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/RSRuntimeException.html
Sampler.Builder	A										<section class="prog__container">Builder for creating non-standard samplers. This is only necessary if a Sampler with different min and mag modes is desired.<pre><code>public static class Sampler.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Sampler.Builder.html
Sampler	A										<section class="prog__container">Sampler object that defines how Allocations can be read as textures within a kernel. Samplers are used in conjunction with the <pre><code>rsSample</code></pre> runtime function to return values from normalized coordinates. Any Allocation used with a Sampler must have been created with <pre><code>USAGE_GRAPHICS_TEXTURE</code></pre>; using a Sampler on an <pre><code>Allocation</code></pre> that was not created with <pre><code>USAGE_GRAPHICS_TEXTURE</code></pre> is undefined.<pre><code>public class Sampler</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Sampler.html
Sampler.Value	A										<section class="prog__container"><pre><code>public static final enum Sampler.Value</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Sampler.Value.html
Script.Builder	A										<section class="prog__container">Only intended for use by generated reflected code.<pre><code>public static class Script.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.Builder.html
Script.FieldBase	A										<section class="prog__container">Only intended for use by generated reflected code.<pre><code>public static class Script.FieldBase</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.FieldBase.html
Script.FieldID	A										<section class="prog__container">FieldID is an identifier for a Script + exported field pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getFieldID_funcname()".<pre><code>public static final class Script.FieldID</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.FieldID.html
Script	A										<section class="prog__container">The parent class for all executable scripts. This should not be used by applications.<pre><code>public class Script</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.html
Script.InvokeID	A										<section class="prog__container">InvokeID is an identifier for a invoke function. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getInvokeID_funcname()".<pre><code>public static final class Script.InvokeID</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.InvokeID.html
Script.KernelID	A										<section class="prog__container">KernelID is an identifier for a Script + root function pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getKernelID_funcname()".<pre><code>public static final class Script.KernelID</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.KernelID.html
Script.LaunchOptions	A										<section class="prog__container">Class for specifying the specifics about how a kernel will be launched. This class can specify a potential range of cells on which to run a kernel. If no set is called for a dimension then this class will have no impact on that dimension when the kernel is executed. The forEach kernel launch will operate over the intersection of the dimensions. Example: LaunchOptions with setX(5, 15) Allocation with dimension X=10, Y=10 The resulting forEach run would execute over: x = 5 to 9 (inclusive) and y = 0 to 9 (inclusive).<pre><code>public static final class Script.LaunchOptions</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.LaunchOptions.html
ScriptC	A										<section class="prog__container">The superclass for all user-defined scripts. This is only intended to be used by the generated derived classes.<pre><code>public class ScriptC</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptC.html
ScriptGroup.Binding	A										<section class="prog__container">Represents a binding of a value to a global variable in a kernel or invocable function. Used in closure creation.<pre><code>public static final class ScriptGroup.Binding</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Binding.html
ScriptGroup.Builder	A										<section class="prog__container"><p class="caution"><strong> This class is deprecated.</strong><br/> Use <pre><code>ScriptGroup.Builder2</code></pre> instead.<pre><code>public static final class ScriptGroup.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Builder.html
ScriptGroup.Builder2	A										<section class="prog__container">The builder class for creating script groups<pre><code>public static final class ScriptGroup.Builder2</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Builder2.html
ScriptGroup.Closure	A										<section class="prog__container">An opaque class for closures<pre><code>public static final class ScriptGroup.Closure</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Closure.html
ScriptGroup.Future	A										<section class="prog__container">An opaque class for futures<pre><code>public static final class ScriptGroup.Future</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Future.html
ScriptGroup	A										<section class="prog__container">A group of kernels that are executed together with one execution call as if they were a single kernel<pre><code>public final class ScriptGroup</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.html
ScriptGroup.Input	A										<section class="prog__container">An opaque class for unbound values (used for script group inputs)<pre><code>public static final class ScriptGroup.Input</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Input.html
ScriptIntrinsic	A										<section class="prog__container">Base class for all Intrinsic scripts. An intrinsic a script which implements a pre-defined function. Intrinsics are provided to provide effecient implemtations of common operations. Not intended for direct use.<pre><code>public abstract class ScriptIntrinsic</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsic.html
ScriptIntrinsic3DLUT	A										<section class="prog__container">Intrinsic for converting RGB to RGBA by using a 3D lookup table. The incoming r,g,b values are use as normalized x,y,z coordinates into a 3D allocation. The 8 nearest values are sampled and linearly interpolated. The result is placed in the output.<pre><code>public class ScriptIntrinsic3DLUT</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsic3DLUT.html
ScriptIntrinsicBLAS	A										<section class="prog__container">ScriptIntrinsicBLAS class provides high performance RenderScript APIs to BLAS. The BLAS (Basic Linear Algebra Subprograms) are routines that provide standard building blocks for performing basic vector and matrix operations. For detailed description of BLAS, please refer to http://www.netlib.org/blas/<pre><code>public final class ScriptIntrinsicBLAS</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicBLAS.html
ScriptIntrinsicBlend	A										<section class="prog__container">Intrinsic kernels for blending two <pre><code>Allocation</code></pre> objects.<pre><code>public class ScriptIntrinsicBlend</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicBlend.html
ScriptIntrinsicBlur	A										<section class="prog__container">Intrinsic Gausian blur filter. Applies a gaussian blur of the specified radius to all elements of an allocation.<pre><code>public class ScriptIntrinsicBlur</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicBlur.html
ScriptIntrinsicColorMatrix	A										<section class="prog__container">Intrinsic for applying a color matrix to allocations. This has the same effect as loading each element and converting it to a <pre><code>F32_4(RenderScript)</code></pre>, multiplying the result by the 4x4 color matrix as performed by rsMatrixMultiply() and writing it to the output after conversion back to <pre><code>U8_4(RenderScript)</code></pre>.<pre><code>public class ScriptIntrinsicColorMatrix</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicColorMatrix.html
ScriptIntrinsicConvolve3x3	A										<section class="prog__container">Intrinsic for applying a 3x3 convolve to an allocation.<pre><code>public class ScriptIntrinsicConvolve3x3</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicConvolve3x3.html
ScriptIntrinsicConvolve5x5	A										<section class="prog__container">Intrinsic for applying a 5x5 convolve to an allocation.<pre><code>public class ScriptIntrinsicConvolve5x5</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicConvolve5x5.html
ScriptIntrinsicHistogram	A										<section class="prog__container">Intrinsic Histogram filter.<pre><code>public class ScriptIntrinsicHistogram</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicHistogram.html
ScriptIntrinsicLUT	A										<section class="prog__container">Intrinsic for applying a per-channel lookup table. Each channel of the input has an independant lookup table. The tables are 256 entries in size and can cover the full value range of <pre><code>U8_4(RenderScript)</code></pre>.<pre><code>public class ScriptIntrinsicLUT</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicLUT.html
ScriptIntrinsicResize	A										<section class="prog__container">Intrinsic for performing a resize of a 2D allocation.<pre><code>public class ScriptIntrinsicResize</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicResize.html
ScriptIntrinsicYuvToRGB	A										<section class="prog__container">Intrinsic for converting an Android YUV buffer to RGB. The input allocation is supplied in NV21 format as a U8 element type. The output is RGBA, the alpha channel will be set to 255.<pre><code>public class ScriptIntrinsicYuvToRGB</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicYuvToRGB.html
Short2	A										<section class="prog__container">Class for exposing the native RenderScript Short2 type back to the Android system.<pre><code>public class Short2</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Short2.html
Short3	A										<section class="prog__container">Class for exposing the native RenderScript short3 type back to the Android system.<pre><code>public class Short3</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Short3.html
Short4	A										<section class="prog__container">Class for exposing the native RenderScript short4 type back to the Android system.<pre><code>public class Short4</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Short4.html
Type.Builder	A										<section class="prog__container">Builder class for Type.<pre><code>public static class Type.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Type.Builder.html
Type.CubemapFace	A										<section class="prog__container"><pre><code>public static final enum Type.CubemapFace</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Type.CubemapFace.html
Type	A										<section class="prog__container"><pre><code>public class Type</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Type.html
ErrnoException	A										<section class="prog__container">A checked exception thrown when <pre><code>Os</code></pre> methods fail. This exception contains the native errno value, for comparison against the constants in <pre><code>OsConstants</code></pre>, should sophisticated callers need to adjust their behavior based on the exact failure.<pre><code>public final class ErrnoException</code></pre></section>	https://developer.android.com/reference/android/system/ErrnoException.html
Os	A										<section class="prog__container">Access to low-level system functionality. Most of these are system calls. Most users will want to use higher-level APIs where available, but this class provides access to the underlying primitives used to implement the higher-level APIs.<pre><code>public final class Os</code></pre></section>	https://developer.android.com/reference/android/system/Os.html
OsConstants	A										<section class="prog__container">Constants and helper functions for use with <pre><code>Os</code></pre>.<pre><code>public final class OsConstants</code></pre></section>	https://developer.android.com/reference/android/system/OsConstants.html
StructPollfd	A										<section class="prog__container">Used as an in/out parameter to <pre><code>poll(StructPollfd[], int)</code></pre>. Corresponds to C's <pre><code>struct pollfd</code></pre> from <pre><code>&lt;poll.h&gt;</code></pre>.<pre><code>public final class StructPollfd</code></pre></section>	https://developer.android.com/reference/android/system/StructPollfd.html
StructStat	A										<section class="prog__container">File information returned by <pre><code>fstat(FileDescriptor)</code></pre>, <pre><code>lstat(String)</code></pre>, and <pre><code>stat(String)</code></pre>. Corresponds to C's <pre><code>struct stat</code></pre> from <pre><code>&lt;stat.h&gt;</code></pre>.<pre><code>public final class StructStat</code></pre></section>	https://developer.android.com/reference/android/system/StructStat.html
StructStatVfs	A										<section class="prog__container">File information returned by <pre><code>fstatvfs(FileDescriptor)</code></pre> and <pre><code>statvfs(String)</code></pre>.<pre><code>public final class StructStatVfs</code></pre></section>	https://developer.android.com/reference/android/system/StructStatVfs.html
StructUtsname	A										<section class="prog__container">Information returned by <pre><code>uname()</code></pre>. Corresponds to C's <pre><code>struct utsname</code></pre> from <pre><code>&lt;sys/utsname.h&gt;</code></pre>.<pre><code>public final class StructUtsname</code></pre></section>	https://developer.android.com/reference/android/system/StructUtsname.html
Call.Callback	A										<section class="prog__container">Defines callbacks which inform the <pre><code>InCallService</code></pre> of changes to a <pre><code>Call</code></pre>. These callbacks can originate from the Telecom framework, or a <pre><code>ConnectionService</code></pre> implementation.<pre><code>public static abstract class Call.Callback</code></pre></section>	https://developer.android.com/reference/android/telecom/Call.Callback.html
Call.Details	A										<section class="prog__container"><pre><code>public static class Call.Details</code></pre></section>	https://developer.android.com/reference/android/telecom/Call.Details.html
Call	A										<section class="prog__container">Represents an ongoing phone call that the in-call app should present to the user.<pre><code>public final class Call</code></pre></section>	https://developer.android.com/reference/android/telecom/Call.html
CallAudioState	A										<section class="prog__container">Encapsulates the telecom audio state, including the current audio routing, supported audio routing and mute.<pre><code>public final class CallAudioState</code></pre></section>	https://developer.android.com/reference/android/telecom/CallAudioState.html
CallScreeningService.CallResponse.Builder	A										<section class="prog__container"><pre><code>public static class CallScreeningService.CallResponse.Builder</code></pre></section>	https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.Builder.html
CallScreeningService.CallResponse	A										<section class="prog__container"><pre><code>public static class CallScreeningService.CallResponse</code></pre></section>	https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.html
CallScreeningService	A										<section class="prog__container">This service can be implemented by the default dialer (see <pre><code>getDefaultDialerPackage()</code></pre>) to allow or disallow incoming calls before they are shown to a user.<pre><code>public abstract class CallScreeningService</code></pre></section>	https://developer.android.com/reference/android/telecom/CallScreeningService.html
Conference	A										<section class="prog__container">Represents a conference call which can contain any number of <pre><code>Connection</code></pre> objects.<pre><code>public abstract class Conference</code></pre></section>	https://developer.android.com/reference/android/telecom/Conference.html
Conferenceable	A										<section class="prog__container">Interface used to identify entities with which another entity can participate in a conference call with. The <pre><code>ConnectionService</code></pre> implementation will only recognize <pre><code>Conferenceable</code></pre>s which are <pre><code>Connection</code></pre>s or <pre><code>Conference</code></pre>s.<pre><code>public abstract class Conferenceable</code></pre></section>	https://developer.android.com/reference/android/telecom/Conferenceable.html
Connection	A										<section class="prog__container">Represents a phone call or connection to a remote endpoint that carries voice and/or video traffic.<pre><code>public abstract class Connection</code></pre></section>	https://developer.android.com/reference/android/telecom/Connection.html
Connection.VideoProvider	A										<section class="prog__container">Provides a means of controlling the video session associated with a <pre><code>Connection</code></pre>.<pre><code>public static abstract class Connection.VideoProvider</code></pre></section>	https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html
ConnectionRequest	A										<section class="prog__container">Simple data container encapsulating a request to some entity to create a new <pre><code>Connection</code></pre>.<pre><code>public final class ConnectionRequest</code></pre></section>	https://developer.android.com/reference/android/telecom/ConnectionRequest.html
ConnectionService	A										<section class="prog__container">An abstract service that should be implemented by any apps which can make phone calls (VoIP or otherwise) and want those calls to be integrated into the built-in phone app. Once implemented, the <pre><code>ConnectionService</code></pre> needs two additional steps before it will be integrated into the phone app:<pre><code>public abstract class ConnectionService</code></pre></section>	https://developer.android.com/reference/android/telecom/ConnectionService.html
DisconnectCause	A										<section class="prog__container">Describes the cause of a disconnected call. This always includes a code describing the generic cause of the disconnect. Optionally, it may include a label and/or description to display to the user. It is the responsibility of the <pre><code>ConnectionService</code></pre> to provide localized versions of the label and description. It also may contain a reason for the disconnect, which is intended for logging and not for display to the user.<pre><code>public final class DisconnectCause</code></pre></section>	https://developer.android.com/reference/android/telecom/DisconnectCause.html
GatewayInfo	A										<section class="prog__container">Encapsulated gateway address information for outgoing call. When calls are made, the system provides a facility to specify two addresses for the call: one to display as the address being dialed and a separate (gateway) address to actually dial. Telecom provides this information to <pre><code>ConnectionService</code></pre>s when placing the call as an instance of <pre><code>GatewayInfo</code></pre>.<pre><code>public class GatewayInfo</code></pre></section>	https://developer.android.com/reference/android/telecom/GatewayInfo.html
InCallService	A										<section class="prog__container">This service is implemented by any app that wishes to provide the user-interface for managing phone calls. Telecom binds to this service while there exists a live (active or incoming) call, and uses it to notify the in-call app of any live and recently disconnected calls. An app must first be set as the default phone app (See <pre><code>getDefaultDialerPackage()</code></pre>) before the telecom service will bind to its <pre><code>InCallService</code></pre> implementation.<pre><code>public abstract class InCallService</code></pre></section>	https://developer.android.com/reference/android/telecom/InCallService.html
InCallService.VideoCall.Callback	A										<section class="prog__container">The <pre><code>InCallService</code></pre> extends this class to provide a means of receiving callbacks from the <pre><code>Connection.VideoProvider</code></pre>.<pre><code>public static abstract class InCallService.VideoCall.Callback</code></pre></section>	https://developer.android.com/reference/android/telecom/InCallService.VideoCall.Callback.html
InCallService.VideoCall	A										<section class="prog__container">Used to issue commands to the <pre><code>Connection.VideoProvider</code></pre> associated with a <pre><code>Call</code></pre>.<pre><code>public static abstract class InCallService.VideoCall</code></pre></section>	https://developer.android.com/reference/android/telecom/InCallService.VideoCall.html
PhoneAccount.Builder	A										<section class="prog__container">Helper class for creating a <pre><code>PhoneAccount</code></pre>.<pre><code>public static class PhoneAccount.Builder</code></pre></section>	https://developer.android.com/reference/android/telecom/PhoneAccount.Builder.html
PhoneAccount	A										<section class="prog__container">Represents a distinct method to place or receive a phone call. Apps which can place calls and want those calls to be integrated into the dialer and in-call UI should build an instance of this class and register it with the system using <pre><code>TelecomManager</code></pre>.<pre><code>public final class PhoneAccount</code></pre></section>	https://developer.android.com/reference/android/telecom/PhoneAccount.html
PhoneAccountHandle	A										<section class="prog__container">The unique identifier for a <pre><code>PhoneAccount</code></pre>. A <pre><code>PhoneAccountHandle</code></pre> is made of two parts: <ul> <li>The component name of the associated connection service.</li> <li>A string identifier that is unique across <pre><code>PhoneAccountHandle</code></pre>s with the same component name.</li> </ul> Note: This Class requires a non-null <pre><code>ComponentName</code></pre> and <pre><code>UserHandle</code></pre> to operate properly. Passing in invalid parameters will generate a log warning. See <pre><code>PhoneAccount</code></pre>, <pre><code>TelecomManager</code></pre>.<pre><code>public final class PhoneAccountHandle</code></pre></section>	https://developer.android.com/reference/android/telecom/PhoneAccountHandle.html
RemoteConference.Callback	A										<section class="prog__container">Callback base class for <pre><code>RemoteConference</code></pre>.<pre><code>public static abstract class RemoteConference.Callback</code></pre></section>	https://developer.android.com/reference/android/telecom/RemoteConference.Callback.html
RemoteConference	A										<section class="prog__container">A conference provided to a <pre><code>ConnectionService</code></pre> by another <pre><code>ConnectionService</code></pre> through <pre><code>conferenceRemoteConnections(RemoteConnection, RemoteConnection)</code></pre>. Once created, a <pre><code>RemoteConference</code></pre> can be used to control the conference call or monitor changes through <pre><code>RemoteConnection.Callback</code></pre>.<pre><code>public final class RemoteConference</code></pre></section>	https://developer.android.com/reference/android/telecom/RemoteConference.html
RemoteConnection.Callback	A										<section class="prog__container">Callback base class for <pre><code>RemoteConnection</code></pre>.<pre><code>public static abstract class RemoteConnection.Callback</code></pre></section>	https://developer.android.com/reference/android/telecom/RemoteConnection.Callback.html
RemoteConnection	A										<section class="prog__container">A connection provided to a <pre><code>ConnectionService</code></pre> by another <pre><code>ConnectionService</code></pre> running in a different process.<pre><code>public final class RemoteConnection</code></pre></section>	https://developer.android.com/reference/android/telecom/RemoteConnection.html
RemoteConnection.VideoProvider.Callback	A										<section class="prog__container">Callback class used by the <pre><code>RemoteConnection.VideoProvider</code></pre> to relay events from the <pre><code>Connection.VideoProvider</code></pre>.<pre><code>public static abstract class RemoteConnection.VideoProvider.Callback</code></pre></section>	https://developer.android.com/reference/android/telecom/RemoteConnection.VideoProvider.Callback.html
RemoteConnection.VideoProvider	A										<section class="prog__container"><pre><code>RemoteConnection.VideoProvider</code></pre> associated with a <pre><code>RemoteConnection</code></pre>. Used to receive video related events and control the video associated with a <pre><code>RemoteConnection</code></pre>.<pre><code>public static class RemoteConnection.VideoProvider</code></pre></section>	https://developer.android.com/reference/android/telecom/RemoteConnection.VideoProvider.html
StatusHints	A										<section class="prog__container">Contains status label and icon displayed in the in-call UI.<pre><code>public final class StatusHints</code></pre></section>	https://developer.android.com/reference/android/telecom/StatusHints.html
TelecomManager	A										<section class="prog__container">Provides access to information about active calls and registration/call-management functionality. Apps can use methods in this class to determine the current call state.<pre><code>public class TelecomManager</code></pre></section>	https://developer.android.com/reference/android/telecom/TelecomManager.html
VideoProfile.CameraCapabilities	A										<section class="prog__container">Represents the camera capabilities important to a Video Telephony provider.<pre><code>public static final class VideoProfile.CameraCapabilities</code></pre></section>	https://developer.android.com/reference/android/telecom/VideoProfile.CameraCapabilities.html
VideoProfile	A										<section class="prog__container">Represents attributes of video calls.<pre><code>public class VideoProfile</code></pre></section>	https://developer.android.com/reference/android/telecom/VideoProfile.html
CarrierConfigManager	A										<section class="prog__container">Provides access to telephony configuration values that are carrier-specific.<pre><code>public class CarrierConfigManager</code></pre></section>	https://developer.android.com/reference/android/telephony/CarrierConfigManager.html
CellIdentityCdma	A										<section class="prog__container">CellIdentity is to represent a unique CDMA cell<pre><code>public final class CellIdentityCdma</code></pre></section>	https://developer.android.com/reference/android/telephony/CellIdentityCdma.html
CellIdentityGsm	A										<section class="prog__container">CellIdentity to represent a unique GSM cell<pre><code>public final class CellIdentityGsm</code></pre></section>	https://developer.android.com/reference/android/telephony/CellIdentityGsm.html
CellIdentityLte	A										<section class="prog__container">CellIdentity is to represent a unique LTE cell<pre><code>public final class CellIdentityLte</code></pre></section>	https://developer.android.com/reference/android/telephony/CellIdentityLte.html
CellIdentityWcdma	A										<section class="prog__container">CellIdentity to represent a unique UMTS cell<pre><code>public final class CellIdentityWcdma</code></pre></section>	https://developer.android.com/reference/android/telephony/CellIdentityWcdma.html
CellInfo	A										<section class="prog__container">Immutable cell information from a point in time.<pre><code>public abstract class CellInfo</code></pre></section>	https://developer.android.com/reference/android/telephony/CellInfo.html
CellInfoCdma	A										<section class="prog__container">Immutable cell information from a point in time.<pre><code>public final class CellInfoCdma</code></pre></section>	https://developer.android.com/reference/android/telephony/CellInfoCdma.html
CellInfoGsm	A										<section class="prog__container">Immutable cell information from a point in time.<pre><code>public final class CellInfoGsm</code></pre></section>	https://developer.android.com/reference/android/telephony/CellInfoGsm.html
CellInfoLte	A										<section class="prog__container">Immutable cell information from a point in time.<pre><code>public final class CellInfoLte</code></pre></section>	https://developer.android.com/reference/android/telephony/CellInfoLte.html
CellInfoWcdma	A										<section class="prog__container">Immutable cell information from a point in time.<pre><code>public final class CellInfoWcdma</code></pre></section>	https://developer.android.com/reference/android/telephony/CellInfoWcdma.html
CellLocation	A										<section class="prog__container">Abstract class that represents the location of the device.<pre><code>public abstract class CellLocation</code></pre></section>	https://developer.android.com/reference/android/telephony/CellLocation.html
CellSignalStrength	A										<section class="prog__container">Abstract base class for cell phone signal strength related information.<pre><code>public abstract class CellSignalStrength</code></pre></section>	https://developer.android.com/reference/android/telephony/CellSignalStrength.html
CellSignalStrengthCdma	A										<section class="prog__container">Signal strength related information.<pre><code>public final class CellSignalStrengthCdma</code></pre></section>	https://developer.android.com/reference/android/telephony/CellSignalStrengthCdma.html
CellSignalStrengthGsm	A										<section class="prog__container">GSM signal strength related information.<pre><code>public final class CellSignalStrengthGsm</code></pre></section>	https://developer.android.com/reference/android/telephony/CellSignalStrengthGsm.html
CellSignalStrengthLte	A										<section class="prog__container">LTE signal strength related information.<pre><code>public final class CellSignalStrengthLte</code></pre></section>	https://developer.android.com/reference/android/telephony/CellSignalStrengthLte.html
CellSignalStrengthWcdma	A										<section class="prog__container">Wcdma signal strength related information.<pre><code>public final class CellSignalStrengthWcdma</code></pre></section>	https://developer.android.com/reference/android/telephony/CellSignalStrengthWcdma.html
IccOpenLogicalChannelResponse	A										<section class="prog__container">Response to the <pre><code>iccOpenLogicalChannel(String)</code></pre> command.<pre><code>public class IccOpenLogicalChannelResponse</code></pre></section>	https://developer.android.com/reference/android/telephony/IccOpenLogicalChannelResponse.html
NeighboringCellInfo	A										<section class="prog__container">Represents the neighboring cell information, including Received Signal Strength and Cell ID location.<pre><code>public class NeighboringCellInfo</code></pre></section>	https://developer.android.com/reference/android/telephony/NeighboringCellInfo.html
PhoneNumberFormattingTextWatcher	A										<section class="prog__container">Watches a <pre><code>TextView</code></pre> and if a phone number is entered will format it.<pre><code>public class PhoneNumberFormattingTextWatcher</code></pre></section>	https://developer.android.com/reference/android/telephony/PhoneNumberFormattingTextWatcher.html
PhoneNumberUtils	A										<section class="prog__container">Various utilities for dealing with phone number strings.<pre><code>public class PhoneNumberUtils</code></pre></section>	https://developer.android.com/reference/android/telephony/PhoneNumberUtils.html
PhoneStateListener	A										<section class="prog__container">A listener class for monitoring changes in specific telephony states on the device, including service state, signal strength, message waiting indicator (voicemail), and others.<pre><code>public class PhoneStateListener</code></pre></section>	https://developer.android.com/reference/android/telephony/PhoneStateListener.html
ServiceState	A										<section class="prog__container">Contains phone state and service related information. The following phone information is included in returned ServiceState: <ul> <li>Service state: IN_SERVICE, OUT_OF_SERVICE, EMERGENCY_ONLY, POWER_OFF <li>Roaming indicator <li>Operator name, short name and numeric id <li>Network selection mode </li></li></li></li></ul><pre><code>public class ServiceState</code></pre></section>	https://developer.android.com/reference/android/telephony/ServiceState.html
SignalStrength	A										<section class="prog__container">Contains phone signal strength related information.<pre><code>public class SignalStrength</code></pre></section>	https://developer.android.com/reference/android/telephony/SignalStrength.html
SmsManager	A										<section class="prog__container">Manages SMS operations such as sending data, text, and pdu SMS messages. Get this object by calling the static method <pre><code>getDefault()</code></pre>.<pre><code>public final class SmsManager</code></pre></section>	https://developer.android.com/reference/android/telephony/SmsManager.html
SmsMessage	A										<section class="prog__container">A Short Message Service message.<pre><code>public class SmsMessage</code></pre></section>	https://developer.android.com/reference/android/telephony/SmsMessage.html
SmsMessage.MessageClass	A										<section class="prog__container">SMS Class enumeration. See TS 23.038.<pre><code>public static final enum SmsMessage.MessageClass</code></pre></section>	https://developer.android.com/reference/android/telephony/SmsMessage.MessageClass.html
SmsMessage.SubmitPdu	A										<section class="prog__container"><pre><code>public static class SmsMessage.SubmitPdu</code></pre></section>	https://developer.android.com/reference/android/telephony/SmsMessage.SubmitPdu.html
SubscriptionInfo	A										<section class="prog__container">A Parcelable class for Subscription Information.<pre><code>public class SubscriptionInfo</code></pre></section>	https://developer.android.com/reference/android/telephony/SubscriptionInfo.html
SubscriptionManager	A										<section class="prog__container">SubscriptionManager is the application interface to SubscriptionController and provides information about the current Telephony Subscriptions. *<pre><code>public class SubscriptionManager</code></pre></section>	https://developer.android.com/reference/android/telephony/SubscriptionManager.html
SubscriptionManager.OnSubscriptionsChangedListener	A										<section class="prog__container">A listener class for monitoring changes to <pre><code>SubscriptionInfo</code></pre> records.<pre><code>public static class SubscriptionManager.OnSubscriptionsChangedListener</code></pre></section>	https://developer.android.com/reference/android/telephony/SubscriptionManager.OnSubscriptionsChangedListener.html
TelephonyManager	A										<section class="prog__container">Provides access to information about the telephony services on the device. Applications can use the methods in this class to determine telephony services and states, as well as to access some types of subscriber information. Applications can also register a listener to receive notification of telephony state changes.<pre><code>public class TelephonyManager</code></pre></section>	https://developer.android.com/reference/android/telephony/TelephonyManager.html
CdmaCellLocation	A										<section class="prog__container">Represents the cell location on a CDMA phone.<pre><code>public class CdmaCellLocation</code></pre></section>	https://developer.android.com/reference/android/telephony/cdma/CdmaCellLocation.html
GsmCellLocation	A										<section class="prog__container">Represents the cell location on a GSM phone.<pre><code>public class GsmCellLocation</code></pre></section>	https://developer.android.com/reference/android/telephony/gsm/GsmCellLocation.html
SmsManager	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 4.</strong><br/> Replaced by android.telephony.SmsManager that supports both GSM and CDMA.<pre><code>public final class SmsManager</code></pre></section>	https://developer.android.com/reference/android/telephony/gsm/SmsManager.html
SmsMessage	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 4.</strong><br/> Replaced by android.telephony.SmsMessage that supports both GSM and CDMA.<pre><code>public class SmsMessage</code></pre></section>	https://developer.android.com/reference/android/telephony/gsm/SmsMessage.html
SmsMessage.MessageClass	A										<section class="prog__container"><p class="caution"><strong> This enum was deprecated in API level 4.</strong><br/> Use android.telephony.SmsMessage.<pre><code>public static final enum SmsMessage.MessageClass</code></pre></section>	https://developer.android.com/reference/android/telephony/gsm/SmsMessage.MessageClass.html
SmsMessage.SubmitPdu	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 4.</strong><br/> Use android.telephony.SmsMessage.<pre><code>public static class SmsMessage.SubmitPdu</code></pre></section>	https://developer.android.com/reference/android/telephony/gsm/SmsMessage.SubmitPdu.html
ActivityInstrumentationTestCase	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 3.</strong><br/> new tests should be written using <pre><code>ActivityInstrumentationTestCase2</code></pre>, which provides more options for configuring the Activity under test<pre><code>public abstract class ActivityInstrumentationTestCase</code></pre></section>	https://developer.android.com/reference/android/test/ActivityInstrumentationTestCase.html
ActivityInstrumentationTestCase2	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use ActivityTestRule instead. New tests should be written using the Android Testing Support Library.<pre><code>public abstract class ActivityInstrumentationTestCase2</code></pre></section>	https://developer.android.com/reference/android/test/ActivityInstrumentationTestCase2.html
ActivityTestCase	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> New tests should be written using the Android Testing Support Library.<pre><code>public abstract class ActivityTestCase</code></pre></section>	https://developer.android.com/reference/android/test/ActivityTestCase.html
ActivityUnitTestCase	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Write Local Unit Tests instead.<pre><code>public abstract class ActivityUnitTestCase</code></pre></section>	https://developer.android.com/reference/android/test/ActivityUnitTestCase.html
AndroidTestCase	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use InstrumentationRegistry instead. New tests should be written using the Android Testing Support Library.<pre><code>public class AndroidTestCase</code></pre></section>	https://developer.android.com/reference/android/test/AndroidTestCase.html
AndroidTestRunner	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use AndroidJUnitRunner instead. New tests should be written using the Android Testing Support Library.<pre><code>public class AndroidTestRunner</code></pre></section>	https://developer.android.com/reference/android/test/AndroidTestRunner.html
ApplicationTestCase	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use InstrumentationRegistry instead. New tests should be written using the Android Testing Support Library.<pre><code>public abstract class ApplicationTestCase</code></pre></section>	https://developer.android.com/reference/android/test/ApplicationTestCase.html
AssertionFailedError	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 16.</strong><br/> use junit.framework.AssertionFailedError<pre><code>public class AssertionFailedError</code></pre></section>	https://developer.android.com/reference/android/test/AssertionFailedError.html
ComparisonFailure	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 16.</strong><br/> use junit.framework.ComparisonFailure<pre><code>public class ComparisonFailure</code></pre></section>	https://developer.android.com/reference/android/test/ComparisonFailure.html
FlakyTest	A										<section class="prog__container"><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use FlakyTest instead. New tests should be written using the Android Testing Support Library.<pre><code>public abstract @interface FlakyTest</code></pre></section>	https://developer.android.com/reference/android/test/FlakyTest.html
InstrumentationTestCase	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use InstrumentationRegistry instead. New tests should be written using the Android Testing Support Library.<pre><code>public class InstrumentationTestCase</code></pre></section>	https://developer.android.com/reference/android/test/InstrumentationTestCase.html
InstrumentationTestRunner	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use AndroidJUnitRunner instead. New tests should be written using the Android Testing Support Library.<pre><code>public class InstrumentationTestRunner</code></pre></section>	https://developer.android.com/reference/android/test/InstrumentationTestRunner.html
InstrumentationTestSuite	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use InstrumentationRegistry instead. New tests should be written using the Android Testing Support Library.<pre><code>public class InstrumentationTestSuite</code></pre></section>	https://developer.android.com/reference/android/test/InstrumentationTestSuite.html
IsolatedContext	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> New tests should be written using the Android Testing Support Library.<pre><code>public class IsolatedContext</code></pre></section>	https://developer.android.com/reference/android/test/IsolatedContext.html
LoaderTestCase	A										<section class="prog__container">A convenience class for testing <pre><code>Loader</code></pre>s. This test case provides a simple way to synchronously get the result from a Loader making it easy to assert that the Loader returns the expected result.<pre><code>public class LoaderTestCase</code></pre></section>	https://developer.android.com/reference/android/test/LoaderTestCase.html
MoreAsserts	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use Hamcrest matchers instead.<pre><code>public final class MoreAsserts</code></pre></section>	https://developer.android.com/reference/android/test/MoreAsserts.html
android.test	A										<section class="prog__container">A framework for writing Android test cases and suites.</section>	https://developer.android.com/reference/android/test/package-summary.html
PerformanceTestCase	A										<section class="prog__container">More complex interface performance for test cases. If you want your test to be used as a performance test, you must implement this interface.<pre><code>public interface PerformanceTestCase</code></pre></section>	https://developer.android.com/reference/android/test/PerformanceTestCase.html
PerformanceTestCase.Intermediates	A										<section class="prog__container">Callbacks for <pre><code>PerformanceTestCase</code></pre>.<pre><code>public static interface PerformanceTestCase.Intermediates</code></pre></section>	https://developer.android.com/reference/android/test/PerformanceTestCase.Intermediates.html
ProviderTestCase	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 3.</strong><br/> this class extends InstrumentationTestCase but should extend AndroidTestCase. Use ProviderTestCase2, which corrects this problem, instead.<pre><code>public abstract class ProviderTestCase</code></pre></section>	https://developer.android.com/reference/android/test/ProviderTestCase.html
ProviderTestCase2	A										<section class="prog__container">This test case class provides a framework for testing a single <pre><code>ContentProvider</code></pre> and for testing your app code with an isolated content provider. Instead of using the system map of providers that is based on the manifests of other applications, the test case creates its own internal map. It then uses this map to resolve providers given an authority. This allows you to inject test providers and to null out providers that you do not want to use.<pre><code>public abstract class ProviderTestCase2</code></pre></section>	https://developer.android.com/reference/android/test/ProviderTestCase2.html
RenamingDelegatingContext	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> New tests should be written using the Android Testing Support Library.<pre><code>public class RenamingDelegatingContext</code></pre></section>	https://developer.android.com/reference/android/test/RenamingDelegatingContext.html
ServiceTestCase	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use ServiceTestRule instead. New tests should be written using the Android Testing Support Library.<pre><code>public abstract class ServiceTestCase</code></pre></section>	https://developer.android.com/reference/android/test/ServiceTestCase.html
SingleLaunchActivityTestCase	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use ActivityTestRule instead. New tests should be written using the Android Testing Support Library.<pre><code>public abstract class SingleLaunchActivityTestCase</code></pre></section>	https://developer.android.com/reference/android/test/SingleLaunchActivityTestCase.html
SyncBaseInstrumentation	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use InstrumentationRegistry instead. New tests should be written using the Android Testing Support Library.<pre><code>public class SyncBaseInstrumentation</code></pre></section>	https://developer.android.com/reference/android/test/SyncBaseInstrumentation.html
TestSuiteProvider	A										<section class="prog__container">Implementors will know how to get a test suite.<pre><code>public interface TestSuiteProvider</code></pre></section>	https://developer.android.com/reference/android/test/TestSuiteProvider.html
TouchUtils	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use Espresso UI testing framework instead. New tests should be written using the Android Testing Support Library.<pre><code>public class TouchUtils</code></pre></section>	https://developer.android.com/reference/android/test/TouchUtils.html
UiThreadTest	A										<section class="prog__container"><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use UiThreadTest instead. New tests should be written using the Android Testing Support Library.<pre><code>public abstract @interface UiThreadTest</code></pre></section>	https://developer.android.com/reference/android/test/UiThreadTest.html
ViewAsserts	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use Espresso View Matchers instead. New test should be written using the Android Testing Support Library. For more information about UI testing, take the Espresso UI testing training.<pre><code>public class ViewAsserts</code></pre></section>	https://developer.android.com/reference/android/test/ViewAsserts.html
MockApplication	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use a mocking framework like Mockito. New tests should be written using the Android Testing Support Library.<pre><code>public class MockApplication</code></pre></section>	https://developer.android.com/reference/android/test/mock/MockApplication.html
MockContentProvider	A										<section class="prog__container">Mock implementation of ContentProvider. All methods are non-functional and throw <pre><code>UnsupportedOperationException</code></pre>. Tests can extend this class to implement behavior needed for tests.<pre><code>public class MockContentProvider</code></pre></section>	https://developer.android.com/reference/android/test/mock/MockContentProvider.html
MockContentResolver	A										<section class="prog__container"><pre><code>public class MockContentResolver</code></pre></section>	https://developer.android.com/reference/android/test/mock/MockContentResolver.html
MockContext	A										<section class="prog__container">A mock <pre><code>Context</code></pre> class. All methods are non-functional and throw <pre><code>UnsupportedOperationException</code></pre>. You can use this to inject other dependencies, mocks, or monitors into the classes you are testing.<pre><code>public class MockContext</code></pre></section>	https://developer.android.com/reference/android/test/mock/MockContext.html
MockCursor	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use a mocking framework like Mockito. New tests should be written using the Android Testing Support Library.<pre><code>public class MockCursor</code></pre></section>	https://developer.android.com/reference/android/test/mock/MockCursor.html
MockDialogInterface	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use a mocking framework like Mockito. New tests should be written using the Android Testing Support Library.<pre><code>public class MockDialogInterface</code></pre></section>	https://developer.android.com/reference/android/test/mock/MockDialogInterface.html
MockPackageManager	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use a mocking framework like Mockito. New tests should be written using the Android Testing Support Library.<pre><code>public class MockPackageManager</code></pre></section>	https://developer.android.com/reference/android/test/mock/MockPackageManager.html
MockResources	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use a mocking framework like Mockito. New tests should be written using the Android Testing Support Library.<pre><code>public class MockResources</code></pre></section>	https://developer.android.com/reference/android/test/mock/MockResources.html
android.test.mock	A										<section class="prog__container">Utility classes providing stubs or mocks of various Android framework building blocks.</section>	https://developer.android.com/reference/android/test/mock/package-summary.html
TestMethod	A										<section class="prog__container">Represents a test to be run. Can be constructed without instantiating the TestCase or even loading the class.<pre><code>public class TestMethod</code></pre></section>	https://developer.android.com/reference/android/test/suitebuilder/TestMethod.html
TestSuiteBuilder.FailedToCreateTests	A										<section class="prog__container">A special <pre><code>TestCase</code></pre> used to indicate a failure during the build() step.<pre><code>public static class TestSuiteBuilder.FailedToCreateTests</code></pre></section>	https://developer.android.com/reference/android/test/suitebuilder/TestSuiteBuilder.FailedToCreateTests.html
TestSuiteBuilder	A										<section class="prog__container">Build suites based on a combination of included packages, excluded packages, and predicates that must be satisfied.<pre><code>public class TestSuiteBuilder</code></pre></section>	https://developer.android.com/reference/android/test/suitebuilder/TestSuiteBuilder.html
LargeTest	A										<section class="prog__container"><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use LargeTest instead. New tests should be written using the Android Testing Support Library.<pre><code>public abstract @interface LargeTest</code></pre></section>	https://developer.android.com/reference/android/test/suitebuilder/annotation/LargeTest.html
MediumTest	A										<section class="prog__container"><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use MediumTest instead. New tests should be written using the Android Testing Support Library.<pre><code>public abstract @interface MediumTest</code></pre></section>	https://developer.android.com/reference/android/test/suitebuilder/annotation/MediumTest.html
SmallTest	A										<section class="prog__container"><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use SmallTest instead. New tests should be written using the Android Testing Support Library.<pre><code>public abstract @interface SmallTest</code></pre></section>	https://developer.android.com/reference/android/test/suitebuilder/annotation/SmallTest.html
Smoke	A										<section class="prog__container"><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> New tests should be written using the Android Testing Support Library.<pre><code>public abstract @interface Smoke</code></pre></section>	https://developer.android.com/reference/android/test/suitebuilder/annotation/Smoke.html
Suppress	A										<section class="prog__container"><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use Suppress instead. New tests should be written using the Android Testing Support Library.<pre><code>public abstract @interface Suppress</code></pre></section>	https://developer.android.com/reference/android/test/suitebuilder/annotation/Suppress.html
AlteredCharSequence	A										<section class="prog__container">An AlteredCharSequence is a CharSequence that is largely mirrored from another CharSequence, except that a specified range of characters are mirrored from a different char array instead.<pre><code>public class AlteredCharSequence</code></pre></section>	https://developer.android.com/reference/android/text/AlteredCharSequence.html
AndroidCharacter	A										<section class="prog__container">AndroidCharacter exposes some character properties that are not easily accessed from java.lang.Character.<pre><code>public class AndroidCharacter</code></pre></section>	https://developer.android.com/reference/android/text/AndroidCharacter.html
Annotation	A										<section class="prog__container">Annotations are simple key-value pairs that are preserved across TextView save/restore cycles and can be used to keep application-specific data that needs to be maintained for regions of text.<pre><code>public class Annotation</code></pre></section>	https://developer.android.com/reference/android/text/Annotation.html
AutoText	A										<section class="prog__container">This class accesses a dictionary of corrections to frequent misspellings.<pre><code>public class AutoText</code></pre></section>	https://developer.android.com/reference/android/text/AutoText.html
BidiFormatter.Builder	A										<section class="prog__container">A class for building a BidiFormatter with non-default options.<pre><code>public static final class BidiFormatter.Builder</code></pre></section>	https://developer.android.com/reference/android/text/BidiFormatter.Builder.html
BidiFormatter	A										<section class="prog__container">Utility class for formatting text for display in a potentially opposite-directionality context without garbling. The directionality of the context is set at formatter creation and the directionality of the text can be either estimated or passed in when known.<pre><code>public final class BidiFormatter</code></pre></section>	https://developer.android.com/reference/android/text/BidiFormatter.html
BoringLayout	A										<section class="prog__container">A BoringLayout is a very simple Layout implementation for text that fits on a single line and is all left-to-right characters. You will probably never want to make one of these yourself; if you do, be sure to call <pre><code>isBoring(CharSequence, TextPaint)</code></pre> first to make sure the text meets the criteria.<pre><code>public class BoringLayout</code></pre></section>	https://developer.android.com/reference/android/text/BoringLayout.html
BoringLayout.Metrics	A										<section class="prog__container"><pre><code>public static class BoringLayout.Metrics</code></pre></section>	https://developer.android.com/reference/android/text/BoringLayout.Metrics.html
ClipboardManager	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 11.</strong><br/> Old text-only interface to the clipboard. See <pre><code>ClipboardManager</code></pre> for the modern API.<pre><code>public abstract class ClipboardManager</code></pre></section>	https://developer.android.com/reference/android/text/ClipboardManager.html
DynamicLayout	A										<section class="prog__container">DynamicLayout is a text layout that updates itself as the text is edited.<pre><code>public class DynamicLayout</code></pre></section>	https://developer.android.com/reference/android/text/DynamicLayout.html
Editable.Factory	A										<section class="prog__container">Factory used by TextView to create new Editables. You can subclass it to provide something other than SpannableStringBuilder.<pre><code>public static class Editable.Factory</code></pre></section>	https://developer.android.com/reference/android/text/Editable.Factory.html
Editable	A										<section class="prog__container">This is the interface for text whose content and markup can be changed (as opposed to immutable text like Strings). If you make a <pre><code>DynamicLayout</code></pre> of an Editable, the layout will be reflowed as the text is changed.<pre><code>public interface Editable</code></pre></section>	https://developer.android.com/reference/android/text/Editable.html
GetChars	A										<section class="prog__container">Please implement this interface if your CharSequence has a getChars() method like the one in String that is faster than calling charAt() multiple times.<pre><code>public interface GetChars</code></pre></section>	https://developer.android.com/reference/android/text/GetChars.html
Html	A										<section class="prog__container">This class processes HTML strings into displayable styled text. Not all HTML tags are supported.<pre><code>public class Html</code></pre></section>	https://developer.android.com/reference/android/text/Html.html
Html.ImageGetter	A										<section class="prog__container">Retrieves images for HTML &lt;img&gt; tags.<pre><code>public static interface Html.ImageGetter</code></pre></section>	https://developer.android.com/reference/android/text/Html.ImageGetter.html
Html.TagHandler	A										<section class="prog__container">Is notified when HTML tags are encountered that the parser does not know how to interpret.<pre><code>public static interface Html.TagHandler</code></pre></section>	https://developer.android.com/reference/android/text/Html.TagHandler.html
InputFilter.AllCaps	A										<section class="prog__container">This filter will capitalize all the lower case letters that are added through edits.<pre><code>public static class InputFilter.AllCaps</code></pre></section>	https://developer.android.com/reference/android/text/InputFilter.AllCaps.html
InputFilter	A										<section class="prog__container">InputFilters can be attached to <pre><code>Editable</code></pre>s to constrain the changes that can be made to them.<pre><code>public interface InputFilter</code></pre></section>	https://developer.android.com/reference/android/text/InputFilter.html
InputFilter.LengthFilter	A										<section class="prog__container">This filter will constrain edits not to make the length of the text greater than the specified length.<pre><code>public static class InputFilter.LengthFilter</code></pre></section>	https://developer.android.com/reference/android/text/InputFilter.LengthFilter.html
InputType	A										<section class="prog__container">Bit definitions for an integer defining the basic content type of text held in an <pre><code>Editable</code></pre> object. Supported classes may be combined with variations and flags to indicate desired behaviors. <h3>Examples</h3> <dl> <dt>A password field with with the password visible to the user: <dd>inputType = TYPE_CLASS_TEXT | TYPE_TEXT_VARIATION_VISIBLE_PASSWORD <dt>A multi-line postal address with automatic capitalization: <dd>inputType = TYPE_CLASS_TEXT | TYPE_TEXT_VARIATION_POSTAL_ADDRESS | TYPE_TEXT_FLAG_MULTI_LINE <dt>A time field: <dd>inputType = TYPE_CLASS_DATETIME | TYPE_DATETIME_VARIATION_TIME </dd></dt></dd></dt></dd></dt></dl><pre><code>public interface InputType</code></pre></section>	https://developer.android.com/reference/android/text/InputType.html
Layout.Alignment	A										<section class="prog__container"><pre><code>public static final enum Layout.Alignment</code></pre></section>	https://developer.android.com/reference/android/text/Layout.Alignment.html
Layout.Directions	A										<section class="prog__container">Stores information about bidirectional (left-to-right or right-to-left) text within the layout of a line.<pre><code>public static class Layout.Directions</code></pre></section>	https://developer.android.com/reference/android/text/Layout.Directions.html
Layout	A										<section class="prog__container">A base class that manages text layout in visual elements on the screen.<pre><code>public abstract class Layout</code></pre></section>	https://developer.android.com/reference/android/text/Layout.html
LoginFilter	A										<section class="prog__container">Abstract class for filtering login-related text (user names and passwords)<pre><code>public abstract class LoginFilter</code></pre></section>	https://developer.android.com/reference/android/text/LoginFilter.html
LoginFilter.PasswordFilterGMail	A										<section class="prog__container">This filter is compatible with GMail passwords which restricts characters to the Latin-1 (ISO8859-1) char set.<pre><code>public static class LoginFilter.PasswordFilterGMail</code></pre></section>	https://developer.android.com/reference/android/text/LoginFilter.PasswordFilterGMail.html
LoginFilter.UsernameFilterGeneric	A										<section class="prog__container">This filter rejects characters in the user name that are not compatible with Google login. It is slightly less restrictive than the above filter in that it allows [a-zA-Z0-9._-+].<pre><code>public static class LoginFilter.UsernameFilterGeneric</code></pre></section>	https://developer.android.com/reference/android/text/LoginFilter.UsernameFilterGeneric.html
LoginFilter.UsernameFilterGMail	A										<section class="prog__container">This filter rejects characters in the user name that are not compatible with GMail account creation. It prevents the user from entering user names with characters other than [a-zA-Z0-9.].<pre><code>public static class LoginFilter.UsernameFilterGMail</code></pre></section>	https://developer.android.com/reference/android/text/LoginFilter.UsernameFilterGMail.html
NoCopySpan.Concrete	A										<section class="prog__container">Convenience equivalent for when you would just want a new Object() for a span but want it to be no-copy. Use this instead.<pre><code>public static class NoCopySpan.Concrete</code></pre></section>	https://developer.android.com/reference/android/text/NoCopySpan.Concrete.html
NoCopySpan	A										<section class="prog__container">This interface should be added to a span object that should not be copied into a new Spanned when performing a slice or copy operation on the original Spanned it was placed in.<pre><code>public interface NoCopySpan</code></pre></section>	https://developer.android.com/reference/android/text/NoCopySpan.html
android.text	A										<section class="prog__container">Provides classes used to render or track text and text spans on the screen.</section>	https://developer.android.com/reference/android/text/package-summary.html
ParcelableSpan	A										<section class="prog__container">A special kind of Parcelable for objects that will serve as text spans. This can only be used by code in the framework; it is not intended for applications to implement their own Parcelable spans.<pre><code>public interface ParcelableSpan</code></pre></section>	https://developer.android.com/reference/android/text/ParcelableSpan.html
Selection	A										<section class="prog__container">Utility class for manipulating cursors and selections in CharSequences. A cursor is a selection where the start and end are at the same offset.<pre><code>public class Selection</code></pre></section>	https://developer.android.com/reference/android/text/Selection.html
Spannable.Factory	A										<section class="prog__container">Factory used by TextView to create new Spannables. You can subclass it to provide something other than SpannableString.<pre><code>public static class Spannable.Factory</code></pre></section>	https://developer.android.com/reference/android/text/Spannable.Factory.html
Spannable	A										<section class="prog__container">This is the interface for text to which markup objects can be attached and detached. Not all Spannable classes have mutable text; see <pre><code>Editable</code></pre> for that.<pre><code>public interface Spannable</code></pre></section>	https://developer.android.com/reference/android/text/Spannable.html
SpannableString	A										<section class="prog__container">This is the class for text whose content is immutable but to which markup objects can be attached and detached. For mutable text, see <pre><code>SpannableStringBuilder</code></pre>.<pre><code>public class SpannableString</code></pre></section>	https://developer.android.com/reference/android/text/SpannableString.html
SpannableStringBuilder	A										<section class="prog__container">This is the class for text whose content and markup can both be changed.<pre><code>public class SpannableStringBuilder</code></pre></section>	https://developer.android.com/reference/android/text/SpannableStringBuilder.html
Spanned	A										<section class="prog__container">This is the interface for text that has markup objects attached to ranges of it. Not all text classes have mutable markup or text; see <pre><code>Spannable</code></pre> for mutable markup and <pre><code>Editable</code></pre> for mutable text.<pre><code>public interface Spanned</code></pre></section>	https://developer.android.com/reference/android/text/Spanned.html
SpannedString	A										<section class="prog__container">This is the class for text whose content and markup are immutable. For mutable markup, see <pre><code>SpannableString</code></pre>; for mutable text, see <pre><code>SpannableStringBuilder</code></pre>.<pre><code>public final class SpannedString</code></pre></section>	https://developer.android.com/reference/android/text/SpannedString.html
SpanWatcher	A										<section class="prog__container">When an object of this type is attached to a Spannable, its methods will be called to notify it that other markup objects have been added, changed, or removed.<pre><code>public interface SpanWatcher</code></pre></section>	https://developer.android.com/reference/android/text/SpanWatcher.html
StaticLayout.Builder	A										<section class="prog__container">Builder for static layouts. The builder is a newer pattern for constructing StaticLayout objects and should be preferred over the constructors, particularly to access newer features. To build a static layout, first call <pre><code>obtain(CharSequence, int, int, TextPaint, int)</code></pre> with the required arguments (text, paint, and width), then call setters for optional parameters, and finally <pre><code>build()</code></pre> to build the StaticLayout object. Parameters not explicitly set will get default values.<pre><code>public static final class StaticLayout.Builder</code></pre></section>	https://developer.android.com/reference/android/text/StaticLayout.Builder.html
StaticLayout	A										<section class="prog__container">StaticLayout is a Layout for text that will not be edited after it is laid out. Use <pre><code>DynamicLayout</code></pre> for text that may change.<pre><code>public class StaticLayout</code></pre></section>	https://developer.android.com/reference/android/text/StaticLayout.html
TextDirectionHeuristic	A										<section class="prog__container">Interface for objects that use a heuristic for guessing at the paragraph direction by examining text.<pre><code>public interface TextDirectionHeuristic</code></pre></section>	https://developer.android.com/reference/android/text/TextDirectionHeuristic.html
TextDirectionHeuristics	A										<section class="prog__container">Some objects that implement <pre><code>TextDirectionHeuristic</code></pre>. Use these with the <pre><code>unicodeWrap()</code></pre> methods in <pre><code>BidiFormatter</code></pre>. Also notice that these direction heuristics correspond to the same types of constants provided in the <pre><code>View</code></pre> class for <pre><code>setTextDirection()</code></pre>, such as <pre><code>TEXT_DIRECTION_RTL</code></pre>.<pre><code>public class TextDirectionHeuristics</code></pre></section>	https://developer.android.com/reference/android/text/TextDirectionHeuristics.html
TextPaint	A										<section class="prog__container">TextPaint is an extension of Paint that leaves room for some extra data used during text measuring and drawing.<pre><code>public class TextPaint</code></pre></section>	https://developer.android.com/reference/android/text/TextPaint.html
TextUtils.EllipsizeCallback	A										<section class="prog__container"><pre><code>public static interface TextUtils.EllipsizeCallback</code></pre></section>	https://developer.android.com/reference/android/text/TextUtils.EllipsizeCallback.html
TextUtils	A										<section class="prog__container"><pre><code>public class TextUtils</code></pre></section>	https://developer.android.com/reference/android/text/TextUtils.html
TextUtils.SimpleStringSplitter	A										<section class="prog__container">A simple string splitter.<pre><code>public static class TextUtils.SimpleStringSplitter</code></pre></section>	https://developer.android.com/reference/android/text/TextUtils.SimpleStringSplitter.html
TextUtils.StringSplitter	A										<section class="prog__container">An interface for splitting strings according to rules that are opaque to the user of this interface. This also has less overhead than split, which uses regular expressions and allocates an array to hold the results.<pre><code>public static interface TextUtils.StringSplitter</code></pre></section>	https://developer.android.com/reference/android/text/TextUtils.StringSplitter.html
TextUtils.TruncateAt	A										<section class="prog__container"><pre><code>public static final enum TextUtils.TruncateAt</code></pre></section>	https://developer.android.com/reference/android/text/TextUtils.TruncateAt.html
TextWatcher	A										<section class="prog__container">When an object of a type is attached to an Editable, its methods will be called when the text is changed.<pre><code>public interface TextWatcher</code></pre></section>	https://developer.android.com/reference/android/text/TextWatcher.html
DateFormat	A										<section class="prog__container">Utility class for producing strings with formatted date/time.<pre><code>public class DateFormat</code></pre></section>	https://developer.android.com/reference/android/text/format/DateFormat.html
DateUtils	A										<section class="prog__container">This class contains various date-related utilities for creating text for things like elapsed time and date ranges, strings for days of the week and months, and AM/PM text etc.<pre><code>public class DateUtils</code></pre></section>	https://developer.android.com/reference/android/text/format/DateUtils.html
Formatter	A										<section class="prog__container">Utility class to aid in formatting common values that are not covered by the <pre><code>Formatter</code></pre> class in <pre><code>java.util</code></pre><pre><code>public final class Formatter</code></pre></section>	https://developer.android.com/reference/android/text/format/Formatter.html
Time	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Use <pre><code>GregorianCalendar</code></pre> instead.<pre><code>public class Time</code></pre></section>	https://developer.android.com/reference/android/text/format/Time.html
ArrowKeyMovementMethod	A										<section class="prog__container">A movement method that provides cursor movement and selection. Supports displaying the context menu on DPad Center.<pre><code>public class ArrowKeyMovementMethod</code></pre></section>	https://developer.android.com/reference/android/text/method/ArrowKeyMovementMethod.html
BaseKeyListener	A										<section class="prog__container">Abstract base class for key listeners. Provides a basic foundation for entering and editing text. Subclasses should override <pre><code>onKeyDown(View, Editable, int, KeyEvent)</code></pre> and <pre><code>onKeyUp(View, Editable, int, KeyEvent)</code></pre> to insert characters as keys are pressed.<pre><code>public abstract class BaseKeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/BaseKeyListener.html
BaseMovementMethod	A										<section class="prog__container">Base classes for movement methods.<pre><code>public class BaseMovementMethod</code></pre></section>	https://developer.android.com/reference/android/text/method/BaseMovementMethod.html
CharacterPickerDialog	A										<section class="prog__container">Dialog for choosing accented characters related to a base character.<pre><code>public class CharacterPickerDialog</code></pre></section>	https://developer.android.com/reference/android/text/method/CharacterPickerDialog.html
DateKeyListener	A										<section class="prog__container">For entering dates in a text field.<pre><code>public class DateKeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/DateKeyListener.html
DateTimeKeyListener	A										<section class="prog__container">For entering dates and times in the same text field.<pre><code>public class DateTimeKeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/DateTimeKeyListener.html
DialerKeyListener	A										<section class="prog__container">For dialing-only text entry<pre><code>public class DialerKeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/DialerKeyListener.html
DigitsKeyListener	A										<section class="prog__container">For digits-only text entry<pre><code>public class DigitsKeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/DigitsKeyListener.html
HideReturnsTransformationMethod	A										<section class="prog__container">This transformation method causes any carriage return characters (\r) to be hidden by displaying them as zero-width non-breaking space characters (﻿).<pre><code>public class HideReturnsTransformationMethod</code></pre></section>	https://developer.android.com/reference/android/text/method/HideReturnsTransformationMethod.html
KeyListener	A										<section class="prog__container">Interface for converting text key events into edit operations on an Editable class. Note that for most cases this interface has been superceded by general soft input methods as defined by <pre><code>InputMethod</code></pre>; it should only be used for cases where an application has its own on-screen keypad and also wants to process hard keyboard events to match it.<pre><code>public interface KeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/KeyListener.html
LinkMovementMethod	A										<section class="prog__container">A movement method that traverses links in the text buffer and scrolls if necessary. Supports clicking on links with DPad Center or Enter.<pre><code>public class LinkMovementMethod</code></pre></section>	https://developer.android.com/reference/android/text/method/LinkMovementMethod.html
MetaKeyKeyListener	A										<section class="prog__container">This base class encapsulates the behavior for tracking the state of meta keys such as SHIFT, ALT and SYM as well as the pseudo-meta state of selecting text.<pre><code>public abstract class MetaKeyKeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html
MovementMethod	A										<section class="prog__container">Provides cursor positioning, scrolling and text selection functionality in a <pre><code>TextView</code></pre>.<pre><code>public interface MovementMethod</code></pre></section>	https://developer.android.com/reference/android/text/method/MovementMethod.html
MultiTapKeyListener	A										<section class="prog__container">This is the standard key listener for alphabetic input on 12-key keyboards. You should generally not need to instantiate this yourself; TextKeyListener will do it for you.<pre><code>public class MultiTapKeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/MultiTapKeyListener.html
NumberKeyListener	A										<section class="prog__container">For numeric text entry<pre><code>public abstract class NumberKeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/NumberKeyListener.html
android.text.method	A										<section class="prog__container">Provides classes that monitor or modify keypad input.</section>	https://developer.android.com/reference/android/text/method/package-summary.html
PasswordTransformationMethod	A										<section class="prog__container"><pre><code>public class PasswordTransformationMethod</code></pre></section>	https://developer.android.com/reference/android/text/method/PasswordTransformationMethod.html
QwertyKeyListener	A										<section class="prog__container">This is the standard key listener for alphabetic input on qwerty keyboards. You should generally not need to instantiate this yourself; TextKeyListener will do it for you.<pre><code>public class QwertyKeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/QwertyKeyListener.html
ReplacementTransformationMethod	A										<section class="prog__container">This transformation method causes the characters in the <pre><code>getOriginal()</code></pre> array to be replaced by the corresponding characters in the <pre><code>getReplacement()</code></pre> array.<pre><code>public abstract class ReplacementTransformationMethod</code></pre></section>	https://developer.android.com/reference/android/text/method/ReplacementTransformationMethod.html
ScrollingMovementMethod	A										<section class="prog__container">A movement method that interprets movement keys by scrolling the text buffer.<pre><code>public class ScrollingMovementMethod</code></pre></section>	https://developer.android.com/reference/android/text/method/ScrollingMovementMethod.html
SingleLineTransformationMethod	A										<section class="prog__container">This transformation method causes any newline characters (\n) to be displayed as spaces instead of causing line breaks, and causes carriage return characters (\r) to have no appearance.<pre><code>public class SingleLineTransformationMethod</code></pre></section>	https://developer.android.com/reference/android/text/method/SingleLineTransformationMethod.html
TextKeyListener.Capitalize	A										<section class="prog__container"><pre><code>public static final enum TextKeyListener.Capitalize</code></pre></section>	https://developer.android.com/reference/android/text/method/TextKeyListener.Capitalize.html
TextKeyListener	A										<section class="prog__container">This is the key listener for typing normal text. It delegates to other key listeners appropriate to the current keyboard and language.<pre><code>public class TextKeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/TextKeyListener.html
TimeKeyListener	A										<section class="prog__container">For entering times in a text field.<pre><code>public class TimeKeyListener</code></pre></section>	https://developer.android.com/reference/android/text/method/TimeKeyListener.html
Touch	A										<section class="prog__container"><pre><code>public class Touch</code></pre></section>	https://developer.android.com/reference/android/text/method/Touch.html
TransformationMethod	A										<section class="prog__container">TextView uses TransformationMethods to do things like replacing the characters of passwords with dots, or keeping the newline characters from causing line breaks in single-line text fields.<pre><code>public interface TransformationMethod</code></pre></section>	https://developer.android.com/reference/android/text/method/TransformationMethod.html
AbsoluteSizeSpan	A										<section class="prog__container"><pre><code>public class AbsoluteSizeSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/AbsoluteSizeSpan.html
AlignmentSpan	A										<section class="prog__container"><pre><code>public interface AlignmentSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/AlignmentSpan.html
AlignmentSpan.Standard	A										<section class="prog__container"><pre><code>public static class AlignmentSpan.Standard</code></pre></section>	https://developer.android.com/reference/android/text/style/AlignmentSpan.Standard.html
BackgroundColorSpan	A										<section class="prog__container"><pre><code>public class BackgroundColorSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/BackgroundColorSpan.html
BulletSpan	A										<section class="prog__container"><pre><code>public class BulletSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/BulletSpan.html
CharacterStyle	A										<section class="prog__container">The classes that affect character-level text formatting extend this class. Most extend its subclass <pre><code>MetricAffectingSpan</code></pre>, but simple ones may just implement <pre><code>UpdateAppearance</code></pre>.<pre><code>public abstract class CharacterStyle</code></pre></section>	https://developer.android.com/reference/android/text/style/CharacterStyle.html
ClickableSpan	A										<section class="prog__container">If an object of this type is attached to the text of a TextView with a movement method of LinkMovementMethod, the affected spans of text can be selected. If clicked, the <pre><code>onClick(View)</code></pre> method will be called.<pre><code>public abstract class ClickableSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/ClickableSpan.html
DrawableMarginSpan	A										<section class="prog__container"><pre><code>public class DrawableMarginSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/DrawableMarginSpan.html
DynamicDrawableSpan	A										<section class="prog__container"><pre><code>public abstract class DynamicDrawableSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/DynamicDrawableSpan.html
EasyEditSpan	A										<section class="prog__container">Provides an easy way to edit a portion of text.<pre><code>public class EasyEditSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/EasyEditSpan.html
ForegroundColorSpan	A										<section class="prog__container"><pre><code>public class ForegroundColorSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/ForegroundColorSpan.html
IconMarginSpan	A										<section class="prog__container"><pre><code>public class IconMarginSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/IconMarginSpan.html
ImageSpan	A										<section class="prog__container"><pre><code>public class ImageSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/ImageSpan.html
LeadingMarginSpan	A										<section class="prog__container">A paragraph style affecting the leading margin. There can be multiple leading margin spans on a single paragraph; they will be rendered in order, each adding its margin to the ones before it. The leading margin is on the right for lines in a right-to-left paragraph.<pre><code>public interface LeadingMarginSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/LeadingMarginSpan.html
LeadingMarginSpan.LeadingMarginSpan2	A										<section class="prog__container">An extended version of <pre><code>LeadingMarginSpan</code></pre>, which allows the implementor to specify the number of lines of the paragraph to which this object is attached that the "first line of paragraph" margin width will be applied to.<pre><code>public static interface LeadingMarginSpan.LeadingMarginSpan2</code></pre></section>	https://developer.android.com/reference/android/text/style/LeadingMarginSpan.LeadingMarginSpan2.html
LeadingMarginSpan.Standard	A										<section class="prog__container">The standard implementation of LeadingMarginSpan, which adjusts the margin but does not do any rendering.<pre><code>public static class LeadingMarginSpan.Standard</code></pre></section>	https://developer.android.com/reference/android/text/style/LeadingMarginSpan.Standard.html
LineBackgroundSpan	A										<section class="prog__container"><pre><code>public interface LineBackgroundSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/LineBackgroundSpan.html
LineHeightSpan	A										<section class="prog__container"><pre><code>public interface LineHeightSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/LineHeightSpan.html
LineHeightSpan.WithDensity	A										<section class="prog__container"><pre><code>public static interface LineHeightSpan.WithDensity</code></pre></section>	https://developer.android.com/reference/android/text/style/LineHeightSpan.WithDensity.html
LocaleSpan	A										<section class="prog__container">Changes the <pre><code>Locale</code></pre> of the text to which the span is attached.<pre><code>public class LocaleSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/LocaleSpan.html
MaskFilterSpan	A										<section class="prog__container"><pre><code>public class MaskFilterSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/MaskFilterSpan.html
MetricAffectingSpan	A										<section class="prog__container">The classes that affect character-level text formatting in a way that changes the width or height of characters extend this class.<pre><code>public abstract class MetricAffectingSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/MetricAffectingSpan.html
android.text.style	A										<section class="prog__container">Provides classes used to view or change the style of a span of text in a View object. The classes with a subclass Standard are passed in to SpannableString.setSpan() or SpannableStringBuilder.setSpan() to add a new styled span to a string in a View object. Interfaces AlignmentSpan LeadingMarginSpan A paragraph style affecting the leading margin. LeadingMarginSpan.LeadingMarginSpan2 An extended version of LeadingMarginSpan, which allows the implementor to specify the number of lines of the paragraph to which this object is attached that the "first line of paragraph" margin width will be applied to. LineBackgroundSpan LineHeightSpan LineHeightSpan.WithDensity ParagraphStyle The classes that affect paragraph-level text formatting implement this interface. TabStopSpan Represents a single tab stop on a line. UpdateAppearance The classes that affect character-level text in a way that modifies their appearance when one is added or removed must implement this interface. UpdateLayout The classes that affect character-level text formatting in a way that triggers a text layout update when one is added or removed must implement this interface. WrapTogetherSpan Classes AbsoluteSizeSpan AlignmentSpan.Standard BackgroundColorSpan BulletSpan CharacterStyle The classes that affect character-level text formatting extend this class. ClickableSpan If an object of this type is attached to the text of a TextView with a movement method of LinkMovementMethod, the affected spans of text can be selected. DrawableMarginSpan DynamicDrawableSpan EasyEditSpan Provides an easy way to edit a portion of text. ForegroundColorSpan IconMarginSpan ImageSpan LeadingMarginSpan.Standard The standard implementation of LeadingMarginSpan, which adjusts the margin but does not do any rendering. LocaleSpan Changes the Locale of the text to which the span is attached. MaskFilterSpan MetricAffectingSpan The classes that affect character-level text formatting in a way that changes the width or height of characters extend this class. QuoteSpan RasterizerSpan RelativeSizeSpan ReplacementSpan ScaleXSpan StrikethroughSpan StyleSpan Describes a style in a span. SubscriptSpan SuggestionSpan Holds suggestion candidates for the text enclosed in this span. SuperscriptSpan TabStopSpan.Standard The default implementation of TabStopSpan. TextAppearanceSpan Sets the text color, size, style, and typeface to match a TextAppearance resource. TtsSpan A span that supplies additional meta-data for the associated text intended for text-to-speech engines. TtsSpan.Builder<C extends Builder<?>> A simple builder for TtsSpans. TtsSpan.CardinalBuilder A builder for TtsSpans of type TYPE_CARDINAL. TtsSpan.DateBuilder A builder for TtsSpans of type TYPE_DATE. TtsSpan.DecimalBuilder A builder for TtsSpans of type TYPE_DECIMAL. TtsSpan.DigitsBuilder A builder for TtsSpans of type TYPE_DIGITS. TtsSpan.ElectronicBuilder A builder for TtsSpans of type TYPE_ELECTRONIC. TtsSpan.FractionBuilder A builder for TtsSpans of type TYPE_FRACTION. TtsSpan.MeasureBuilder A builder for TtsSpans of type TYPE_MEASURE. TtsSpan.MoneyBuilder A builder for TtsSpans of type TYPE_MONEY. TtsSpan.OrdinalBuilder A builder for TtsSpans of type TYPE_ORDINAL. TtsSpan.SemioticClassBuilder<C extends SemioticClassBuilder<?>> A builder for TtsSpans, has setters for morphosyntactic features. TtsSpan.TelephoneBuilder A builder for TtsSpans of type TYPE_TELEPHONE. TtsSpan.TextBuilder A builder for TtsSpans of type TYPE_TEXT. TtsSpan.TimeBuilder A builder for TtsSpans of type TYPE_TIME. TtsSpan.VerbatimBuilder A builder for TtsSpans of type TYPE_VERBATIM. TypefaceSpan Changes the typeface family of the text to which the span is attached. UnderlineSpan URLSpan </section>	https://developer.android.com/reference/android/text/style/package-summary.html
ParagraphStyle	A										<section class="prog__container">The classes that affect paragraph-level text formatting implement this interface.<pre><code>public interface ParagraphStyle</code></pre></section>	https://developer.android.com/reference/android/text/style/ParagraphStyle.html
QuoteSpan	A										<section class="prog__container"><pre><code>public class QuoteSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/QuoteSpan.html
RasterizerSpan	A										<section class="prog__container"><pre><code>public class RasterizerSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/RasterizerSpan.html
RelativeSizeSpan	A										<section class="prog__container"><pre><code>public class RelativeSizeSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/RelativeSizeSpan.html
ReplacementSpan	A										<section class="prog__container"><pre><code>public abstract class ReplacementSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/ReplacementSpan.html
ScaleXSpan	A										<section class="prog__container"><pre><code>public class ScaleXSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/ScaleXSpan.html
StrikethroughSpan	A										<section class="prog__container"><pre><code>public class StrikethroughSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/StrikethroughSpan.html
StyleSpan	A										<section class="prog__container">Describes a style in a span. Note that styles are cumulative -- if both bold and italic are set in separate spans, or if the base style is bold and a span calls for italic, you get bold italic. You can't turn off a style from the base style.<pre><code>public class StyleSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/StyleSpan.html
SubscriptSpan	A										<section class="prog__container"><pre><code>public class SubscriptSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/SubscriptSpan.html
SuggestionSpan	A										<section class="prog__container">Holds suggestion candidates for the text enclosed in this span. When such a span is edited in an EditText, double tapping on the text enclosed in this span will display a popup dialog listing suggestion replacement for that text. The user can then replace the original text by one of the suggestions. These spans should typically be created by the input method to provide correction and alternates for the text.<pre><code>public class SuggestionSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/SuggestionSpan.html
SuperscriptSpan	A										<section class="prog__container"><pre><code>public class SuperscriptSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/SuperscriptSpan.html
TabStopSpan	A										<section class="prog__container">Represents a single tab stop on a line.<pre><code>public interface TabStopSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/TabStopSpan.html
TabStopSpan.Standard	A										<section class="prog__container">The default implementation of TabStopSpan.<pre><code>public static class TabStopSpan.Standard</code></pre></section>	https://developer.android.com/reference/android/text/style/TabStopSpan.Standard.html
TextAppearanceSpan	A										<section class="prog__container">Sets the text color, size, style, and typeface to match a TextAppearance resource.<pre><code>public class TextAppearanceSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/TextAppearanceSpan.html
TtsSpan.Builder	A										<section class="prog__container">A simple builder for TtsSpans. This builder can be used directly, but the more specific subclasses of this builder like <pre><code>TtsSpan.TextBuilder</code></pre> and <pre><code>TtsSpan.CardinalBuilder</code></pre> are likely more useful. This class uses generics so methods from this class can return instances of its child classes, resulting in a fluent API (CRTP pattern).<pre><code>public static class TtsSpan.Builder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.Builder.html
TtsSpan.CardinalBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_CARDINAL</code></pre>.<pre><code>public static class TtsSpan.CardinalBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.CardinalBuilder.html
TtsSpan.DateBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_DATE</code></pre>.<pre><code>public static class TtsSpan.DateBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.DateBuilder.html
TtsSpan.DecimalBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_DECIMAL</code></pre>.<pre><code>public static class TtsSpan.DecimalBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.DecimalBuilder.html
TtsSpan.DigitsBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_DIGITS</code></pre>.<pre><code>public static class TtsSpan.DigitsBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.DigitsBuilder.html
TtsSpan.ElectronicBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_ELECTRONIC</code></pre>.<pre><code>public static class TtsSpan.ElectronicBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.ElectronicBuilder.html
TtsSpan.FractionBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_FRACTION</code></pre>.<pre><code>public static class TtsSpan.FractionBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.FractionBuilder.html
TtsSpan	A										<section class="prog__container">A span that supplies additional meta-data for the associated text intended for text-to-speech engines. If the text is being processed by a text-to-speech engine, the engine may use the data in this span in addition to or instead of its associated text. Each instance of a TtsSpan has a type, for example <pre><code>TYPE_DATE</code></pre> or <pre><code>TYPE_MEASURE</code></pre>. And a list of arguments, provided as key-value pairs in a bundle. The inner classes are there for convenience and provide builders for each TtsSpan type.<pre><code>public class TtsSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.html
TtsSpan.MeasureBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_MEASURE</code></pre>.<pre><code>public static class TtsSpan.MeasureBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.MeasureBuilder.html
TtsSpan.MoneyBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_MONEY</code></pre>.<pre><code>public static class TtsSpan.MoneyBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.MoneyBuilder.html
TtsSpan.OrdinalBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_ORDINAL</code></pre>.<pre><code>public static class TtsSpan.OrdinalBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.OrdinalBuilder.html
TtsSpan.SemioticClassBuilder	A										<section class="prog__container">A builder for TtsSpans, has setters for morphosyntactic features. This builder can be used directly, but the more specific subclasses of this builder like <pre><code>TtsSpan.TextBuilder</code></pre> and <pre><code>TtsSpan.CardinalBuilder</code></pre> are likely more useful.<pre><code>public static class TtsSpan.SemioticClassBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.SemioticClassBuilder.html
TtsSpan.TelephoneBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_TELEPHONE</code></pre>.<pre><code>public static class TtsSpan.TelephoneBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.TelephoneBuilder.html
TtsSpan.TextBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_TEXT</code></pre>.<pre><code>public static class TtsSpan.TextBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.TextBuilder.html
TtsSpan.TimeBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_TIME</code></pre>.<pre><code>public static class TtsSpan.TimeBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.TimeBuilder.html
TtsSpan.VerbatimBuilder	A										<section class="prog__container">A builder for TtsSpans of type <pre><code>TYPE_VERBATIM</code></pre>.<pre><code>public static class TtsSpan.VerbatimBuilder</code></pre></section>	https://developer.android.com/reference/android/text/style/TtsSpan.VerbatimBuilder.html
TypefaceSpan	A										<section class="prog__container">Changes the typeface family of the text to which the span is attached.<pre><code>public class TypefaceSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/TypefaceSpan.html
UnderlineSpan	A										<section class="prog__container"><pre><code>public class UnderlineSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/UnderlineSpan.html
UpdateAppearance	A										<section class="prog__container">The classes that affect character-level text in a way that modifies their appearance when one is added or removed must implement this interface. Note that if the class also impacts size or other metrics, it should instead implement <pre><code>UpdateLayout</code></pre>.<pre><code>public interface UpdateAppearance</code></pre></section>	https://developer.android.com/reference/android/text/style/UpdateAppearance.html
UpdateLayout	A										<section class="prog__container">The classes that affect character-level text formatting in a way that triggers a text layout update when one is added or removed must implement this interface. This interface also includes <pre><code>UpdateAppearance</code></pre> since such a change implicitly also impacts the appearance.<pre><code>public interface UpdateLayout</code></pre></section>	https://developer.android.com/reference/android/text/style/UpdateLayout.html
URLSpan	A										<section class="prog__container"><pre><code>public class URLSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/URLSpan.html
WrapTogetherSpan	A										<section class="prog__container"><pre><code>public interface WrapTogetherSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/WrapTogetherSpan.html
Linkify	A										<section class="prog__container">Linkify take a piece of text and a regular expression and turns all of the regex matches in the text into clickable links. This is particularly useful for matching things like email addresses, web URLs, etc. and making them actionable. Alone with the pattern that is to be matched, a URL scheme prefix is also required. Any pattern match that does not begin with the supplied scheme will have the scheme prepended to the matched text when the clickable URL is created. For instance, if you are matching web URLs you would supply the scheme <pre><code>http://</code></pre>. If the pattern matches example.com, which does not have a URL scheme prefix, the supplied scheme will be prepended to create <pre><code>http://example.com</code></pre> when the clickable URL link is created.<pre><code>public class Linkify</code></pre></section>	https://developer.android.com/reference/android/text/util/Linkify.html
Linkify.MatchFilter	A										<section class="prog__container">MatchFilter enables client code to have more control over what is allowed to match and become a link, and what is not. For example: when matching web URLs you would like things like http://www.example.com to match, as well as just example.com itelf. However, you would not want to match against the domain in support@example.com. So, when matching against a web URL pattern you might also include a MatchFilter that disallows the match if it is immediately preceded by an at-sign (@).<pre><code>public static interface Linkify.MatchFilter</code></pre></section>	https://developer.android.com/reference/android/text/util/Linkify.MatchFilter.html
Linkify.TransformFilter	A										<section class="prog__container">TransformFilter enables client code to have more control over how matched patterns are represented as URLs. For example: when converting a phone number such as (919) 555-1212 into a tel: URL the parentheses, white space, and hyphen need to be removed to produce tel:9195551212.<pre><code>public static interface Linkify.TransformFilter</code></pre></section>	https://developer.android.com/reference/android/text/util/Linkify.TransformFilter.html
Rfc822Token	A										<section class="prog__container">This class stores an RFC 822-like name, address, and comment, and provides methods to convert them to quoted strings.<pre><code>public class Rfc822Token</code></pre></section>	https://developer.android.com/reference/android/text/util/Rfc822Token.html
Rfc822Tokenizer	A										<section class="prog__container">This class works as a Tokenizer for MultiAutoCompleteTextView for address list fields, and also provides a method for converting a string of addresses (such as might be typed into such a field) into a series of Rfc822Tokens.<pre><code>public class Rfc822Tokenizer</code></pre></section>	https://developer.android.com/reference/android/text/util/Rfc822Tokenizer.html
ArcMotion	A										<section class="prog__container">A PathMotion that generates a curved path along an arc on an imaginary circle containing the two points. If the horizontal distance between the points is less than the vertical distance, then the circle's center point will be horizontally aligned with the end point. If the vertical distance is less than the horizontal distance then the circle's center point will be vertically aligned with the end point.<pre><code>public class ArcMotion</code></pre></section>	https://developer.android.com/reference/android/transition/ArcMotion.html
AutoTransition	A										<section class="prog__container">Utility class for creating a default transition that automatically fades, moves, and resizes views during a scene change.<pre><code>public class AutoTransition</code></pre></section>	https://developer.android.com/reference/android/transition/AutoTransition.html
ChangeBounds	A										<section class="prog__container">This transition captures the layout bounds of target views before and after the scene change and animates those changes during the transition.<pre><code>public class ChangeBounds</code></pre></section>	https://developer.android.com/reference/android/transition/ChangeBounds.html
ChangeClipBounds	A										<section class="prog__container">ChangeClipBounds captures the <pre><code>getClipBounds()</code></pre> before and after the scene change and animates those changes during the transition.<pre><code>public class ChangeClipBounds</code></pre></section>	https://developer.android.com/reference/android/transition/ChangeClipBounds.html
ChangeImageTransform	A										<section class="prog__container">This Transition captures an ImageView's matrix before and after the scene change and animates it during the transition.<pre><code>public class ChangeImageTransform</code></pre></section>	https://developer.android.com/reference/android/transition/ChangeImageTransform.html
ChangeScroll	A										<section class="prog__container">This transition captures the scroll properties of targets before and after the scene change and animates any changes.<pre><code>public class ChangeScroll</code></pre></section>	https://developer.android.com/reference/android/transition/ChangeScroll.html
ChangeTransform	A										<section class="prog__container">This Transition captures scale and rotation for Views before and after the scene change and animates those changes during the transition. A change in parent is handled as well by capturing the transforms from the parent before and after the scene change and animating those during the transition.<pre><code>public class ChangeTransform</code></pre></section>	https://developer.android.com/reference/android/transition/ChangeTransform.html
CircularPropagation	A										<section class="prog__container">A propagation that varies with the distance to the epicenter of the Transition or center of the scene if no epicenter exists. When a View is visible in the start of the transition, Views farther from the epicenter will transition sooner than Views closer to the epicenter. When a View is not in the start of the transition or is not visible at the start of the transition, it will transition sooner when closer to the epicenter and later when farther from the epicenter. This is the default TransitionPropagation used with <pre><code>Explode</code></pre>.<pre><code>public class CircularPropagation</code></pre></section>	https://developer.android.com/reference/android/transition/CircularPropagation.html
Explode	A										<section class="prog__container">This transition tracks changes to the visibility of target views in the start and end scenes and moves views in or out from the edges of the scene. Visibility is determined by both the <pre><code>setVisibility(int)</code></pre> state of the view as well as whether it is parented in the current view hierarchy. Disappearing Views are limited as described in <pre><code>onDisappear(android.view.ViewGroup, TransitionValues, int, TransitionValues, int)</code></pre>.<pre><code>public class Explode</code></pre></section>	https://developer.android.com/reference/android/transition/Explode.html
Fade	A										<section class="prog__container">This transition tracks changes to the visibility of target views in the start and end scenes and fades views in or out when they become visible or non-visible. Visibility is determined by both the <pre><code>setVisibility(int)</code></pre> state of the view as well as whether it is parented in the current view hierarchy.<pre><code>public class Fade</code></pre></section>	https://developer.android.com/reference/android/transition/Fade.html
android.transition	A										<section class="prog__container">The classes in this package enable "scenes & transitions" functionality for view hiearchies.</section>	https://developer.android.com/reference/android/transition/package-summary.html
PathMotion	A										<section class="prog__container">This base class can be extended to provide motion along a Path to Transitions.<pre><code>public abstract class PathMotion</code></pre></section>	https://developer.android.com/reference/android/transition/PathMotion.html
PatternPathMotion	A										<section class="prog__container">A PathMotion that takes a Path pattern and applies it to the separation between two points. The starting point of the Path will be moved to the origin and the end point will be scaled and rotated so that it matches with the target end point.<pre><code>public class PatternPathMotion</code></pre></section>	https://developer.android.com/reference/android/transition/PatternPathMotion.html
Scene	A										<section class="prog__container">A scene represents the collection of values that various properties in the View hierarchy will have when the scene is applied. A Scene can be configured to automatically run a Transition when it is applied, which will animate the various property changes that take place during the scene change.<pre><code>public final class Scene</code></pre></section>	https://developer.android.com/reference/android/transition/Scene.html
SidePropagation	A										<section class="prog__container">A <pre><code>TransitionPropagation</code></pre> that propagates based on the distance to the side and, orthogonally, the distance to epicenter. If the transitioning View is visible in the start of the transition, then it will transition sooner when closer to the side and later when farther. If the view is not visible in the start of the transition, then it will transition later when closer to the side and sooner when farther from the edge. This is the default TransitionPropagation used with <pre><code>Slide</code></pre>.<pre><code>public class SidePropagation</code></pre></section>	https://developer.android.com/reference/android/transition/SidePropagation.html
Slide	A										<section class="prog__container">This transition tracks changes to the visibility of target views in the start and end scenes and moves views in or out from one of the edges of the scene. Visibility is determined by both the <pre><code>setVisibility(int)</code></pre> state of the view as well as whether it is parented in the current view hierarchy. Disappearing Views are limited as described in <pre><code>onDisappear(android.view.ViewGroup, TransitionValues, int, TransitionValues, int)</code></pre>.<pre><code>public class Slide</code></pre></section>	https://developer.android.com/reference/android/transition/Slide.html
Transition.EpicenterCallback	A										<section class="prog__container">Class to get the epicenter of Transition. Use <pre><code>setEpicenterCallback(android.transition.Transition.EpicenterCallback)</code></pre> to set the callback used to calculate the epicenter of the Transition. Override <pre><code>getEpicenter()</code></pre> to return the rectangular region in screen coordinates of the epicenter of the transition.<pre><code>public static abstract class Transition.EpicenterCallback</code></pre></section>	https://developer.android.com/reference/android/transition/Transition.EpicenterCallback.html
Transition	A										<section class="prog__container">A Transition holds information about animations that will be run on its targets during a scene change. Subclasses of this abstract class may choreograph several child transitions (<pre><code>TransitionSet</code></pre> or they may perform custom animations themselves. Any Transition has two main jobs: (1) capture property values, and (2) play animations based on changes to captured property values. A custom transition knows what property values on View objects are of interest to it, and also knows how to animate changes to those values. For example, the <pre><code>Fade</code></pre> transition tracks changes to visibility-related properties and is able to construct and run animations that fade items in or out based on changes to those properties.<pre><code>public abstract class Transition</code></pre></section>	https://developer.android.com/reference/android/transition/Transition.html
Transition.TransitionListener	A										<section class="prog__container">A transition listener receives notifications from a transition. Notifications indicate transition lifecycle events.<pre><code>public static interface Transition.TransitionListener</code></pre></section>	https://developer.android.com/reference/android/transition/Transition.TransitionListener.html
TransitionInflater	A										<section class="prog__container">This class inflates scenes and transitions from resource files. Information on XML resource descriptions for transitions can be found for <pre><code>Transition</code></pre>, <pre><code>TransitionSet</code></pre>, <pre><code>TransitionTarget</code></pre>, <pre><code>Fade</code></pre>, and <pre><code>TransitionManager</code></pre>.<pre><code>public class TransitionInflater</code></pre></section>	https://developer.android.com/reference/android/transition/TransitionInflater.html
TransitionManager	A										<section class="prog__container">This class manages the set of transitions that fire when there is a change of <pre><code>Scene</code></pre>. To use the manager, add scenes along with transition objects with calls to <pre><code>setTransition(Scene, Transition)</code></pre> or <pre><code>setTransition(Scene, Scene, Transition)</code></pre>. Setting specific transitions for scene changes is not required; by default, a Scene change will use <pre><code>AutoTransition</code></pre> to do something reasonable for most situations. Specifying other transitions for particular scene changes is only necessary if the application wants different transition behavior in these situations.<pre><code>public class TransitionManager</code></pre></section>	https://developer.android.com/reference/android/transition/TransitionManager.html
TransitionPropagation	A										<section class="prog__container">Extend <pre><code>TransitionPropagation</code></pre> to customize start delays for Animators created in <pre><code>createAnimator(ViewGroup, TransitionValues, TransitionValues)</code></pre>. A Transition such as <pre><code>Explode</code></pre> defaults to using <pre><code>CircularPropagation</code></pre> and Views closer to the epicenter will move out of the scene later and into the scene sooner than Views farther from the epicenter, giving the appearance of inertia. With no TransitionPropagation, all Views will react simultaneously to the start of the transition.<pre><code>public abstract class TransitionPropagation</code></pre></section>	https://developer.android.com/reference/android/transition/TransitionPropagation.html
TransitionSet	A										<section class="prog__container">A TransitionSet is a parent of child transitions (including other TransitionSets). Using TransitionSets enables more complex choreography of transitions, where some sets play <pre><code>ORDERING_TOGETHER</code></pre> and others play <pre><code>ORDERING_SEQUENTIAL</code></pre>. For example, <pre><code>AutoTransition</code></pre> uses a TransitionSet to sequentially play a Fade(Fade.OUT), followed by a <pre><code>ChangeBounds</code></pre>, followed by a Fade(Fade.OUT) transition.<pre><code>public class TransitionSet</code></pre></section>	https://developer.android.com/reference/android/transition/TransitionSet.html
TransitionValues	A										<section class="prog__container">Data structure which holds cached values for the transition. The view field is the target which all of the values pertain to. The values field is a map which holds information for fields according to names selected by the transitions. These names should be unique to avoid clobbering values stored by other transitions, such as the convention project:transition_name:property_name. For example, the platform might store a property "alpha" in a transition "Fader" as "android:fader:alpha".<pre><code>public class TransitionValues</code></pre></section>	https://developer.android.com/reference/android/transition/TransitionValues.html
Visibility	A										<section class="prog__container">This transition tracks changes to the visibility of target views in the start and end scenes. Visibility is determined not just by the <pre><code>setVisibility(int)</code></pre> state of views, but also whether views exist in the current view hierarchy. The class is intended to be a utility for subclasses such as <pre><code>Fade</code></pre>, which use this visibility information to determine the specific animations to run when visibility changes occur. Subclasses should implement one or both of the methods <pre><code>onAppear(ViewGroup, TransitionValues, int, TransitionValues, int)</code></pre>, <pre><code>onDisappear(ViewGroup, TransitionValues, int, TransitionValues, int)</code></pre> or <pre><code>onAppear(ViewGroup, View, TransitionValues, TransitionValues)</code></pre>, <pre><code>onDisappear(ViewGroup, View, TransitionValues, TransitionValues)</code></pre>.<pre><code>public abstract class Visibility</code></pre></section>	https://developer.android.com/reference/android/transition/Visibility.html
VisibilityPropagation	A										<section class="prog__container">Base class for <pre><code>TransitionPropagation</code></pre>s that care about View Visibility and the center position of the View.<pre><code>public abstract class VisibilityPropagation</code></pre></section>	https://developer.android.com/reference/android/transition/VisibilityPropagation.html
AndroidException	A										<section class="prog__container">Base class for all checked exceptions thrown by the Android frameworks.<pre><code>public class AndroidException</code></pre></section>	https://developer.android.com/reference/android/util/AndroidException.html
AndroidRuntimeException	A										<section class="prog__container">Base class for all unchecked exceptions thrown by the Android frameworks.<pre><code>public class AndroidRuntimeException</code></pre></section>	https://developer.android.com/reference/android/util/AndroidRuntimeException.html
ArrayMap	A										<section class="prog__container">ArrayMap is a generic key-&gt;value mapping data structure that is designed to be more memory efficient than a traditional <pre><code>HashMap</code></pre>. It keeps its mappings in an array data structure -- an integer array of hash codes for each item, and an Object array of the key/value pairs. This allows it to avoid having to create an extra object for every entry put in to the map, and it also tries to control the growth of the size of these arrays more aggressively (since growing them only requires copying the entries in the array, not rebuilding a hash map).<pre><code>public final class ArrayMap</code></pre></section>	https://developer.android.com/reference/android/util/ArrayMap.html
ArraySet	A										<section class="prog__container">ArraySet is a generic set data structure that is designed to be more memory efficient than a traditional <pre><code>HashSet</code></pre>. The design is very similar to <pre><code>ArrayMap</code></pre>, with all of the caveats described there. This implementation is separate from ArrayMap, however, so the Object array contains only one item for each entry in the set (instead of a pair for a mapping).<pre><code>public final class ArraySet</code></pre></section>	https://developer.android.com/reference/android/util/ArraySet.html
AtomicFile	A										<section class="prog__container">Helper class for performing atomic operations on a file by creating a backup file until a write has successfully completed. If you need this on older versions of the platform you can use <pre><code>AtomicFile</code></pre> in the v4 support library.<pre><code>public class AtomicFile</code></pre></section>	https://developer.android.com/reference/android/util/AtomicFile.html
AttributeSet	A										<section class="prog__container">A collection of attributes, as found associated with a tag in an XML document. Often you will not want to use this interface directly, instead passing it to <pre><code>Resources.Theme.obtainStyledAttributes()</code></pre> which will take care of parsing the attributes for you. In particular, the Resources API will convert resource references (attribute values such as "@string/my_label" in the original XML) to the desired type for you; if you use AttributeSet directly then you will need to manually check for resource references (with <pre><code>getAttributeResourceValue(int, int)</code></pre>) and do the resource lookup yourself if needed. Direct use of AttributeSet also prevents the application of themes and styles when retrieving attribute values.<pre><code>public interface AttributeSet</code></pre></section>	https://developer.android.com/reference/android/util/AttributeSet.html
Base64	A										<section class="prog__container">Utilities for encoding and decoding the Base64 representation of binary data. See RFCs 2045 and 3548.<pre><code>public class Base64</code></pre></section>	https://developer.android.com/reference/android/util/Base64.html
Base64DataException	A										<section class="prog__container">This exception is thrown by <pre><code>Base64InputStream</code></pre> or <pre><code>Base64OutputStream</code></pre> when an error is detected in the data being decoded. This allows problems with the base64 data to be disambiguated from errors in the underlying streams (e.g. actual connection errors.)<pre><code>public class Base64DataException</code></pre></section>	https://developer.android.com/reference/android/util/Base64DataException.html
Base64InputStream	A										<section class="prog__container">An InputStream that does Base64 decoding on the data read through it.<pre><code>public class Base64InputStream</code></pre></section>	https://developer.android.com/reference/android/util/Base64InputStream.html
Base64OutputStream	A										<section class="prog__container">An OutputStream that does Base64 encoding on the data written to it, writing the resulting data to another OutputStream.<pre><code>public class Base64OutputStream</code></pre></section>	https://developer.android.com/reference/android/util/Base64OutputStream.html
Config	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 14.</strong><br/> This class is not useful, it just returns the same value for all constants, and has always done this. Do not use it.<pre><code>public final class Config</code></pre></section>	https://developer.android.com/reference/android/util/Config.html
DebugUtils	A										<section class="prog__container"><pre><code>public class DebugUtils</code></pre></section>	https://developer.android.com/reference/android/util/DebugUtils.html
DisplayMetrics	A										<section class="prog__container">A structure describing general information about a display, such as its size, density, and font scaling.<pre><code>public class DisplayMetrics</code></pre></section>	https://developer.android.com/reference/android/util/DisplayMetrics.html
EventLog.Event	A										<section class="prog__container">A previously logged event read from the logs. Instances are thread safe.<pre><code>public static final class EventLog.Event</code></pre></section>	https://developer.android.com/reference/android/util/EventLog.Event.html
EventLog	A										<section class="prog__container">Access to the system diagnostic event record. System diagnostic events are used to record certain system-level events (such as garbage collection, activity manager state, system watchdogs, and other low level activity), which may be automatically collected and analyzed during system development.<pre><code>public class EventLog</code></pre></section>	https://developer.android.com/reference/android/util/EventLog.html
EventLogTags.Description	A										<section class="prog__container"><pre><code>public static class EventLogTags.Description</code></pre></section>	https://developer.android.com/reference/android/util/EventLogTags.Description.html
EventLogTags	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 8.</strong><br/> This class is no longer functional. Use <pre><code>EventLog</code></pre> instead.<pre><code>public class EventLogTags</code></pre></section>	https://developer.android.com/reference/android/util/EventLogTags.html
FloatMath	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Use <pre><code>Math</code></pre> instead.<pre><code>public class FloatMath</code></pre></section>	https://developer.android.com/reference/android/util/FloatMath.html
FloatProperty	A										<section class="prog__container">An implementation of <pre><code>Property</code></pre> to be used specifically with fields of type <pre><code>float</code></pre>. This type-specific subclass enables performance benefit by allowing calls to a <pre><code>setValue()</code></pre> function that takes the primitive <pre><code>float</code></pre> type and avoids autoboxing and other overhead associated with the <pre><code>Float</code></pre> class.<pre><code>public abstract class FloatProperty</code></pre></section>	https://developer.android.com/reference/android/util/FloatProperty.html
IntProperty	A										<section class="prog__container">An implementation of <pre><code>Property</code></pre> to be used specifically with fields of type <pre><code>int</code></pre>. This type-specific subclass enables performance benefit by allowing calls to a <pre><code>setValue()</code></pre> function that takes the primitive <pre><code>int</code></pre> type and avoids autoboxing and other overhead associated with the <pre><code>Integer</code></pre> class.<pre><code>public abstract class IntProperty</code></pre></section>	https://developer.android.com/reference/android/util/IntProperty.html
JsonReader	A										<section class="prog__container">Reads a JSON (RFC 4627) encoded value as a stream of tokens. This stream includes both literal values (strings, numbers, booleans, and nulls) as well as the begin and end delimiters of objects and arrays. The tokens are traversed in depth-first order, the same order that they appear in the JSON document. Within JSON objects, name/value pairs are represented by a single token. <h3>Parsing JSON</h3> To create a recursive descent parser for your own JSON streams, first create an entry point method that creates a <pre><code>JsonReader</code></pre>.<pre><code>public final class JsonReader</code></pre></section>	https://developer.android.com/reference/android/util/JsonReader.html
JsonToken	A										<section class="prog__container">A structure, name or value type in a JSON-encoded string.<pre><code>public final enum JsonToken</code></pre></section>	https://developer.android.com/reference/android/util/JsonToken.html
JsonWriter	A										<section class="prog__container">Writes a JSON (RFC 4627) encoded value to a stream, one token at a time. The stream includes both literal values (strings, numbers, booleans and nulls) as well as the begin and end delimiters of objects and arrays. <h3>Encoding JSON</h3> To encode your data as JSON, create a new <pre><code>JsonWriter</code></pre>. Each JSON document must contain one top-level array or object. Call methods on the writer as you walk the structure's contents, nesting arrays and objects as necessary: <ul> <li>To write <strong>arrays</strong>, first call <pre><code>beginArray()</code></pre>. Write each of the array's elements with the appropriate <pre><code>value(boolean)</code></pre> methods or by nesting other arrays and objects. Finally close the array using <pre><code>endArray()</code></pre>. <li>To write <strong>objects</strong>, first call <pre><code>beginObject()</code></pre>. Write each of the object's properties by alternating calls to <pre><code>name(String)</code></pre> with the property's value. Write property values with the appropriate <pre><code>value(boolean)</code></pre> method or by nesting other objects or arrays. Finally close the object using <pre><code>endObject()</code></pre>. </li></li></ul> <h3>Example</h3> Suppose we'd like to encode a stream of messages such as the following: <pre> <pre><code>[ { "id": 912345678901, "text": "How do I write JSON on Android?", "geo": null, "user": { "name": "android_newb", "followers_count": 41 } }, { "id": 912345678902, "text": "@android_newb just use android.util.JsonWriter!", "geo": [50.454722, -104.606667], "user": { "name": "jesse", "followers_count": 2 } } ]</code></pre></pre> This code encodes the above structure: <pre> <pre><code>public void writeJsonStream(OutputStream out, List&lt;Message&gt; messages) throws IOException { JsonWriter writer = new JsonWriter(new OutputStreamWriter(out, "UTF-8")); writer.setIndent(" "); writeMessagesArray(writer, messages); writer.close(); } public void writeMessagesArray(JsonWriter writer, List&lt;Message&gt; messages) throws IOException { writer.beginArray(); for (Message message : messages) { writeMessage(writer, message); } writer.endArray(); } public void writeMessage(JsonWriter writer, Message message) throws IOException { writer.beginObject(); writer.name("id").value(message.getId()); writer.name("text").value(message.getText()); if (message.getGeo() != null) { writer.name("geo"); writeDoublesArray(writer, message.getGeo()); } else { writer.name("geo").nullValue(); } writer.name("user"); writeUser(writer, message.getUser()); writer.endObject(); } public void writeUser(JsonWriter writer, User user) throws IOException { writer.beginObject(); writer.name("name").value(user.getName()); writer.name("followers_count").value(user.getFollowersCount()); writer.endObject(); } public void writeDoublesArray(JsonWriter writer, List&lt;Double&gt; doubles) throws IOException { writer.beginArray(); for (Double value : doubles) { writer.value(value); } writer.endArray(); }</code></pre></pre><pre><code>public final class JsonWriter</code></pre></section>	https://developer.android.com/reference/android/util/JsonWriter.html
LayoutDirection	A										<section class="prog__container">A class for defining layout directions. A layout direction can be left-to-right (LTR) or right-to-left (RTL). It can also be inherited (from a parent) or deduced from the default language script of a locale.<pre><code>public final class LayoutDirection</code></pre></section>	https://developer.android.com/reference/android/util/LayoutDirection.html
Log	A										<section class="prog__container">API for sending log output.<pre><code>public final class Log</code></pre></section>	https://developer.android.com/reference/android/util/Log.html
LogPrinter	A										<section class="prog__container">Implementation of a <pre><code>Printer</code></pre> that sends its output to the system log.<pre><code>public class LogPrinter</code></pre></section>	https://developer.android.com/reference/android/util/LogPrinter.html
LongSparseArray	A										<section class="prog__container">SparseArray mapping longs to Objects. Unlike a normal array of Objects, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Longs to Objects, both because it avoids auto-boxing keys and its data structure doesn't rely on an extra entry object for each mapping.<pre><code>public class LongSparseArray</code></pre></section>	https://developer.android.com/reference/android/util/LongSparseArray.html
LruCache	A										<section class="prog__container">A cache that holds strong references to a limited number of values. Each time a value is accessed, it is moved to the head of a queue. When a value is added to a full cache, the value at the end of that queue is evicted and may become eligible for garbage collection.<pre><code>public class LruCache</code></pre></section>	https://developer.android.com/reference/android/util/LruCache.html
MalformedJsonException	A										<section class="prog__container">Thrown when a reader encounters malformed JSON. Some syntax errors can be ignored by calling <pre><code>setLenient(boolean)</code></pre>.<pre><code>public final class MalformedJsonException</code></pre></section>	https://developer.android.com/reference/android/util/MalformedJsonException.html
MonthDisplayHelper	A										<section class="prog__container">Helps answer common questions that come up when displaying a month in a 6 row calendar grid format. Not thread safe.<pre><code>public class MonthDisplayHelper</code></pre></section>	https://developer.android.com/reference/android/util/MonthDisplayHelper.html
MutableBoolean	A										<section class="prog__container"><pre><code>public final class MutableBoolean</code></pre></section>	https://developer.android.com/reference/android/util/MutableBoolean.html
MutableByte	A										<section class="prog__container"><pre><code>public final class MutableByte</code></pre></section>	https://developer.android.com/reference/android/util/MutableByte.html
MutableChar	A										<section class="prog__container"><pre><code>public final class MutableChar</code></pre></section>	https://developer.android.com/reference/android/util/MutableChar.html
MutableDouble	A										<section class="prog__container"><pre><code>public final class MutableDouble</code></pre></section>	https://developer.android.com/reference/android/util/MutableDouble.html
MutableFloat	A										<section class="prog__container"><pre><code>public final class MutableFloat</code></pre></section>	https://developer.android.com/reference/android/util/MutableFloat.html
MutableInt	A										<section class="prog__container"><pre><code>public final class MutableInt</code></pre></section>	https://developer.android.com/reference/android/util/MutableInt.html
MutableLong	A										<section class="prog__container"><pre><code>public final class MutableLong</code></pre></section>	https://developer.android.com/reference/android/util/MutableLong.html
MutableShort	A										<section class="prog__container"><pre><code>public final class MutableShort</code></pre></section>	https://developer.android.com/reference/android/util/MutableShort.html
NoSuchPropertyException	A										<section class="prog__container">Thrown when code requests a <pre><code>Property</code></pre> on a class that does not expose the appropriate method or field.<pre><code>public class NoSuchPropertyException</code></pre></section>	https://developer.android.com/reference/android/util/NoSuchPropertyException.html
Pair	A										<section class="prog__container">Container to ease passing around a tuple of two objects. This object provides a sensible implementation of equals(), returning true if equals() is true on each of the contained objects.<pre><code>public class Pair</code></pre></section>	https://developer.android.com/reference/android/util/Pair.html
Patterns	A										<section class="prog__container">Commonly used regular expression patterns.<pre><code>public class Patterns</code></pre></section>	https://developer.android.com/reference/android/util/Patterns.html
Printer	A										<section class="prog__container">Simple interface for printing text, allowing redirection to various targets. Standard implementations are <pre><code>LogPrinter</code></pre>, <pre><code>StringBuilderPrinter</code></pre>, and <pre><code>PrintWriterPrinter</code></pre>.<pre><code>public interface Printer</code></pre></section>	https://developer.android.com/reference/android/util/Printer.html
PrintStreamPrinter	A										<section class="prog__container">Implementation of a <pre><code>Printer</code></pre> that sends its output to a <pre><code>PrintStream</code></pre>.<pre><code>public class PrintStreamPrinter</code></pre></section>	https://developer.android.com/reference/android/util/PrintStreamPrinter.html
PrintWriterPrinter	A										<section class="prog__container">Implementation of a <pre><code>Printer</code></pre> that sends its output to a <pre><code>PrintWriter</code></pre>.<pre><code>public class PrintWriterPrinter</code></pre></section>	https://developer.android.com/reference/android/util/PrintWriterPrinter.html
Property	A										<section class="prog__container">A property is an abstraction that can be used to represent a <emb>mutable</emb><pre><code>public abstract class Property</code></pre></section>	https://developer.android.com/reference/android/util/Property.html
Range	A										<section class="prog__container">Immutable class for describing the range of two numeric values.<pre><code>public final class Range</code></pre></section>	https://developer.android.com/reference/android/util/Range.html
Rational	A										<section class="prog__container"><pre><code>public final class Rational</code></pre></section>	https://developer.android.com/reference/android/util/Rational.html
Size	A										<section class="prog__container">Immutable class for describing width and height dimensions in pixels.<pre><code>public final class Size</code></pre></section>	https://developer.android.com/reference/android/util/Size.html
SizeF	A										<section class="prog__container">Immutable class for describing width and height dimensions in some arbitrary unit.<pre><code>public final class SizeF</code></pre></section>	https://developer.android.com/reference/android/util/SizeF.html
SparseArray	A										<section class="prog__container">SparseArrays map integers to Objects. Unlike a normal array of Objects, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Integers to Objects, both because it avoids auto-boxing keys and its data structure doesn't rely on an extra entry object for each mapping.<pre><code>public class SparseArray</code></pre></section>	https://developer.android.com/reference/android/util/SparseArray.html
SparseBooleanArray	A										<section class="prog__container">SparseBooleanArrays map integers to booleans. Unlike a normal array of booleans there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Integers to Booleans, both because it avoids auto-boxing keys and values and its data structure doesn't rely on an extra entry object for each mapping.<pre><code>public class SparseBooleanArray</code></pre></section>	https://developer.android.com/reference/android/util/SparseBooleanArray.html
SparseIntArray	A										<section class="prog__container">SparseIntArrays map integers to integers. Unlike a normal array of integers, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Integers to Integers, both because it avoids auto-boxing keys and values and its data structure doesn't rely on an extra entry object for each mapping.<pre><code>public class SparseIntArray</code></pre></section>	https://developer.android.com/reference/android/util/SparseIntArray.html
SparseLongArray	A										<section class="prog__container">SparseLongArrays map integers to longs. Unlike a normal array of longs, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Integers to Longs, both because it avoids auto-boxing keys and values and its data structure doesn't rely on an extra entry object for each mapping.<pre><code>public class SparseLongArray</code></pre></section>	https://developer.android.com/reference/android/util/SparseLongArray.html
StateSet	A										<section class="prog__container">State sets are arrays of positive ints where each element represents the state of a <pre><code>View</code></pre> (e.g. focused, selected, visible, etc.). A <pre><code>View</code></pre> may be in one or more of those states. A state spec is an array of signed ints where each element represents a required (if positive) or an undesired (if negative) <pre><code>View</code></pre> state. Utils dealing with state sets. In theory we could encapsulate the state set and state spec arrays and not have static methods here but there is some concern about performance since these methods are called during view drawing.<pre><code>public class StateSet</code></pre></section>	https://developer.android.com/reference/android/util/StateSet.html
StringBuilderPrinter	A										<section class="prog__container">Implementation of a <pre><code>Printer</code></pre> that sends its output to a <pre><code>StringBuilder</code></pre>.<pre><code>public class StringBuilderPrinter</code></pre></section>	https://developer.android.com/reference/android/util/StringBuilderPrinter.html
TimeFormatException	A										<section class="prog__container"><pre><code>public class TimeFormatException</code></pre></section>	https://developer.android.com/reference/android/util/TimeFormatException.html
TimeUtils	A										<section class="prog__container">A class containing utility methods related to time zones.<pre><code>public class TimeUtils</code></pre></section>	https://developer.android.com/reference/android/util/TimeUtils.html
TimingLogger	A										<section class="prog__container">A utility class to help log timings splits throughout a method call. Typical usage is: <pre> TimingLogger timings = new TimingLogger(TAG, "methodA"); // ... do some work A ... timings.addSplit("work A"); // ... do some work B ... timings.addSplit("work B"); // ... do some work C ... timings.addSplit("work C"); timings.dumpToLog(); </pre><pre><code>public class TimingLogger</code></pre></section>	https://developer.android.com/reference/android/util/TimingLogger.html
TypedValue	A										<section class="prog__container">Container for a dynamically typed data value. Primarily used with <pre><code>Resources</code></pre> for holding resource values.<pre><code>public class TypedValue</code></pre></section>	https://developer.android.com/reference/android/util/TypedValue.html
Xml.Encoding	A										<section class="prog__container">Supported character encodings.<pre><code>public static final enum Xml.Encoding</code></pre></section>	https://developer.android.com/reference/android/util/Xml.Encoding.html
Xml	A										<section class="prog__container">XML utility methods.<pre><code>public class Xml</code></pre></section>	https://developer.android.com/reference/android/util/Xml.html
AbsSavedState	A										<section class="prog__container">A <pre><code>Parcelable</code></pre> implementation that should be used by inheritance hierarchies to ensure the state of all classes along the chain is saved.<pre><code>public abstract class AbsSavedState</code></pre></section>	https://developer.android.com/reference/android/view/AbsSavedState.html
ActionMode.Callback	A										<section class="prog__container">Callback interface for action modes. Supplied to <pre><code>startActionMode(Callback)</code></pre>, a Callback configures and handles events raised by a user's interaction with an action mode.<pre><code>public static interface ActionMode.Callback</code></pre></section>	https://developer.android.com/reference/android/view/ActionMode.Callback.html
ActionMode.Callback2	A										<section class="prog__container">Extension of <pre><code>ActionMode.Callback</code></pre> to provide content rect information. This is required for ActionModes with dynamic positioning such as the ones with type <pre><code>TYPE_FLOATING</code></pre> to ensure the positioning doesn't obscure app content. If an app fails to provide a subclass of this class, a default implementation will be used.<pre><code>public static abstract class ActionMode.Callback2</code></pre></section>	https://developer.android.com/reference/android/view/ActionMode.Callback2.html
ActionMode	A										<section class="prog__container">Represents a contextual mode of the user interface. Action modes can be used to provide alternative interaction modes and replace parts of the normal UI until finished. Examples of good action modes include text selection and contextual actions. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public abstract class ActionMode</code></pre></section>	https://developer.android.com/reference/android/view/ActionMode.html
ActionProvider	A										<section class="prog__container">An ActionProvider defines rich menu interaction in a single component. ActionProvider can generate action views for use in the action bar, dynamically populate submenus of a MenuItem, and handle default menu item invocations.<pre><code>public abstract class ActionProvider</code></pre></section>	https://developer.android.com/reference/android/view/ActionProvider.html
ActionProvider.VisibilityListener	A										<section class="prog__container">Listens to changes in visibility as reported by <pre><code>refreshVisibility()</code></pre>.<pre><code>public static interface ActionProvider.VisibilityListener</code></pre></section>	https://developer.android.com/reference/android/view/ActionProvider.VisibilityListener.html
Choreographer.FrameCallback	A										<section class="prog__container">Implement this interface to receive a callback when a new display frame is being rendered. The callback is invoked on the <pre><code>Looper</code></pre> thread to which the <pre><code>Choreographer</code></pre> is attached.<pre><code>public static interface Choreographer.FrameCallback</code></pre></section>	https://developer.android.com/reference/android/view/Choreographer.FrameCallback.html
Choreographer	A										<section class="prog__container">Coordinates the timing of animations, input and drawing.<pre><code>public final class Choreographer</code></pre></section>	https://developer.android.com/reference/android/view/Choreographer.html
CollapsibleActionView	A										<section class="prog__container">When a <pre><code>View</code></pre> implements this interface it will receive callbacks when expanded or collapsed as an action view alongside the optional, app-specified callbacks to <pre><code>MenuItem.OnActionExpandListener</code></pre>.<pre><code>public interface CollapsibleActionView</code></pre></section>	https://developer.android.com/reference/android/view/CollapsibleActionView.html
ContextMenu.ContextMenuInfo	A										<section class="prog__container">Additional information regarding the creation of the context menu. For example, <pre><code>AdapterView</code></pre>s use this to pass the exact item position within the adapter that initiated the context menu.<pre><code>public static interface ContextMenu.ContextMenuInfo</code></pre></section>	https://developer.android.com/reference/android/view/ContextMenu.ContextMenuInfo.html
ContextMenu	A										<section class="prog__container">Extension of <pre><code>Menu</code></pre> for context menus providing functionality to modify the header of the context menu.<pre><code>public interface ContextMenu</code></pre></section>	https://developer.android.com/reference/android/view/ContextMenu.html
ContextThemeWrapper	A										<section class="prog__container">A context wrapper that allows you to modify or replace the theme of the wrapped context.<pre><code>public class ContextThemeWrapper</code></pre></section>	https://developer.android.com/reference/android/view/ContextThemeWrapper.html
Display.HdrCapabilities	A										<section class="prog__container">Encapsulates the HDR capabilities of a given display. For example, what HDR types it supports and details about the desired luminance data.<pre><code>public static final class Display.HdrCapabilities</code></pre></section>	https://developer.android.com/reference/android/view/Display.HdrCapabilities.html
Display	A										<section class="prog__container">Provides information about the size and density of a logical display.<pre><code>public final class Display</code></pre></section>	https://developer.android.com/reference/android/view/Display.html
Display.Mode	A										<section class="prog__container">A mode supported by a given display.<pre><code>public static final class Display.Mode</code></pre></section>	https://developer.android.com/reference/android/view/Display.Mode.html
DragAndDropPermissions	A										<section class="prog__container"><pre><code>DragAndDropPermissions</code></pre> controls the access permissions for the content URIs associated with a <pre><code>DragEvent</code></pre>.<pre><code>public final class DragAndDropPermissions</code></pre></section>	https://developer.android.com/reference/android/view/DragAndDropPermissions.html
DragEvent	A										<section class="prog__container">Represents an event that is sent out by the system at various times during a drag and drop operation. It is a complex data structure that contains several important pieces of data about the operation and the underlying data.<pre><code>public class DragEvent</code></pre></section>	https://developer.android.com/reference/android/view/DragEvent.html
FocusFinder	A										<section class="prog__container">The algorithm used for finding the next focusable view in a given direction from a view that currently has focus.<pre><code>public class FocusFinder</code></pre></section>	https://developer.android.com/reference/android/view/FocusFinder.html
FrameMetrics	A										<section class="prog__container">Class containing timing data for various milestones in a frame lifecycle reported by the rendering subsystem.<pre><code>public final class FrameMetrics</code></pre></section>	https://developer.android.com/reference/android/view/FrameMetrics.html
FrameStats	A										<section class="prog__container">This is the base class for frame statistics.<pre><code>public abstract class FrameStats</code></pre></section>	https://developer.android.com/reference/android/view/FrameStats.html
GestureDetector	A										<section class="prog__container">Detects various gestures and events using the supplied <pre><code>MotionEvent</code></pre>s. The <pre><code>GestureDetector.OnGestureListener</code></pre> callback will notify users when a particular motion event has occurred. This class should only be used with <pre><code>MotionEvent</code></pre>s reported via touch (don't use for trackball events). To use this class: <ul> <li>Create an instance of the <pre><code>GestureDetector</code></pre> for your <pre><code>View</code></pre> <li>In the <pre><code>onTouchEvent(MotionEvent)</code></pre> method ensure you call <pre><code>onTouchEvent(MotionEvent)</code></pre>. The methods defined in your callback will be executed when the events occur. <li>If listening for <pre><code>onContextClick(MotionEvent)</code></pre> you must call <pre><code>onGenericMotionEvent(MotionEvent)</code></pre> in <pre><code>onGenericMotionEvent(MotionEvent)</code></pre>. </li></li></li></ul><pre><code>public class GestureDetector</code></pre></section>	https://developer.android.com/reference/android/view/GestureDetector.html
GestureDetector.OnContextClickListener	A										<section class="prog__container">The listener that is used to notify when a context click occurs. When listening for a context click ensure that you call <pre><code>onGenericMotionEvent(MotionEvent)</code></pre> in <pre><code>onGenericMotionEvent(MotionEvent)</code></pre>.<pre><code>public static interface GestureDetector.OnContextClickListener</code></pre></section>	https://developer.android.com/reference/android/view/GestureDetector.OnContextClickListener.html
GestureDetector.OnDoubleTapListener	A										<section class="prog__container">The listener that is used to notify when a double-tap or a confirmed single-tap occur.<pre><code>public static interface GestureDetector.OnDoubleTapListener</code></pre></section>	https://developer.android.com/reference/android/view/GestureDetector.OnDoubleTapListener.html
GestureDetector.OnGestureListener	A										<section class="prog__container">The listener that is used to notify when gestures occur. If you want to listen for all the different gestures then implement this interface. If you only want to listen for a subset it might be easier to extend <pre><code>GestureDetector.SimpleOnGestureListener</code></pre>.<pre><code>public static interface GestureDetector.OnGestureListener</code></pre></section>	https://developer.android.com/reference/android/view/GestureDetector.OnGestureListener.html
GestureDetector.SimpleOnGestureListener	A										<section class="prog__container">A convenience class to extend when you only want to listen for a subset of all the gestures. This implements all methods in the <pre><code>GestureDetector.OnGestureListener</code></pre>, <pre><code>GestureDetector.OnDoubleTapListener</code></pre>, and <pre><code>GestureDetector.OnContextClickListener</code></pre> but does nothing and return <pre><code>false</code></pre> for all applicable methods.<pre><code>public static class GestureDetector.SimpleOnGestureListener</code></pre></section>	https://developer.android.com/reference/android/view/GestureDetector.SimpleOnGestureListener.html
Gravity	A										<section class="prog__container">Standard constants and tools for placing an object within a potentially larger container.<pre><code>public class Gravity</code></pre></section>	https://developer.android.com/reference/android/view/Gravity.html
HapticFeedbackConstants	A										<section class="prog__container">Constants to be used to perform haptic feedback effects via <pre><code>performHapticFeedback(int)</code></pre><pre><code>public class HapticFeedbackConstants</code></pre></section>	https://developer.android.com/reference/android/view/HapticFeedbackConstants.html
InflateException	A										<section class="prog__container">This exception is thrown by an inflater on error conditions.<pre><code>public class InflateException</code></pre></section>	https://developer.android.com/reference/android/view/InflateException.html
InputDevice	A										<section class="prog__container">Describes the capabilities of a particular input device.<pre><code>public final class InputDevice</code></pre></section>	https://developer.android.com/reference/android/view/InputDevice.html
InputDevice.MotionRange	A										<section class="prog__container">Provides information about the range of values for a particular <pre><code>MotionEvent</code></pre> axis.<pre><code>public static final class InputDevice.MotionRange</code></pre></section>	https://developer.android.com/reference/android/view/InputDevice.MotionRange.html
InputEvent	A										<section class="prog__container">Common base class for input events.<pre><code>public abstract class InputEvent</code></pre></section>	https://developer.android.com/reference/android/view/InputEvent.html
InputQueue.Callback	A										<section class="prog__container">Interface to receive notification of when an InputQueue is associated and dissociated with a thread.<pre><code>public static interface InputQueue.Callback</code></pre></section>	https://developer.android.com/reference/android/view/InputQueue.Callback.html
InputQueue	A										<section class="prog__container">An input queue provides a mechanism for an application to receive incoming input events. Currently only usable from native code.<pre><code>public final class InputQueue</code></pre></section>	https://developer.android.com/reference/android/view/InputQueue.html
KeyboardShortcutGroup	A										<section class="prog__container">A group of <pre><code>KeyboardShortcutInfo</code></pre>.<pre><code>public final class KeyboardShortcutGroup</code></pre></section>	https://developer.android.com/reference/android/view/KeyboardShortcutGroup.html
KeyboardShortcutInfo	A										<section class="prog__container">Information about a Keyboard Shortcut.<pre><code>public final class KeyboardShortcutInfo</code></pre></section>	https://developer.android.com/reference/android/view/KeyboardShortcutInfo.html
KeyCharacterMap	A										<section class="prog__container">Describes the keys provided by a keyboard device and their associated labels.<pre><code>public class KeyCharacterMap</code></pre></section>	https://developer.android.com/reference/android/view/KeyCharacterMap.html
KeyCharacterMap.KeyData	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 11.</strong><br/> instead use <pre><code>getDisplayLabel(int)</code></pre>, <pre><code>getNumber(int)</code></pre> and <pre><code>get(int, int)</code></pre>.<pre><code>public static class KeyCharacterMap.KeyData</code></pre></section>	https://developer.android.com/reference/android/view/KeyCharacterMap.KeyData.html
KeyCharacterMap.UnavailableException	A										<section class="prog__container">Thrown by <pre><code>load(int)</code></pre> when a key character map could not be loaded.<pre><code>public static class KeyCharacterMap.UnavailableException</code></pre></section>	https://developer.android.com/reference/android/view/KeyCharacterMap.UnavailableException.html
KeyEvent.Callback	A										<section class="prog__container"><pre><code>public static interface KeyEvent.Callback</code></pre></section>	https://developer.android.com/reference/android/view/KeyEvent.Callback.html
KeyEvent.DispatcherState	A										<section class="prog__container">Use with <pre><code>dispatch(Callback, DispatcherState, Object)</code></pre> for more advanced key dispatching, such as long presses.<pre><code>public static class KeyEvent.DispatcherState</code></pre></section>	https://developer.android.com/reference/android/view/KeyEvent.DispatcherState.html
KeyEvent	A										<section class="prog__container">Object used to report key and button events.<pre><code>public class KeyEvent</code></pre></section>	https://developer.android.com/reference/android/view/KeyEvent.html
LayoutInflater.Factory	A										<section class="prog__container"><pre><code>public static interface LayoutInflater.Factory</code></pre></section>	https://developer.android.com/reference/android/view/LayoutInflater.Factory.html
LayoutInflater.Factory2	A										<section class="prog__container"><pre><code>public static interface LayoutInflater.Factory2</code></pre></section>	https://developer.android.com/reference/android/view/LayoutInflater.Factory2.html
LayoutInflater.Filter	A										<section class="prog__container">Hook to allow clients of the LayoutInflater to restrict the set of Views that are allowed to be inflated.<pre><code>public static interface LayoutInflater.Filter</code></pre></section>	https://developer.android.com/reference/android/view/LayoutInflater.Filter.html
LayoutInflater	A										<section class="prog__container">Instantiates a layout XML file into its corresponding <pre><code>View</code></pre> objects. It is never used directly. Instead, use <pre><code>getLayoutInflater()</code></pre> or <pre><code>getSystemService(Class<t>)</t></code></pre> to retrieve a standard LayoutInflater instance that is already hooked up to the current context and correctly configured for the device you are running on. For example: <pre>LayoutInflater inflater = (LayoutInflater)context.getSystemService (Context.LAYOUT_INFLATER_SERVICE);</pre><pre><code>public abstract class LayoutInflater</code></pre></section>	https://developer.android.com/reference/android/view/LayoutInflater.html
Menu	A										<section class="prog__container">Interface for managing the items in a menu.<pre><code>public interface Menu</code></pre></section>	https://developer.android.com/reference/android/view/Menu.html
MenuInflater	A										<section class="prog__container">This class is used to instantiate menu XML files into Menu objects.<pre><code>public class MenuInflater</code></pre></section>	https://developer.android.com/reference/android/view/MenuInflater.html
MenuItem	A										<section class="prog__container">Interface for direct access to a previously created menu item.<pre><code>public interface MenuItem</code></pre></section>	https://developer.android.com/reference/android/view/MenuItem.html
MenuItem.OnActionExpandListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a menu item marked with <pre><code>SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW</code></pre> is expanded or collapsed.<pre><code>public static interface MenuItem.OnActionExpandListener</code></pre></section>	https://developer.android.com/reference/android/view/MenuItem.OnActionExpandListener.html
MenuItem.OnMenuItemClickListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a menu item is clicked.<pre><code>public static interface MenuItem.OnMenuItemClickListener</code></pre></section>	https://developer.android.com/reference/android/view/MenuItem.OnMenuItemClickListener.html
MotionEvent	A										<section class="prog__container">Object used to report movement (mouse, pen, finger, trackball) events. Motion events may hold either absolute or relative movements and other data, depending on the type of device. <h3>Overview</h3><pre><code>public final class MotionEvent</code></pre></section>	https://developer.android.com/reference/android/view/MotionEvent.html
MotionEvent.PointerCoords	A										<section class="prog__container">Transfer object for pointer coordinates. Objects of this type can be used to specify the pointer coordinates when creating new <pre><code>MotionEvent</code></pre> objects and to query pointer coordinates in bulk. Refer to <pre><code>InputDevice</code></pre> for information about how different kinds of input devices and sources represent pointer coordinates.<pre><code>public static final class MotionEvent.PointerCoords</code></pre></section>	https://developer.android.com/reference/android/view/MotionEvent.PointerCoords.html
MotionEvent.PointerProperties	A										<section class="prog__container">Transfer object for pointer properties. Objects of this type can be used to specify the pointer id and tool type when creating new <pre><code>MotionEvent</code></pre> objects and to query pointer properties in bulk.<pre><code>public static final class MotionEvent.PointerProperties</code></pre></section>	https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html
OrientationEventListener	A										<section class="prog__container">Helper class for receiving notifications from the SensorManager when the orientation of the device has changed.<pre><code>public abstract class OrientationEventListener</code></pre></section>	https://developer.android.com/reference/android/view/OrientationEventListener.html
OrientationListener	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 3.</strong><br/> use <pre><code>OrientationEventListener</code></pre> instead. This class internally uses the OrientationEventListener.<pre><code>public abstract class OrientationListener</code></pre></section>	https://developer.android.com/reference/android/view/OrientationListener.html
PixelCopy	A										<section class="prog__container">Provides a mechanisms to issue pixel copy requests to allow for copy operations from <pre><code>Surface</code></pre> to <pre><code>Bitmap</code></pre><pre><code>public final class PixelCopy</code></pre></section>	https://developer.android.com/reference/android/view/PixelCopy.html
PixelCopy.OnPixelCopyFinishedListener	A										<section class="prog__container">Listener for observing the completion of a PixelCopy request.<pre><code>public static interface PixelCopy.OnPixelCopyFinishedListener</code></pre></section>	https://developer.android.com/reference/android/view/PixelCopy.OnPixelCopyFinishedListener.html
PointerIcon	A										<section class="prog__container">Represents an icon that can be used as a mouse pointer.<pre><code>public final class PointerIcon</code></pre></section>	https://developer.android.com/reference/android/view/PointerIcon.html
ScaleGestureDetector	A										<section class="prog__container">Detects scaling transformation gestures using the supplied <pre><code>MotionEvent</code></pre>s. The <pre><code>ScaleGestureDetector.OnScaleGestureListener</code></pre> callback will notify users when a particular gesture event has occurred. This class should only be used with <pre><code>MotionEvent</code></pre>s reported via touch. To use this class: <ul> <li>Create an instance of the <pre><code>ScaleGestureDetector</code></pre> for your <pre><code>View</code></pre> <li>In the <pre><code>onTouchEvent(MotionEvent)</code></pre> method ensure you call <pre><code>onTouchEvent(MotionEvent)</code></pre>. The methods defined in your callback will be executed when the events occur. </li></li></ul><pre><code>public class ScaleGestureDetector</code></pre></section>	https://developer.android.com/reference/android/view/ScaleGestureDetector.html
ScaleGestureDetector.OnScaleGestureListener	A										<section class="prog__container">The listener for receiving notifications when gestures occur. If you want to listen for all the different gestures then implement this interface. If you only want to listen for a subset it might be easier to extend <pre><code>ScaleGestureDetector.SimpleOnScaleGestureListener</code></pre>. An application will receive events in the following order: <ul> <li>One <pre><code>onScaleBegin(ScaleGestureDetector)</code></pre> <li>Zero or more <pre><code>onScale(ScaleGestureDetector)</code></pre> <li>One <pre><code>onScaleEnd(ScaleGestureDetector)</code></pre> </li></li></li></ul><pre><code>public static interface ScaleGestureDetector.OnScaleGestureListener</code></pre></section>	https://developer.android.com/reference/android/view/ScaleGestureDetector.OnScaleGestureListener.html
ScaleGestureDetector.SimpleOnScaleGestureListener	A										<section class="prog__container">A convenience class to extend when you only want to listen for a subset of scaling-related events. This implements all methods in <pre><code>ScaleGestureDetector.OnScaleGestureListener</code></pre> but does nothing. <pre><code>onScale(ScaleGestureDetector)</code></pre> returns <pre><code>false</code></pre> so that a subclass can retrieve the accumulated scale factor in an overridden onScaleEnd. <pre><code>onScaleBegin(ScaleGestureDetector)</code></pre> returns <pre><code>true</code></pre>.<pre><code>public static class ScaleGestureDetector.SimpleOnScaleGestureListener</code></pre></section>	https://developer.android.com/reference/android/view/ScaleGestureDetector.SimpleOnScaleGestureListener.html
SearchEvent	A										<section class="prog__container">Class that contains information about an event that triggers a search.<pre><code>public class SearchEvent</code></pre></section>	https://developer.android.com/reference/android/view/SearchEvent.html
SoundEffectConstants	A										<section class="prog__container">Constants to be used to play sound effects via <pre><code>playSoundEffect(int)</code></pre><pre><code>public class SoundEffectConstants</code></pre></section>	https://developer.android.com/reference/android/view/SoundEffectConstants.html
SubMenu	A										<section class="prog__container">Subclass of <pre><code>Menu</code></pre> for sub menus.<pre><code>public interface SubMenu</code></pre></section>	https://developer.android.com/reference/android/view/SubMenu.html
Surface	A										<section class="prog__container">Handle onto a raw buffer that is being managed by the screen compositor.<pre><code>public class Surface</code></pre></section>	https://developer.android.com/reference/android/view/Surface.html
Surface.OutOfResourcesException	A										<section class="prog__container">Exception thrown when a Canvas couldn't be locked with <pre><code>lockCanvas(Rect)</code></pre>, or when a SurfaceTexture could not successfully be allocated.<pre><code>public static class Surface.OutOfResourcesException</code></pre></section>	https://developer.android.com/reference/android/view/Surface.OutOfResourcesException.html
SurfaceHolder.BadSurfaceTypeException	A										<section class="prog__container">Exception that is thrown from <pre><code>lockCanvas()</code></pre> when called on a Surface whose type is SURFACE_TYPE_PUSH_BUFFERS.<pre><code>public static class SurfaceHolder.BadSurfaceTypeException</code></pre></section>	https://developer.android.com/reference/android/view/SurfaceHolder.BadSurfaceTypeException.html
SurfaceHolder.Callback	A										<section class="prog__container">A client may implement this interface to receive information about changes to the surface. When used with a <pre><code>SurfaceView</code></pre>, the Surface being held is only available between calls to <pre><code>surfaceCreated(SurfaceHolder)</code></pre> and <pre><code>surfaceDestroyed(SurfaceHolder)</code></pre>. The Callback is set with <pre><code>SurfaceHolder.addCallback</code></pre> method.<pre><code>public static interface SurfaceHolder.Callback</code></pre></section>	https://developer.android.com/reference/android/view/SurfaceHolder.Callback.html
SurfaceHolder.Callback2	A										<section class="prog__container">Additional callbacks that can be received for <pre><code>SurfaceHolder.Callback</code></pre>.<pre><code>public static interface SurfaceHolder.Callback2</code></pre></section>	https://developer.android.com/reference/android/view/SurfaceHolder.Callback2.html
SurfaceHolder	A										<section class="prog__container">Abstract interface to someone holding a display surface. Allows you to control the surface size and format, edit the pixels in the surface, and monitor changes to the surface. This interface is typically available through the <pre><code>SurfaceView</code></pre> class.<pre><code>public interface SurfaceHolder</code></pre></section>	https://developer.android.com/reference/android/view/SurfaceHolder.html
SurfaceView	A										<section class="prog__container">Provides a dedicated drawing surface embedded inside of a view hierarchy. You can control the format of this surface and, if you like, its size; the SurfaceView takes care of placing the surface at the correct location on the screen<pre><code>public class SurfaceView</code></pre></section>	https://developer.android.com/reference/android/view/SurfaceView.html
TextureView	A										<section class="prog__container"><pre><code>public class TextureView</code></pre></section>	https://developer.android.com/reference/android/view/TextureView.html
TextureView.SurfaceTextureListener	A										<section class="prog__container">This listener can be used to be notified when the surface texture associated with this texture view is available.<pre><code>public static interface TextureView.SurfaceTextureListener</code></pre></section>	https://developer.android.com/reference/android/view/TextureView.SurfaceTextureListener.html
TouchDelegate	A										<section class="prog__container">Helper class to handle situations where you want a view to have a larger touch area than its actual view bounds. The view whose touch area is changed is called the delegate view. This class should be used by an ancestor of the delegate. To use a TouchDelegate, first create an instance that specifies the bounds that should be mapped to the delegate and the delegate view itself.<pre><code>public class TouchDelegate</code></pre></section>	https://developer.android.com/reference/android/view/TouchDelegate.html
VelocityTracker	A										<section class="prog__container">Helper for tracking the velocity of touch events, for implementing flinging and other such gestures. Use <pre><code>obtain()</code></pre> to retrieve a new instance of the class when you are going to begin tracking. Put the motion events you receive into it with <pre><code>addMovement(MotionEvent)</code></pre>. When you want to determine the velocity call <pre><code>computeCurrentVelocity(int)</code></pre> and then call <pre><code>getXVelocity(int)</code></pre> and <pre><code>getYVelocity(int)</code></pre> to retrieve the velocity for each pointer id.<pre><code>public final class VelocityTracker</code></pre></section>	https://developer.android.com/reference/android/view/VelocityTracker.html
View.AccessibilityDelegate	A										<section class="prog__container"><pre><code>public static class View.AccessibilityDelegate</code></pre></section>	https://developer.android.com/reference/android/view/View.AccessibilityDelegate.html
View.BaseSavedState	A										<section class="prog__container">Base class for derived classes that want to save and restore their own state in <pre><code>onSaveInstanceState()</code></pre>.<pre><code>public static class View.BaseSavedState</code></pre></section>	https://developer.android.com/reference/android/view/View.BaseSavedState.html
View.DragShadowBuilder	A										<section class="prog__container">Creates an image that the system displays during the drag and drop operation. This is called a "drag shadow". The default implementation for a DragShadowBuilder based on a View returns an image that has exactly the same appearance as the given View. The default also positions the center of the drag shadow directly under the touch point. If no View is provided (the constructor with no parameters is used), and <pre><code>onProvideShadowMetrics()</code></pre> and <pre><code>onDrawShadow()</code></pre> are not overridden, then the default is an invisible drag shadow.<pre><code>public static class View.DragShadowBuilder</code></pre></section>	https://developer.android.com/reference/android/view/View.DragShadowBuilder.html
View	A										<section class="prog__container"><pre><code>public class View</code></pre></section>	https://developer.android.com/reference/android/view/View.html
View.MeasureSpec	A										<section class="prog__container">A MeasureSpec encapsulates the layout requirements passed from parent to child. Each MeasureSpec represents a requirement for either the width or the height. A MeasureSpec is comprised of a size and a mode. There are three possible modes: <dl> <dt>UNSPECIFIED</dt> <dd> The parent has not imposed any constraint on the child. It can be whatever size it wants. </dd> <dt>EXACTLY</dt> <dd> The parent has determined an exact size for the child. The child is going to be given those bounds regardless of how big it wants to be. </dd> <dt>AT_MOST</dt> <dd> The child can be as large as it wants up to the specified size. </dd> </dl> MeasureSpecs are implemented as ints to reduce object allocation. This class is provided to pack and unpack the &lt;size, mode&gt; tuple into the int.<pre><code>public static class View.MeasureSpec</code></pre></section>	https://developer.android.com/reference/android/view/View.MeasureSpec.html
View.OnApplyWindowInsetsListener	A										<section class="prog__container">Listener for applying window insets on a view in a custom way.<pre><code>public static interface View.OnApplyWindowInsetsListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnApplyWindowInsetsListener.html
View.OnAttachStateChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when this view is attached or detached from its window.<pre><code>public static interface View.OnAttachStateChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnAttachStateChangeListener.html
View.OnClickListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a view is clicked.<pre><code>public static interface View.OnClickListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnClickListener.html
View.OnContextClickListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a view is context clicked.<pre><code>public static interface View.OnContextClickListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnContextClickListener.html
View.OnCreateContextMenuListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the context menu for this view is being built.<pre><code>public static interface View.OnCreateContextMenuListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnCreateContextMenuListener.html
View.OnDragListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a drag is being dispatched to this view. The callback will be invoked before the hosting view's own onDrag(event) method. If the listener wants to fall back to the hosting view's onDrag(event) behavior, it should return 'false' from this callback. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public static interface View.OnDragListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnDragListener.html
View.OnFocusChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the focus state of a view changed.<pre><code>public static interface View.OnFocusChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnFocusChangeListener.html
View.OnGenericMotionListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a generic motion event is dispatched to this view. The callback will be invoked before the generic motion event is given to the view.<pre><code>public static interface View.OnGenericMotionListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnGenericMotionListener.html
View.OnHoverListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a hover event is dispatched to this view. The callback will be invoked before the hover event is given to the view.<pre><code>public static interface View.OnHoverListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnHoverListener.html
View.OnKeyListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a hardware key event is dispatched to this view. The callback will be invoked before the key event is given to the view. This is only useful for hardware keyboards; a software input method has no obligation to trigger this listener.<pre><code>public static interface View.OnKeyListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnKeyListener.html
View.OnLayoutChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the layout bounds of a view changes due to layout processing.<pre><code>public static interface View.OnLayoutChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnLayoutChangeListener.html
View.OnLongClickListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a view has been clicked and held.<pre><code>public static interface View.OnLongClickListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnLongClickListener.html
View.OnScrollChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the scroll X or Y positions of a view change.<pre><code>public static interface View.OnScrollChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnScrollChangeListener.html
View.OnSystemUiVisibilityChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the status bar changes visibility. This reports <strong>global</strong> changes to the system UI state, not what the application is requesting.<pre><code>public static interface View.OnSystemUiVisibilityChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnSystemUiVisibilityChangeListener.html
View.OnTouchListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a touch event is dispatched to this view. The callback will be invoked before the touch event is given to the view.<pre><code>public static interface View.OnTouchListener</code></pre></section>	https://developer.android.com/reference/android/view/View.OnTouchListener.html
ViewAnimationUtils	A										<section class="prog__container">Defines common utilities for working with View's animations.<pre><code>public final class ViewAnimationUtils</code></pre></section>	https://developer.android.com/reference/android/view/ViewAnimationUtils.html
ViewConfiguration	A										<section class="prog__container">Contains methods to standard constants used in the UI for timeouts, sizes, and distances.<pre><code>public class ViewConfiguration</code></pre></section>	https://developer.android.com/reference/android/view/ViewConfiguration.html
ViewDebug.CapturedViewProperty	A										<section class="prog__container">This annotation can be used to mark fields and methods to be dumped when the view is captured. Methods with this annotation must have no arguments and must return a valid type of data.<pre><code>public static abstract @interface ViewDebug.CapturedViewProperty</code></pre></section>	https://developer.android.com/reference/android/view/ViewDebug.CapturedViewProperty.html
ViewDebug.ExportedProperty	A										<section class="prog__container">This annotation can be used to mark fields and methods to be dumped by the view server. Only non-void methods with no arguments can be annotated by this annotation.<pre><code>public static abstract @interface ViewDebug.ExportedProperty</code></pre></section>	https://developer.android.com/reference/android/view/ViewDebug.ExportedProperty.html
ViewDebug.FlagToString	A										<section class="prog__container">Defines a mapping from a flag to a String. Such a mapping can be used in an @ExportedProperty to provide more meaningful values to the end user.<pre><code>public static abstract @interface ViewDebug.FlagToString</code></pre></section>	https://developer.android.com/reference/android/view/ViewDebug.FlagToString.html
ViewDebug.HierarchyTraceType	A										<section class="prog__container"><p class="caution"><strong> This enum was deprecated in API level 16.</strong><br/> This enum is now unused<pre><code>public static final enum ViewDebug.HierarchyTraceType</code></pre></section>	https://developer.android.com/reference/android/view/ViewDebug.HierarchyTraceType.html
ViewDebug	A										<section class="prog__container">Various debugging/tracing tools related to <pre><code>View</code></pre> and the view hierarchy.<pre><code>public class ViewDebug</code></pre></section>	https://developer.android.com/reference/android/view/ViewDebug.html
ViewDebug.IntToString	A										<section class="prog__container">Defines a mapping from an int value to a String. Such a mapping can be used in an @ExportedProperty to provide more meaningful values to the end user.<pre><code>public static abstract @interface ViewDebug.IntToString</code></pre></section>	https://developer.android.com/reference/android/view/ViewDebug.IntToString.html
ViewDebug.RecyclerTraceType	A										<section class="prog__container"><p class="caution"><strong> This enum was deprecated in API level 16.</strong><br/> This enum is now unused<pre><code>public static final enum ViewDebug.RecyclerTraceType</code></pre></section>	https://developer.android.com/reference/android/view/ViewDebug.RecyclerTraceType.html
ViewGroup	A										<section class="prog__container"><pre><code>public abstract class ViewGroup</code></pre></section>	https://developer.android.com/reference/android/view/ViewGroup.html
ViewGroup.LayoutParams	A										<section class="prog__container">LayoutParams are used by views to tell their parents how they want to be laid out. See <pre><code>ViewGroup Layout Attributes</code></pre> for a list of all child view attributes that this class supports.<pre><code>public static class ViewGroup.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html
ViewGroup.MarginLayoutParams	A										<section class="prog__container">Per-child layout information for layouts that support margins. See <pre><code>ViewGroup Margin Layout Attributes</code></pre> for a list of all child view attributes that this class supports.<pre><code>public static class ViewGroup.MarginLayoutParams</code></pre></section>	https://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html
ViewGroup.OnHierarchyChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the hierarchy within this view changed. The hierarchy changes whenever a child is added to or removed from this view.<pre><code>public static interface ViewGroup.OnHierarchyChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/ViewGroup.OnHierarchyChangeListener.html
ViewGroupOverlay	A										<section class="prog__container">A group overlay is an extra layer that sits on top of a ViewGroup (the "host view") which is drawn after all other content in that view (including the view group's children). Interaction with the overlay layer is done by adding and removing views and drawables.<pre><code>public class ViewGroupOverlay</code></pre></section>	https://developer.android.com/reference/android/view/ViewGroupOverlay.html
ViewManager	A										<section class="prog__container">Interface to let you add and remove child views to an Activity. To get an instance of this class, call <pre><code>Context.getSystemService()</code></pre>.<pre><code>public interface ViewManager</code></pre></section>	https://developer.android.com/reference/android/view/ViewManager.html
ViewOutlineProvider	A										<section class="prog__container">Interface by which a View builds its <pre><code>Outline</code></pre>, used for shadow casting and clipping.<pre><code>public abstract class ViewOutlineProvider</code></pre></section>	https://developer.android.com/reference/android/view/ViewOutlineProvider.html
ViewOverlay	A										<section class="prog__container">An overlay is an extra layer that sits on top of a View (the "host view") which is drawn after all other content in that view (including children, if the view is a ViewGroup). Interaction with the overlay layer is done by adding and removing drawables.<pre><code>public class ViewOverlay</code></pre></section>	https://developer.android.com/reference/android/view/ViewOverlay.html
ViewParent	A										<section class="prog__container">Defines the responsibilities for a class that will be a parent of a View. This is the API that a view sees when it wants to interact with its parent.<pre><code>public interface ViewParent</code></pre></section>	https://developer.android.com/reference/android/view/ViewParent.html
ViewPropertyAnimator	A										<section class="prog__container">This class enables automatic and optimized animation of select properties on View objects. If only one or two properties on a View object are being animated, then using an <pre><code>ObjectAnimator</code></pre> is fine; the property setters called by ObjectAnimator are well equipped to do the right thing to set the property and invalidate the view appropriately. But if several properties are animated simultaneously, or if you just want a more convenient syntax to animate a specific property, then ViewPropertyAnimator might be more well-suited to the task.<pre><code>public class ViewPropertyAnimator</code></pre></section>	https://developer.android.com/reference/android/view/ViewPropertyAnimator.html
ViewStructure	A										<section class="prog__container">Container for storing additional per-view data generated by <pre><code>View.onProvideStructure</code></pre>.<pre><code>public abstract class ViewStructure</code></pre></section>	https://developer.android.com/reference/android/view/ViewStructure.html
ViewStub	A										<section class="prog__container">A ViewStub is an invisible, zero-sized View that can be used to lazily inflate layout resources at runtime. When a ViewStub is made visible, or when <pre><code>inflate()</code></pre> is invoked, the layout resource is inflated. The ViewStub then replaces itself in its parent with the inflated View or Views. Therefore, the ViewStub exists in the view hierarchy until <pre><code>setVisibility(int)</code></pre> or <pre><code>inflate()</code></pre> is invoked. The inflated View is added to the ViewStub's parent with the ViewStub's layout parameters. Similarly, you can define/override the inflate View's id by using the ViewStub's inflatedId property. For instance: <pre> &lt;ViewStub android:id="@+id/stub" android:inflatedId="@+id/subTree" android:layout="@layout/mySubTree" android:layout_width="120dip" android:layout_height="40dip" /&gt; </pre> The ViewStub thus defined can be found using the id "stub." After inflation of the layout resource "mySubTree," the ViewStub is removed from its parent. The View created by inflating the layout resource "mySubTree" can be found using the id "subTree," specified by the inflatedId property. The inflated View is finally assigned a width of 120dip and a height of 40dip. The preferred way to perform the inflation of the layout resource is the following: <pre> ViewStub stub = (ViewStub) findViewById(R.id.stub); View inflated = stub.inflate(); </pre> When <pre><code>inflate()</code></pre> is invoked, the ViewStub is replaced by the inflated View and the inflated View is returned. This lets applications get a reference to the inflated View without executing an extra findViewById().<pre><code>public final class ViewStub</code></pre></section>	https://developer.android.com/reference/android/view/ViewStub.html
ViewStub.OnInflateListener	A										<section class="prog__container">Listener used to receive a notification after a ViewStub has successfully inflated its layout resource.<pre><code>public static interface ViewStub.OnInflateListener</code></pre></section>	https://developer.android.com/reference/android/view/ViewStub.OnInflateListener.html
ViewTreeObserver	A										<section class="prog__container">A view tree observer is used to register listeners that can be notified of global changes in the view tree. Such global events include, but are not limited to, layout of the whole tree, beginning of the drawing pass, touch mode change.... A ViewTreeObserver should never be instantiated by applications as it is provided by the views hierarchy. Refer to <pre><code>getViewTreeObserver()</code></pre> for more information.<pre><code>public final class ViewTreeObserver</code></pre></section>	https://developer.android.com/reference/android/view/ViewTreeObserver.html
ViewTreeObserver.OnDrawListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the view tree is about to be drawn.<pre><code>public static interface ViewTreeObserver.OnDrawListener</code></pre></section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnDrawListener.html
ViewTreeObserver.OnGlobalFocusChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the focus state within the view tree changes.<pre><code>public static interface ViewTreeObserver.OnGlobalFocusChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnGlobalFocusChangeListener.html
ViewTreeObserver.OnGlobalLayoutListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the global layout state or the visibility of views within the view tree changes.<pre><code>public static interface ViewTreeObserver.OnGlobalLayoutListener</code></pre></section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnGlobalLayoutListener.html
ViewTreeObserver.OnPreDrawListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the view tree is about to be drawn.<pre><code>public static interface ViewTreeObserver.OnPreDrawListener</code></pre></section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnPreDrawListener.html
ViewTreeObserver.OnScrollChangedListener	A										<section class="prog__container">Interface definition for a callback to be invoked when something in the view tree has been scrolled.<pre><code>public static interface ViewTreeObserver.OnScrollChangedListener</code></pre></section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnScrollChangedListener.html
ViewTreeObserver.OnTouchModeChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the touch mode changes.<pre><code>public static interface ViewTreeObserver.OnTouchModeChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnTouchModeChangeListener.html
ViewTreeObserver.OnWindowAttachListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the view hierarchy is attached to and detached from its window.<pre><code>public static interface ViewTreeObserver.OnWindowAttachListener</code></pre></section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnWindowAttachListener.html
ViewTreeObserver.OnWindowFocusChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the view hierarchy's window focus state changes.<pre><code>public static interface ViewTreeObserver.OnWindowFocusChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnWindowFocusChangeListener.html
Window.Callback	A										<section class="prog__container">API from a Window back to its caller. This allows the client to intercept key dispatching, panels and menus, etc.<pre><code>public static interface Window.Callback</code></pre></section>	https://developer.android.com/reference/android/view/Window.Callback.html
Window	A										<section class="prog__container">Abstract base class for a top-level window look and behavior policy. An instance of this class should be used as the top-level view added to the window manager. It provides standard UI policies such as a background, title area, default key processing, etc.<pre><code>public abstract class Window</code></pre></section>	https://developer.android.com/reference/android/view/Window.html
Window.OnFrameMetricsAvailableListener	A										<section class="prog__container">Callback for clients that want frame timing information for each frame rendered by the Window.<pre><code>public static interface Window.OnFrameMetricsAvailableListener</code></pre></section>	https://developer.android.com/reference/android/view/Window.OnFrameMetricsAvailableListener.html
Window.OnRestrictedCaptionAreaChangedListener	A										<section class="prog__container">Callback for clients that want to be aware of where caption draws content.<pre><code>public static interface Window.OnRestrictedCaptionAreaChangedListener</code></pre></section>	https://developer.android.com/reference/android/view/Window.OnRestrictedCaptionAreaChangedListener.html
WindowAnimationFrameStats	A										<section class="prog__container">This class contains window animation frame statistics. For example, a window animation is usually performed when the application is transitioning from one activity to another. The frame statistics are a snapshot for the time interval from <pre><code>getStartTimeNano()</code></pre> to <pre><code>getEndTimeNano()</code></pre>.<pre><code>public final class WindowAnimationFrameStats</code></pre></section>	https://developer.android.com/reference/android/view/WindowAnimationFrameStats.html
WindowContentFrameStats	A										<section class="prog__container">This class contains window content frame statistics. For example, a window content is rendred in frames when a view is scrolled. The frame statistics are a snapshot for the time interval from <pre><code>getStartTimeNano()</code></pre> to <pre><code>getEndTimeNano()</code></pre>.<pre><code>public final class WindowContentFrameStats</code></pre></section>	https://developer.android.com/reference/android/view/WindowContentFrameStats.html
WindowId.FocusObserver	A										<section class="prog__container">Subclass for observing changes to the focus state of an <pre><code>WindowId</code></pre>. You should use the same instance of this class for observing multiple <pre><code>WindowId</code></pre> objects, since this class is fairly heavy-weight -- the base class includes all of the mechanisms for connecting to and receiving updates from the window.<pre><code>public static abstract class WindowId.FocusObserver</code></pre></section>	https://developer.android.com/reference/android/view/WindowId.FocusObserver.html
WindowId	A										<section class="prog__container">Safe identifier for a window. This currently allows you to retrieve and observe the input focus state of the window. Most applications will not use this, instead relying on the simpler (and more efficient) methods available on <pre><code>View</code></pre>. This classes is useful when window input interactions need to be done across processes: the class itself is a Parcelable that can be passed to other processes for them to interact with your window, and it provides a limited safe API that doesn't allow the other process to negatively harm your window.<pre><code>public class WindowId</code></pre></section>	https://developer.android.com/reference/android/view/WindowId.html
WindowInsets	A										<section class="prog__container">Describes a set of insets for window content.<pre><code>public final class WindowInsets</code></pre></section>	https://developer.android.com/reference/android/view/WindowInsets.html
WindowManager.BadTokenException	A										<section class="prog__container">Exception that is thrown when trying to add view whose <pre><code>WindowManager.LayoutParams</code></pre> <pre><code>token</code></pre> is invalid.<pre><code>public static class WindowManager.BadTokenException</code></pre></section>	https://developer.android.com/reference/android/view/WindowManager.BadTokenException.html
WindowManager	A										<section class="prog__container">The interface that apps use to talk to the window manager.<pre><code>public interface WindowManager</code></pre></section>	https://developer.android.com/reference/android/view/WindowManager.html
WindowManager.InvalidDisplayException	A										<section class="prog__container">Exception that is thrown when calling <pre><code>addView(View, ViewGroup.LayoutParams)</code></pre> to a secondary display that cannot be found. See <pre><code>Presentation</code></pre> for more information on secondary displays.<pre><code>public static class WindowManager.InvalidDisplayException</code></pre></section>	https://developer.android.com/reference/android/view/WindowManager.InvalidDisplayException.html
WindowManager.LayoutParams	A										<section class="prog__container"><pre><code>public static class WindowManager.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html
AccessibilityEvent	A										<section class="prog__container"><pre><code>public final class AccessibilityEvent</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
AccessibilityEventSource	A										<section class="prog__container">This interface is implemented by classes source of <pre><code>AccessibilityEvent</code></pre>s. <div class="special reference"> <h3>Developer Guides</h3><pre><code>public interface AccessibilityEventSource</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityEventSource.html
AccessibilityManager.AccessibilityStateChangeListener	A										<section class="prog__container">Listener for the system accessibility state. To listen for changes to the accessibility state on the device, implement this interface and register it with the system by calling <pre><code>addAccessibilityStateChangeListener(AccessibilityManager.AccessibilityStateChangeListener)</code></pre>.<pre><code>public static interface AccessibilityManager.AccessibilityStateChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityManager.AccessibilityStateChangeListener.html
AccessibilityManager	A										<section class="prog__container">System level service that serves as an event dispatch for <pre><code>AccessibilityEvent</code></pre>s, and provides facilities for querying the accessibility state of the system. Accessibility events are generated when something notable happens in the user interface, for example an <pre><code>Activity</code></pre> starts, the focus or selection of a <pre><code>View</code></pre> changes etc. Parties interested in handling accessibility events implement and register an accessibility service which extends <pre><code>AccessibilityService</code></pre>.<pre><code>public final class AccessibilityManager</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityManager.html
AccessibilityManager.TouchExplorationStateChangeListener	A										<section class="prog__container">Listener for the system touch exploration state. To listen for changes to the touch exploration state on the device, implement this interface and register it with the system by calling <pre><code>addTouchExplorationStateChangeListener(AccessibilityManager.TouchExplorationStateChangeListener)</code></pre>.<pre><code>public static interface AccessibilityManager.TouchExplorationStateChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityManager.TouchExplorationStateChangeListener.html
AccessibilityNodeInfo.AccessibilityAction	A										<section class="prog__container">A class defining an action that can be performed on an <pre><code>AccessibilityNodeInfo</code></pre>. Each action has a unique id that is mandatory and optional data.<pre><code>public static final class AccessibilityNodeInfo.AccessibilityAction</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.AccessibilityAction.html
AccessibilityNodeInfo.CollectionInfo	A										<section class="prog__container">Class with information if a node is a collection. Use <pre><code>obtain(int, int, boolean)</code></pre> to get an instance.<pre><code>public static final class AccessibilityNodeInfo.CollectionInfo</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.CollectionInfo.html
AccessibilityNodeInfo.CollectionItemInfo	A										<section class="prog__container">Class with information if a node is a collection item. Use <pre><code>obtain(int, int, int, int, boolean)</code></pre> to get an instance.<pre><code>public static final class AccessibilityNodeInfo.CollectionItemInfo</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.CollectionItemInfo.html
AccessibilityNodeInfo	A										<section class="prog__container">This class represents a node of the window content as well as actions that can be requested from its source. From the point of view of an <pre><code>AccessibilityService</code></pre> a window's content is presented as a tree of accessibility node infos, which may or may not map one-to-one to the view hierarchy. In other words, a custom view is free to report itself as a tree of accessibility node info.<pre><code>public class AccessibilityNodeInfo</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.html
AccessibilityNodeInfo.RangeInfo	A										<section class="prog__container">Class with information if a node is a range. Use <pre><code>obtain(int, float, float, float)</code></pre> to get an instance.<pre><code>public static final class AccessibilityNodeInfo.RangeInfo</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html
AccessibilityNodeProvider	A										<section class="prog__container">This class is the contract a client should implement to enable support of a virtual view hierarchy rooted at a given view for accessibility purposes. A virtual view hierarchy is a tree of imaginary Views that is reported as a part of the view hierarchy when an <pre><code>AccessibilityService</code></pre> explores the window content. Since the virtual View tree does not exist this class is responsible for managing the <pre><code>AccessibilityNodeInfo</code></pre>s describing that tree to accessibility services.<pre><code>public abstract class AccessibilityNodeProvider</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeProvider.html
AccessibilityRecord	A										<section class="prog__container">Represents a record in an <pre><code>AccessibilityEvent</code></pre> and contains information about state change of its source <pre><code>View</code></pre>. When a view fires an accessibility event it requests from its parent to dispatch the constructed event. The parent may optionally append a record for itself for providing more context to <pre><code>AccessibilityService</code></pre>s. Hence, accessibility services can facilitate additional accessibility records to enhance feedback.<pre><code>public class AccessibilityRecord</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityRecord.html
AccessibilityWindowInfo	A										<section class="prog__container">This class represents a state snapshot of a window for accessibility purposes. The screen content contains one or more windows where some windows can be descendants of other windows, which is the windows are hierarchically ordered. Note that there is no root window. Hence, the screen content can be seen as a collection of window trees.<pre><code>public final class AccessibilityWindowInfo</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityWindowInfo.html
CaptioningManager.CaptioningChangeListener	A										<section class="prog__container">Listener for changes in captioning properties, including enabled state and user style preferences.<pre><code>public static abstract class CaptioningManager.CaptioningChangeListener</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptioningChangeListener.html
CaptioningManager.CaptionStyle	A										<section class="prog__container">Specifies visual properties for video captions, including foreground and background colors, edge properties, and typeface.<pre><code>public static final class CaptioningManager.CaptionStyle</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html
CaptioningManager	A										<section class="prog__container">Contains methods for accessing and monitoring preferred video captioning state and visual properties.<pre><code>public class CaptioningManager</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/CaptioningManager.html
android.view.accessibility	A										<section class="prog__container"> The classes in this package are used to represent screen content and changes to it as well as APIs for querying the global accessibility state of the system. </section>	https://developer.android.com/reference/android/view/accessibility/package-summary.html
AccelerateDecelerateInterpolator	A										<section class="prog__container">An interpolator where the rate of change starts and ends slowly but accelerates through the middle.<pre><code>public class AccelerateDecelerateInterpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/AccelerateDecelerateInterpolator.html
AccelerateInterpolator	A										<section class="prog__container">An interpolator where the rate of change starts out slowly and and then accelerates.<pre><code>public class AccelerateInterpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/AccelerateInterpolator.html
AlphaAnimation	A										<section class="prog__container">An animation that controls the alpha level of an object. Useful for fading things in and out. This animation ends up changing the alpha property of a <pre><code>Transformation</code></pre><pre><code>public class AlphaAnimation</code></pre></section>	https://developer.android.com/reference/android/view/animation/AlphaAnimation.html
Animation.AnimationListener	A										<section class="prog__container"><pre><code>public static interface Animation.AnimationListener</code></pre></section>	https://developer.android.com/reference/android/view/animation/Animation.AnimationListener.html
Animation.Description	A										<section class="prog__container">Utility class to parse a string description of a size.<pre><code>protected static class Animation.Description</code></pre></section>	https://developer.android.com/reference/android/view/animation/Animation.Description.html
Animation	A										<section class="prog__container">Abstraction for an Animation that can be applied to Views, Surfaces, or other objects. See the <pre><code>animation package description file</code></pre>.<pre><code>public abstract class Animation</code></pre></section>	https://developer.android.com/reference/android/view/animation/Animation.html
AnimationSet	A										<section class="prog__container">Represents a group of Animations that should be played together. The transformation of each individual animation are composed together into a single transform. If AnimationSet sets any properties that its children also set (for example, duration or fillBefore), the values of AnimationSet override the child values.<pre><code>public class AnimationSet</code></pre></section>	https://developer.android.com/reference/android/view/animation/AnimationSet.html
AnimationUtils	A										<section class="prog__container">Defines common utilities for working with animations.<pre><code>public class AnimationUtils</code></pre></section>	https://developer.android.com/reference/android/view/animation/AnimationUtils.html
AnticipateInterpolator	A										<section class="prog__container">An interpolator where the change starts backward then flings forward.<pre><code>public class AnticipateInterpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/AnticipateInterpolator.html
AnticipateOvershootInterpolator	A										<section class="prog__container">An interpolator where the change starts backward then flings forward and overshoots the target value and finally goes back to the final value.<pre><code>public class AnticipateOvershootInterpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/AnticipateOvershootInterpolator.html
BaseInterpolator	A										<section class="prog__container">An abstract class which is extended by default interpolators.<pre><code>public abstract class BaseInterpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/BaseInterpolator.html
BounceInterpolator	A										<section class="prog__container">An interpolator where the change bounces at the end.<pre><code>public class BounceInterpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/BounceInterpolator.html
CycleInterpolator	A										<section class="prog__container">Repeats the animation for a specified number of cycles. The rate of change follows a sinusoidal pattern.<pre><code>public class CycleInterpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/CycleInterpolator.html
DecelerateInterpolator	A										<section class="prog__container">An interpolator where the rate of change starts out quickly and and then decelerates.<pre><code>public class DecelerateInterpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/DecelerateInterpolator.html
GridLayoutAnimationController.AnimationParameters	A										<section class="prog__container">The set of parameters that has to be attached to each view contained in the view group animated by the grid layout animation controller. These parameters are used to compute the start time of each individual view's animation.<pre><code>public static class GridLayoutAnimationController.AnimationParameters</code></pre></section>	https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.AnimationParameters.html
GridLayoutAnimationController	A										<section class="prog__container">A layout animation controller is used to animated a grid layout's children. While <pre><code>LayoutAnimationController</code></pre> relies only on the index of the child in the view group to compute the animation delay, this class uses both the X and Y coordinates of the child within a grid. In addition, the animation direction can be controlled. The default direction is <pre><code>DIRECTION_LEFT_TO_RIGHT | DIRECTION_TOP_TO_BOTTOM</code></pre>. You can also set the animation priority to columns or rows. The default priority is none. Information used to compute the animation delay of each child are stored in an instance of <pre><code>GridLayoutAnimationController.AnimationParameters</code></pre>, itself stored in the <pre><code>ViewGroup.LayoutParams</code></pre> of the view.<pre><code>public class GridLayoutAnimationController</code></pre></section>	https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html
Interpolator	A										<section class="prog__container">An interpolator defines the rate of change of an animation. This allows the basic animation effects (alpha, scale, translate, rotate) to be accelerated, decelerated, repeated, etc.<pre><code>public interface Interpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/Interpolator.html
LayoutAnimationController.AnimationParameters	A										<section class="prog__container">The set of parameters that has to be attached to each view contained in the view group animated by the layout animation controller. These parameters are used to compute the start time of each individual view's animation.<pre><code>public static class LayoutAnimationController.AnimationParameters</code></pre></section>	https://developer.android.com/reference/android/view/animation/LayoutAnimationController.AnimationParameters.html
LayoutAnimationController	A										<section class="prog__container">A layout animation controller is used to animated a layout's, or a view group's, children. Each child uses the same animation but for every one of them, the animation starts at a different time. A layout animation controller is used by <pre><code>ViewGroup</code></pre> to compute the delay by which each child's animation start must be offset. The delay is computed by using characteristics of each child, like its index in the view group. This standard implementation computes the delay by multiplying a fixed amount of miliseconds by the index of the child in its parent view group. Subclasses are supposed to override <pre><code>getDelayForView(android.view.View)</code></pre> to implement a different way of computing the delay. For instance, a <pre><code>GridLayoutAnimationController</code></pre> will compute the delay based on the column and row indices of the child in its parent view group. Information used to compute the animation delay of each child are stored in an instance of <pre><code>LayoutAnimationController.AnimationParameters</code></pre>, itself stored in the <pre><code>ViewGroup.LayoutParams</code></pre> of the view.<pre><code>public class LayoutAnimationController</code></pre></section>	https://developer.android.com/reference/android/view/animation/LayoutAnimationController.html
LinearInterpolator	A										<section class="prog__container">An interpolator where the rate of change is constant<pre><code>public class LinearInterpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/LinearInterpolator.html
OvershootInterpolator	A										<section class="prog__container">An interpolator where the change flings forward and overshoots the last value then comes back.<pre><code>public class OvershootInterpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/OvershootInterpolator.html
android.view.animation	A										<section class="prog__container">Provides classes that handle tweened animations.</section>	https://developer.android.com/reference/android/view/animation/package-summary.html
PathInterpolator	A										<section class="prog__container">An interpolator that can traverse a Path that extends from <pre><code>Point</code></pre> <pre><code>(0, 0)</code></pre> to <pre><code>(1, 1)</code></pre>. The x coordinate along the <pre><code>Path</code></pre> is the input value and the output is the y coordinate of the line at that point. This means that the Path must conform to a function <pre><code>y = f(x)</code></pre>.<pre><code>public class PathInterpolator</code></pre></section>	https://developer.android.com/reference/android/view/animation/PathInterpolator.html
RotateAnimation	A										<section class="prog__container">An animation that controls the rotation of an object. This rotation takes place in the X-Y plane. You can specify the point to use for the center of the rotation, where (0,0) is the top left point. If not specified, (0,0) is the default rotation point.<pre><code>public class RotateAnimation</code></pre></section>	https://developer.android.com/reference/android/view/animation/RotateAnimation.html
ScaleAnimation	A										<section class="prog__container">An animation that controls the scale of an object. You can specify the point to use for the center of scaling.<pre><code>public class ScaleAnimation</code></pre></section>	https://developer.android.com/reference/android/view/animation/ScaleAnimation.html
Transformation	A										<section class="prog__container">Defines the transformation to be applied at one point in time of an Animation.<pre><code>public class Transformation</code></pre></section>	https://developer.android.com/reference/android/view/animation/Transformation.html
TranslateAnimation	A										<section class="prog__container">An animation that controls the position of an object. See the <pre><code>full package</code></pre> description for details and sample code.<pre><code>public class TranslateAnimation</code></pre></section>	https://developer.android.com/reference/android/view/animation/TranslateAnimation.html
BaseInputConnection	A										<section class="prog__container">Base class for implementors of the InputConnection interface, taking care of most of the common behavior for providing a connection to an Editable. Implementors of this class will want to be sure to implement <pre><code>getEditable()</code></pre> to provide access to their own editable object, and to refer to the documentation in <pre><code>InputConnection</code></pre>.<pre><code>public class BaseInputConnection</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html
CompletionInfo	A										<section class="prog__container">Information about a single text completion that an editor has reported to an input method.<pre><code>public final class CompletionInfo</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/CompletionInfo.html
CorrectionInfo	A										<section class="prog__container">Information about a single text correction that an editor has reported to an input method.<pre><code>public final class CorrectionInfo</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/CorrectionInfo.html
CursorAnchorInfo.Builder	A										<section class="prog__container">Builder for <pre><code>CursorAnchorInfo</code></pre>. This class is not designed to be thread-safe.<pre><code>public static final class CursorAnchorInfo.Builder</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/CursorAnchorInfo.Builder.html
CursorAnchorInfo	A										<section class="prog__container">Positional information about the text insertion point and characters in the composition string.<pre><code>public final class CursorAnchorInfo</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/CursorAnchorInfo.html
EditorInfo	A										<section class="prog__container">An EditorInfo describes several attributes of a text editing object that an input method is communicating with (typically an EditText), most importantly the type of text content it contains and the current cursor position.<pre><code>public class EditorInfo</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html
ExtractedText	A										<section class="prog__container">Information about text that has been extracted for use by an input method. This contains information about a portion of the currently edited text, that the IME should display into its own interface while in extracted mode.<pre><code>public class ExtractedText</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html
ExtractedTextRequest	A										<section class="prog__container">Description of what an input method would like from an application when extract text from its input editor.<pre><code>public class ExtractedTextRequest</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/ExtractedTextRequest.html
InputBinding	A										<section class="prog__container">Information given to an <pre><code>InputMethod</code></pre> about a client connecting to it.<pre><code>public final class InputBinding</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputBinding.html
InputConnection	A										<section class="prog__container">The InputConnection interface is the communication channel from an <pre><code>InputMethod</code></pre> back to the application that is receiving its input. It is used to perform such things as reading text around the cursor, committing text to the text box, and sending raw key events to the application.<pre><code>public interface InputConnection</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputConnection.html
InputConnectionWrapper	A										<section class="prog__container"><pre><code>public class InputConnectionWrapper</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputConnectionWrapper.html
InputContentInfo	A										<section class="prog__container">A container object with which input methods can send content files to the target application.<pre><code>public final class InputContentInfo</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputContentInfo.html
InputMethod	A										<section class="prog__container">The InputMethod interface represents an input method which can generate key events and text, such as digital, email addresses, CJK characters, other language characters, and etc., while handling various input events, and send the text back to the application that requests text input. See <pre><code>InputMethodManager</code></pre> for more general information about the architecture.<pre><code>public interface InputMethod</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputMethod.html
InputMethod.SessionCallback	A										<section class="prog__container"><pre><code>public static interface InputMethod.SessionCallback</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputMethod.SessionCallback.html
InputMethodInfo	A										<section class="prog__container">This class is used to specify meta information of an input method.<pre><code>public final class InputMethodInfo</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodInfo.html
InputMethodManager	A										<section class="prog__container">Central system API to the overall input method framework (IMF) architecture, which arbitrates interaction between applications and the current input method. You can retrieve an instance of this interface with <pre><code>Context.getSystemService()</code></pre>.<pre><code>public final class InputMethodManager</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html
InputMethodSession.EventCallback	A										<section class="prog__container"><pre><code>public static interface InputMethodSession.EventCallback</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.EventCallback.html
InputMethodSession	A										<section class="prog__container">The InputMethodSession interface provides the per-client functionality of <pre><code>InputMethod</code></pre> that is safe to expose to applications.<pre><code>public interface InputMethodSession</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html
InputMethodSubtype	A										<section class="prog__container">This class is used to specify meta information of a subtype contained in an input method editor (IME). Subtype can describe locale (e.g. en_US, fr_FR...) and mode (e.g. voice, keyboard...), and is used for IME switch and settings. The input method subtype allows the system to bring up the specified subtype of the designated IME directly.<pre><code>public final class InputMethodSubtype</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.html
InputMethodSubtype.InputMethodSubtypeBuilder	A										<section class="prog__container">InputMethodSubtypeBuilder is a builder class of InputMethodSubtype. This class is designed to be used with <pre><code>setAdditionalInputMethodSubtypes(String, InputMethodSubtype[])</code></pre>. The developer needs to be aware of what each parameter means.<pre><code>public static class InputMethodSubtype.InputMethodSubtypeBuilder</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html
SentenceSuggestionsInfo	A										<section class="prog__container">This class contains a metadata of suggestions returned from a text service (e.g. <pre><code>SpellCheckerService</code></pre>). The text service uses this class to return the suggestions for a sentence. See <pre><code>SuggestionsInfo</code></pre> which is used for suggestions for a word. This class extends the functionality of <pre><code>SuggestionsInfo</code></pre> as far as this class enables you to put multiple <pre><code>SuggestionsInfo</code></pre>s on a sentence with the offsets and the lengths of all <pre><code>SuggestionsInfo</code></pre>s.<pre><code>public final class SentenceSuggestionsInfo</code></pre></section>	https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html
SpellCheckerInfo	A										<section class="prog__container">This class is used to specify meta information of a spell checker.<pre><code>public final class SpellCheckerInfo</code></pre></section>	https://developer.android.com/reference/android/view/textservice/SpellCheckerInfo.html
SpellCheckerSession	A										<section class="prog__container">The SpellCheckerSession interface provides the per client functionality of SpellCheckerService. <h3>Applications</h3><pre><code>public class SpellCheckerSession</code></pre></section>	https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.html
SpellCheckerSession.SpellCheckerSessionListener	A										<section class="prog__container">Callback for getting results from text services<pre><code>public static interface SpellCheckerSession.SpellCheckerSessionListener</code></pre></section>	https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionListener.html
SpellCheckerSubtype	A										<section class="prog__container">This class is used to specify meta information of a subtype contained in a spell checker. Subtype can describe locale (e.g. en_US, fr_FR...) used for settings.<pre><code>public final class SpellCheckerSubtype</code></pre></section>	https://developer.android.com/reference/android/view/textservice/SpellCheckerSubtype.html
SuggestionsInfo	A										<section class="prog__container">This class contains a metadata of suggestions from the text service<pre><code>public final class SuggestionsInfo</code></pre></section>	https://developer.android.com/reference/android/view/textservice/SuggestionsInfo.html
TextInfo	A										<section class="prog__container">This class contains a metadata of the input of TextService<pre><code>public final class TextInfo</code></pre></section>	https://developer.android.com/reference/android/view/textservice/TextInfo.html
TextServicesManager	A										<section class="prog__container">System API to the overall text services, which arbitrates interaction between applications and text services. You can retrieve an instance of this interface with <pre><code>Context.getSystemService()</code></pre>. The user can change the current text services in Settings. And also applications can specify the target text services. <h3>Architecture Overview</h3><pre><code>public final class TextServicesManager</code></pre></section>	https://developer.android.com/reference/android/view/textservice/TextServicesManager.html
ClientCertRequest	A										<section class="prog__container">ClientCertRequest: The user receives an instance of this class as a parameter of <pre><code>onReceivedClientCertRequest(WebView, ClientCertRequest)</code></pre>. The request includes the parameters to choose the client certificate, such as the host name and the port number requesting the cert, the acceptable key types and the principals. The user should call one of the class methods to indicate how to deal with the client certificate request. All methods should be called on UI thread. WebView caches the <pre><code>proceed(PrivateKey, X509Certificate[])</code></pre> and <pre><code>cancel()</code></pre> responses in memory and uses them to handle future client certificate requests for the same host/port pair. The user can clear the cached data using <pre><code>clearClientCertPreferences(Runnable)</code></pre>.<pre><code>public abstract class ClientCertRequest</code></pre></section>	https://developer.android.com/reference/android/webkit/ClientCertRequest.html
ConsoleMessage	A										<section class="prog__container">Public class representing a JavaScript console message from WebCore. This could be a issued by a call to one of the <pre><code>console</code></pre> logging functions (e.g. <pre><code>console.log('...')</code></pre>) or a JavaScript error on the page. To receive notifications of these messages, override the <pre><code>onConsoleMessage(ConsoleMessage)</code></pre> function.<pre><code>public class ConsoleMessage</code></pre></section>	https://developer.android.com/reference/android/webkit/ConsoleMessage.html
ConsoleMessage.MessageLevel	A										<section class="prog__container"><pre><code>public static final enum ConsoleMessage.MessageLevel</code></pre></section>	https://developer.android.com/reference/android/webkit/ConsoleMessage.MessageLevel.html
CookieManager	A										<section class="prog__container">Manages the cookies used by an application's <pre><code>WebView</code></pre> instances. Cookies are manipulated according to RFC2109.<pre><code>public abstract class CookieManager</code></pre></section>	https://developer.android.com/reference/android/webkit/CookieManager.html
CookieSyncManager	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> The WebView now automatically syncs cookies as necessary. You no longer need to create or use the CookieSyncManager. To manually force a sync you can use the CookieManager method <pre><code>flush()</code></pre> which is a synchronous replacement for <pre><code>sync()</code></pre>.<pre><code>public final class CookieSyncManager</code></pre></section>	https://developer.android.com/reference/android/webkit/CookieSyncManager.html
DateSorter	A										<section class="prog__container">Sorts dates into the following groups: Today Yesterday seven days ago one month ago older than a month ago<pre><code>public class DateSorter</code></pre></section>	https://developer.android.com/reference/android/webkit/DateSorter.html
DownloadListener	A										<section class="prog__container"><pre><code>public interface DownloadListener</code></pre></section>	https://developer.android.com/reference/android/webkit/DownloadListener.html
GeolocationPermissions.Callback	A										<section class="prog__container">A callback interface used by the host application to set the Geolocation permission state for an origin.<pre><code>public static interface GeolocationPermissions.Callback</code></pre></section>	https://developer.android.com/reference/android/webkit/GeolocationPermissions.Callback.html
GeolocationPermissions	A										<section class="prog__container">This class is used to manage permissions for the WebView's Geolocation JavaScript API. Geolocation permissions are applied to an origin, which consists of the host, scheme and port of a URI. In order for web content to use the Geolocation API, permission must be granted for that content's origin. This class stores Geolocation permissions. An origin's permission state can be either allowed or denied. This class uses Strings to represent an origin. When an origin attempts to use the Geolocation API, but no permission state is currently set for that origin, <pre><code>WebChromeClient.onGeolocationPermissionsShowPrompt()</code></pre> is called. This allows the permission state to be set for that origin. The methods of this class can be used to modify and interrogate the stored Geolocation permissions at any time.<pre><code>public class GeolocationPermissions</code></pre></section>	https://developer.android.com/reference/android/webkit/GeolocationPermissions.html
HttpAuthHandler	A										<section class="prog__container">Represents a request for HTTP authentication. Instances of this class are created by the WebView and passed to <pre><code>onReceivedHttpAuthRequest(WebView, HttpAuthHandler, String, String)</code></pre>. The host application must call either <pre><code>proceed(String, String)</code></pre> or <pre><code>cancel()</code></pre> to set the WebView's response to the request.<pre><code>public class HttpAuthHandler</code></pre></section>	https://developer.android.com/reference/android/webkit/HttpAuthHandler.html
JavascriptInterface	A										<section class="prog__container">Annotation that allows exposing methods to JavaScript. Starting from API level <pre><code>JELLY_BEAN_MR1</code></pre> and above, only methods explicitly marked with this annotation are available to the Javascript code. See <pre><code>addJavascriptInterface(Object, String)</code></pre> for more information about it.<pre><code>public abstract @interface JavascriptInterface</code></pre></section>	https://developer.android.com/reference/android/webkit/JavascriptInterface.html
JsPromptResult	A										<section class="prog__container">Public class for handling JavaScript prompt requests. The WebChromeClient will receive a <pre><code>onJsPrompt(WebView, String, String, String, JsPromptResult)</code></pre> call with a JsPromptResult instance as a parameter. This parameter is used to return the result of this user dialog prompt back to the WebView instance. The client can call cancel() to cancel the dialog or confirm() with the user's input to confirm the dialog.<pre><code>public class JsPromptResult</code></pre></section>	https://developer.android.com/reference/android/webkit/JsPromptResult.html
JsResult	A										<section class="prog__container">An instance of this class is passed as a parameter in various <pre><code>WebChromeClient</code></pre> action notifications. The object is used as a handle onto the underlying JavaScript-originated request, and provides a means for the client to indicate whether this action should proceed.<pre><code>public class JsResult</code></pre></section>	https://developer.android.com/reference/android/webkit/JsResult.html
MimeTypeMap	A										<section class="prog__container">Two-way map that maps MIME-types to file extensions and vice versa.<pre><code>public class MimeTypeMap</code></pre></section>	https://developer.android.com/reference/android/webkit/MimeTypeMap.html
android.webkit	A										<section class="prog__container">Provides tools for browsing the web. For more information about building apps with web-based content, see the Web Apps Overview. Annotations JavascriptInterface Annotation that allows exposing methods to JavaScript. Interfaces DownloadListener GeolocationPermissions.Callback A callback interface used by the host application to set the Geolocation permission state for an origin. PluginStub This interface is used to implement plugins in a WebView. ValueCallback<T> A callback interface used to provide values asynchronously. WebChromeClient.CustomViewCallback A callback interface used by the host application to notify the current page that its custom view has been dismissed. WebIconDatabase.IconListener This interface was deprecated in API level 18. This interface is obsolete. WebResourceRequest Encompasses parameters to the shouldInterceptRequest(WebView, WebResourceRequest) method. WebStorage.QuotaUpdater This interface was deprecated in API level 19. This class is obsolete and no longer used. WebView.FindListener Interface to listen for find results. WebView.PictureListener This interface was deprecated in API level 12. This interface is now obsolete. Classes ClientCertRequest ClientCertRequest: The user receives an instance of this class as a parameter of onReceivedClientCertRequest(WebView, ClientCertRequest). ConsoleMessage Public class representing a JavaScript console message from WebCore. CookieManager Manages the cookies used by an application's WebView instances. CookieSyncManager This class was deprecated in API level 21. The WebView now automatically syncs cookies as necessary. You no longer need to create or use the CookieSyncManager. To manually force a sync you can use the CookieManager method flush() which is a synchronous replacement for sync(). DateSorter Sorts dates into the following groups: Today Yesterday seven days ago one month ago older than a month ago GeolocationPermissions This class is used to manage permissions for the WebView's Geolocation JavaScript API. HttpAuthHandler Represents a request for HTTP authentication. JsPromptResult Public class for handling JavaScript prompt requests. JsResult An instance of this class is passed as a parameter in various WebChromeClient action notifications. MimeTypeMap Two-way map that maps MIME-types to file extensions and vice versa. PermissionRequest This class defines a permission request and is used when web content requests access to protected resources. ServiceWorkerClient Base class for clients to capture Service Worker related callbacks, see ServiceWorkerController for usage example. ServiceWorkerController Manages Service Workers used by WebView. ServiceWorkerWebSettings Manages settings state for all Service Workers. SslErrorHandler Represents a request for handling an SSL error. URLUtil WebBackForwardList This class contains the back/forward list for a WebView. WebChromeClient WebChromeClient.FileChooserParams Parameters used in the onShowFileChooser(WebView, ValueCallback, WebChromeClient.FileChooserParams) method. WebHistoryItem A convenience class for accessing fields in an entry in the back/forward list of a WebView. WebIconDatabase This class was deprecated in API level 18. This class is only required when running on devices up to JELLY_BEAN_MR2 WebMessage The Java representation of the HTML5 PostMessage event. WebMessagePort The Java representation of the HTML5 message ports. WebMessagePort.WebMessageCallback The listener for handling MessagePort events. WebResourceError Encapsulates information about errors occured during loading of web resources. WebResourceResponse Encapsulates a resource response. WebSettings Manages settings state for a WebView. WebStorage This class is used to manage the JavaScript storage APIs provided by the WebView. WebStorage.Origin This class encapsulates information about the amount of storage currently used by an origin for the JavaScript storage APIs. WebView A View that displays web pages. WebView.HitTestResult WebView.VisualStateCallback Callback interface supplied to postVisualStateCallback(long, WebView.VisualStateCallback) for receiving notifications about the visual state. WebView.WebViewTransport Transportation object for returning WebView across thread boundaries. WebViewClient WebViewDatabase This class allows developers to determine whether any WebView used in the application has stored any of the following types of browsing data and to clear any such stored data for all WebViews in the application. WebViewFragment A fragment that displays a WebView. Enums ConsoleMessage.MessageLevel WebSettings.LayoutAlgorithm Enum for controlling the layout of html. WebSettings.PluginState The plugin state effects how plugins are treated on a page. WebSettings.RenderPriority WebSettings.TextSize This enum was deprecated in API level 14. Use setTextZoom(int) and getTextZoom() instead. WebSettings.ZoomDensity Enum for specifying the WebView's desired density. </section>	https://developer.android.com/reference/android/webkit/package-summary.html
PermissionRequest	A										<section class="prog__container">This class defines a permission request and is used when web content requests access to protected resources. The permission request related events are delivered via <pre><code>onPermissionRequest(PermissionRequest)</code></pre> and <pre><code>onPermissionRequestCanceled(PermissionRequest)</code></pre>. Either <pre><code>grant()</code></pre> or <pre><code>deny()</code></pre> must be called in UI thread to respond to the request. New protected resources whose names are not defined here may be requested in future versions of WebView, even when running on an older Android release. To avoid unintentionally granting requests for new permissions, you should pass the specific permissions you intend to grant to <pre><code>grant()</code></pre>, and avoid writing code like this example: <pre> permissionRequest.grant(permissionRequest.getResources()) // This is wrong!!! </pre> See the WebView's release notes for information about new protected resources.<pre><code>public abstract class PermissionRequest</code></pre></section>	https://developer.android.com/reference/android/webkit/PermissionRequest.html
PluginStub	A										<section class="prog__container">This interface is used to implement plugins in a WebView. A plugin package may extend this class and implement the abstract functions to create embedded or fullscreeen views displayed in a WebView. The PluginStub implementation will be provided the same NPP instance that is created through the native interface.<pre><code>public interface PluginStub</code></pre></section>	https://developer.android.com/reference/android/webkit/PluginStub.html
ServiceWorkerClient	A										<section class="prog__container">Base class for clients to capture Service Worker related callbacks, see <pre><code>ServiceWorkerController</code></pre> for usage example.<pre><code>public class ServiceWorkerClient</code></pre></section>	https://developer.android.com/reference/android/webkit/ServiceWorkerClient.html
ServiceWorkerController	A										<section class="prog__container">Manages Service Workers used by WebView.<pre><code>public abstract class ServiceWorkerController</code></pre></section>	https://developer.android.com/reference/android/webkit/ServiceWorkerController.html
ServiceWorkerWebSettings	A										<section class="prog__container">Manages settings state for all Service Workers. These settings are not tied to the lifetime of any WebView because service workers can outlive WebView instances. The settings are similar to <pre><code>WebSettings</code></pre> but only settings relevant to Service Workers are supported.<pre><code>public abstract class ServiceWorkerWebSettings</code></pre></section>	https://developer.android.com/reference/android/webkit/ServiceWorkerWebSettings.html
SslErrorHandler	A										<section class="prog__container">Represents a request for handling an SSL error. Instances of this class are created by the WebView and passed to <pre><code>onReceivedSslError(WebView, SslErrorHandler, SslError)</code></pre>. The host application must call either <pre><code>proceed()</code></pre> or <pre><code>cancel()</code></pre> to set the WebView's response to the request.<pre><code>public class SslErrorHandler</code></pre></section>	https://developer.android.com/reference/android/webkit/SslErrorHandler.html
URLUtil	A										<section class="prog__container"><pre><code>public final class URLUtil</code></pre></section>	https://developer.android.com/reference/android/webkit/URLUtil.html
ValueCallback	A										<section class="prog__container">A callback interface used to provide values asynchronously.<pre><code>public interface ValueCallback</code></pre></section>	https://developer.android.com/reference/android/webkit/ValueCallback.html
WebBackForwardList	A										<section class="prog__container">This class contains the back/forward list for a WebView. WebView.copyBackForwardList() will return a copy of this class used to inspect the entries in the list.<pre><code>public abstract class WebBackForwardList</code></pre></section>	https://developer.android.com/reference/android/webkit/WebBackForwardList.html
WebChromeClient.CustomViewCallback	A										<section class="prog__container">A callback interface used by the host application to notify the current page that its custom view has been dismissed.<pre><code>public static interface WebChromeClient.CustomViewCallback</code></pre></section>	https://developer.android.com/reference/android/webkit/WebChromeClient.CustomViewCallback.html
WebChromeClient.FileChooserParams	A										<section class="prog__container">Parameters used in the <pre><code>onShowFileChooser(WebView, ValueCallback<uri[]>, WebChromeClient.FileChooserParams)</uri[]></code></pre> method.<pre><code>public static abstract class WebChromeClient.FileChooserParams</code></pre></section>	https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html
WebChromeClient	A										<section class="prog__container"><pre><code>public class WebChromeClient</code></pre></section>	https://developer.android.com/reference/android/webkit/WebChromeClient.html
WebHistoryItem	A										<section class="prog__container">A convenience class for accessing fields in an entry in the back/forward list of a WebView. Each WebHistoryItem is a snapshot of the requested history item. Each history item may be updated during the load of a page.<pre><code>public abstract class WebHistoryItem</code></pre></section>	https://developer.android.com/reference/android/webkit/WebHistoryItem.html
WebIconDatabase	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 18.</strong><br/> This class is only required when running on devices up to <pre><code>JELLY_BEAN_MR2</code></pre><pre><code>public abstract class WebIconDatabase</code></pre></section>	https://developer.android.com/reference/android/webkit/WebIconDatabase.html
WebIconDatabase.IconListener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 18.</strong><br/> This interface is obsolete.<pre><code>public static interface WebIconDatabase.IconListener</code></pre></section>	https://developer.android.com/reference/android/webkit/WebIconDatabase.IconListener.html
WebMessage	A										<section class="prog__container">The Java representation of the HTML5 PostMessage event. See https://html.spec.whatwg.org/multipage/comms.html#the-messageevent-interfaces for definition of a MessageEvent in HTML5.<pre><code>public class WebMessage</code></pre></section>	https://developer.android.com/reference/android/webkit/WebMessage.html
WebMessagePort	A										<section class="prog__container">The Java representation of the HTML5 message ports. A Message port represents one endpoint of a Message Channel. In Android webview, there is no separate Message Channel object. When a message channel is created, both ports are tangled to each other and started, and then returned in a MessagePort array, see <pre><code>createWebMessageChannel()</code></pre> for creating a message channel. When a message port is first created or received via transfer, it does not have a WebMessageCallback to receive web messages. The messages are queued until a WebMessageCallback is set. A message port should be closed when it is not used by the embedder application anymore. A closed port cannot be transferred or cannot be reopened to send messages. Close can be called multiple times. When a port is transferred to JS, it cannot be used to send or receive messages at the Java side anymore. Different from HTML5 Spec, a port cannot be transferred if one of these has ever happened: i. a message callback was set, ii. a message was posted on it. A transferred port cannot be closed by the application, since the ownership is also transferred. It is possible to transfer both ports of a channel to JS, for example for communication between subframes.<pre><code>public abstract class WebMessagePort</code></pre></section>	https://developer.android.com/reference/android/webkit/WebMessagePort.html
WebMessagePort.WebMessageCallback	A										<section class="prog__container">The listener for handling MessagePort events. The message callback methods are called on the main thread. If the embedder application wants to receive the messages on a different thread, it can do this by passing a Handler in <pre><code>setWebMessageCallback(WebMessageCallback, Handler)</code></pre>. In the latter case, the application should be extra careful for thread safety since WebMessagePort methods should be called on main thread.<pre><code>public static abstract class WebMessagePort.WebMessageCallback</code></pre></section>	https://developer.android.com/reference/android/webkit/WebMessagePort.WebMessageCallback.html
WebResourceError	A										<section class="prog__container">Encapsulates information about errors occured during loading of web resources. See <pre><code>WebViewClient.onReceivedError(WebView, WebResourceRequest, WebResourceError)</code></pre><pre><code>public abstract class WebResourceError</code></pre></section>	https://developer.android.com/reference/android/webkit/WebResourceError.html
WebResourceRequest	A										<section class="prog__container">Encompasses parameters to the <pre><code>shouldInterceptRequest(WebView, WebResourceRequest)</code></pre> method.<pre><code>public interface WebResourceRequest</code></pre></section>	https://developer.android.com/reference/android/webkit/WebResourceRequest.html
WebResourceResponse	A										<section class="prog__container">Encapsulates a resource response. Applications can return an instance of this class from <pre><code>shouldInterceptRequest(WebView, WebResourceRequest)</code></pre> to provide a custom response when the WebView requests a particular resource.<pre><code>public class WebResourceResponse</code></pre></section>	https://developer.android.com/reference/android/webkit/WebResourceResponse.html
WebSettings	A										<section class="prog__container">Manages settings state for a WebView. When a WebView is first created, it obtains a set of default settings. These default settings will be returned from any getter call. A WebSettings object obtained from WebView.getSettings() is tied to the life of the WebView. If a WebView has been destroyed, any method call on WebSettings will throw an IllegalStateException.<pre><code>public abstract class WebSettings</code></pre></section>	https://developer.android.com/reference/android/webkit/WebSettings.html
WebSettings.LayoutAlgorithm	A										<section class="prog__container">Enum for controlling the layout of html. <ul> <li>NORMAL means no rendering changes. This is the recommended choice for maximum compatibility across different platforms and Android versions.</li> <li>SINGLE_COLUMN moves all content into one column that is the width of the view.</li> <li>NARROW_COLUMNS makes all columns no wider than the screen if possible. Only use this for API levels prior to <pre><code>KITKAT</code></pre>.</li> <li>TEXT_AUTOSIZING boosts font size of paragraphs based on heuristics to make the text readable when viewing a wide-viewport layout in the overview mode. It is recommended to enable zoom support <pre><code>setSupportZoom(boolean)</code></pre> when using this mode. Supported from API level <pre><code>KITKAT</code></pre></li> </ul><pre><code>public static final enum WebSettings.LayoutAlgorithm</code></pre></section>	https://developer.android.com/reference/android/webkit/WebSettings.LayoutAlgorithm.html
WebSettings.PluginState	A										<section class="prog__container">The plugin state effects how plugins are treated on a page. ON means that any object will be loaded even if a plugin does not exist to handle the content. ON_DEMAND means that if there is a plugin installed that can handle the content, a placeholder is shown until the user clicks on the placeholder. Once clicked, the plugin will be enabled on the page. OFF means that all plugins will be turned off and any fallback content will be used.<pre><code>public static final enum WebSettings.PluginState</code></pre></section>	https://developer.android.com/reference/android/webkit/WebSettings.PluginState.html
WebSettings.RenderPriority	A										<section class="prog__container"><pre><code>public static final enum WebSettings.RenderPriority</code></pre></section>	https://developer.android.com/reference/android/webkit/WebSettings.RenderPriority.html
WebSettings.TextSize	A										<section class="prog__container"><p class="caution"><strong> This enum was deprecated in API level 14.</strong><br/> Use <pre><code>setTextZoom(int)</code></pre> and <pre><code>getTextZoom()</code></pre> instead.<pre><code>public static final enum WebSettings.TextSize</code></pre></section>	https://developer.android.com/reference/android/webkit/WebSettings.TextSize.html
WebSettings.ZoomDensity	A										<section class="prog__container">Enum for specifying the WebView's desired density. <ul> <li>FAR makes 100% looking like in 240dpi</li> <li>MEDIUM makes 100% looking like in 160dpi</li> <li>CLOSE makes 100% looking like in 120dpi</li> </ul><pre><code>public static final enum WebSettings.ZoomDensity</code></pre></section>	https://developer.android.com/reference/android/webkit/WebSettings.ZoomDensity.html
WebStorage	A										<section class="prog__container">This class is used to manage the JavaScript storage APIs provided by the <pre><code>WebView</code></pre>. It manages the Application Cache API, the Web SQL Database API and the HTML5 Web Storage API. The Application Cache API provides a mechanism to create and maintain an application cache to power offline Web applications. Use of the Application Cache API can be attributed to an origin <pre><code>WebStorage.Origin</code></pre>, however it is not possible to set per-origin quotas. Note that there can be only one application cache per application. The Web SQL Database API provides storage which is private to a given origin. Similar to the Application Cache, use of the Web SQL Database can be attributed to an origin. It is also possible to set per-origin quotas.<pre><code>public class WebStorage</code></pre></section>	https://developer.android.com/reference/android/webkit/WebStorage.html
WebStorage.Origin	A										<section class="prog__container">This class encapsulates information about the amount of storage currently used by an origin for the JavaScript storage APIs. An origin comprises the host, scheme and port of a URI. See <pre><code>WebStorage</code></pre> for details.<pre><code>public static class WebStorage.Origin</code></pre></section>	https://developer.android.com/reference/android/webkit/WebStorage.Origin.html
WebStorage.QuotaUpdater	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 19.</strong><br/> This class is obsolete and no longer used.<pre><code>public static interface WebStorage.QuotaUpdater</code></pre></section>	https://developer.android.com/reference/android/webkit/WebStorage.QuotaUpdater.html
WebView.FindListener	A										<section class="prog__container">Interface to listen for find results.<pre><code>public static interface WebView.FindListener</code></pre></section>	https://developer.android.com/reference/android/webkit/WebView.FindListener.html
WebView.HitTestResult	A										<section class="prog__container"><pre><code>public static class WebView.HitTestResult</code></pre></section>	https://developer.android.com/reference/android/webkit/WebView.HitTestResult.html
WebView	A										<section class="prog__container"><pre><code>public class WebView</code></pre></section>	https://developer.android.com/reference/android/webkit/WebView.html
WebView.PictureListener	A										<section class="prog__container"><p class="caution"><strong> This interface was deprecated in API level 12.</strong><br/> This interface is now obsolete.<pre><code>public static interface WebView.PictureListener</code></pre></section>	https://developer.android.com/reference/android/webkit/WebView.PictureListener.html
WebView.VisualStateCallback	A										<section class="prog__container">Callback interface supplied to <pre><code>postVisualStateCallback(long, WebView.VisualStateCallback)</code></pre> for receiving notifications about the visual state.<pre><code>public static abstract class WebView.VisualStateCallback</code></pre></section>	https://developer.android.com/reference/android/webkit/WebView.VisualStateCallback.html
WebView.WebViewTransport	A										<section class="prog__container">Transportation object for returning WebView across thread boundaries.<pre><code>public class WebView.WebViewTransport</code></pre></section>	https://developer.android.com/reference/android/webkit/WebView.WebViewTransport.html
WebViewClient	A										<section class="prog__container"><pre><code>public class WebViewClient</code></pre></section>	https://developer.android.com/reference/android/webkit/WebViewClient.html
WebViewDatabase	A										<section class="prog__container">This class allows developers to determine whether any WebView used in the application has stored any of the following types of browsing data and to clear any such stored data for all WebViews in the application. <ul> <li>Username/password pairs for web forms</li> <li>HTTP authentication username/password pairs</li> <li>Data entered into text fields (e.g. for autocomplete suggestions)</li> </ul><pre><code>public abstract class WebViewDatabase</code></pre></section>	https://developer.android.com/reference/android/webkit/WebViewDatabase.html
WebViewFragment	A										<section class="prog__container">A fragment that displays a WebView.<pre><code>public class WebViewFragment</code></pre></section>	https://developer.android.com/reference/android/webkit/WebViewFragment.html
AbsListView	A										<section class="prog__container">Base class that can be used to implement virtualized lists of items. A list does not have a spatial definition here. For instance, subclases of this class can display the content of the list in a grid, in a carousel, as stack, etc.<pre><code>public abstract class AbsListView</code></pre></section>	https://developer.android.com/reference/android/widget/AbsListView.html
AbsListView.LayoutParams	A										<section class="prog__container">AbsListView extends LayoutParams to provide a place to hold the view type.<pre><code>public static class AbsListView.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/AbsListView.LayoutParams.html
AbsListView.MultiChoiceModeListener	A										<section class="prog__container">A MultiChoiceModeListener receives events for <pre><code>CHOICE_MODE_MULTIPLE_MODAL</code></pre>. It acts as the <pre><code>ActionMode.Callback</code></pre> for the selection mode and also receives <pre><code>onItemCheckedStateChanged(ActionMode, int, long, boolean)</code></pre> events when the user selects and deselects list items.<pre><code>public static interface AbsListView.MultiChoiceModeListener</code></pre></section>	https://developer.android.com/reference/android/widget/AbsListView.MultiChoiceModeListener.html
AbsListView.OnScrollListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the list or grid has been scrolled.<pre><code>public static interface AbsListView.OnScrollListener</code></pre></section>	https://developer.android.com/reference/android/widget/AbsListView.OnScrollListener.html
AbsListView.RecyclerListener	A										<section class="prog__container">A RecyclerListener is used to receive a notification whenever a View is placed inside the RecycleBin's scrap heap. This listener is used to free resources associated to Views placed in the RecycleBin.<pre><code>public static interface AbsListView.RecyclerListener</code></pre></section>	https://developer.android.com/reference/android/widget/AbsListView.RecyclerListener.html
AbsListView.SelectionBoundsAdjuster	A										<section class="prog__container">The top-level view of a list item can implement this interface to allow itself to modify the bounds of the selection shown for that item.<pre><code>public static interface AbsListView.SelectionBoundsAdjuster</code></pre></section>	https://developer.android.com/reference/android/widget/AbsListView.SelectionBoundsAdjuster.html
AbsoluteLayout	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 3.</strong><br/> Use <pre><code>FrameLayout</code></pre>, <pre><code>RelativeLayout</code></pre> or a custom layout instead.<pre><code>public class AbsoluteLayout</code></pre></section>	https://developer.android.com/reference/android/widget/AbsoluteLayout.html
AbsoluteLayout.LayoutParams	A										<section class="prog__container">Per-child layout information associated with AbsoluteLayout. See <pre><code>Absolute Layout Attributes</code></pre> for a list of all child view attributes that this class supports.<pre><code>public static class AbsoluteLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/AbsoluteLayout.LayoutParams.html
AbsSeekBar	A										<section class="prog__container"><pre><code>public abstract class AbsSeekBar</code></pre></section>	https://developer.android.com/reference/android/widget/AbsSeekBar.html
AbsSpinner	A										<section class="prog__container">An abstract base class for spinner widgets. SDK users will probably not need to use this class.<pre><code>public abstract class AbsSpinner</code></pre></section>	https://developer.android.com/reference/android/widget/AbsSpinner.html
ActionMenuView	A										<section class="prog__container">ActionMenuView is a presentation of a series of menu options as a View. It provides several top level options as action buttons while spilling remaining options over as items in an overflow menu. This allows applications to present packs of actions inline with specific or repeating content.<pre><code>public class ActionMenuView</code></pre></section>	https://developer.android.com/reference/android/widget/ActionMenuView.html
ActionMenuView.LayoutParams	A										<section class="prog__container"><pre><code>public static class ActionMenuView.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/ActionMenuView.LayoutParams.html
ActionMenuView.OnMenuItemClickListener	A										<section class="prog__container">Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.<pre><code>public static interface ActionMenuView.OnMenuItemClickListener</code></pre></section>	https://developer.android.com/reference/android/widget/ActionMenuView.OnMenuItemClickListener.html
Adapter	A										<section class="prog__container">An Adapter object acts as a bridge between an <pre><code>AdapterView</code></pre> and the underlying data for that view. The Adapter provides access to the data items. The Adapter is also responsible for making a <pre><code>View</code></pre> for each item in the data set.<pre><code>public interface Adapter</code></pre></section>	https://developer.android.com/reference/android/widget/Adapter.html
AdapterView.AdapterContextMenuInfo	A										<section class="prog__container">Extra menu information provided to the <pre><code>onCreateContextMenu(ContextMenu, View, ContextMenuInfo)</code></pre> callback when a context menu is brought up for this AdapterView.<pre><code>public static class AdapterView.AdapterContextMenuInfo</code></pre></section>	https://developer.android.com/reference/android/widget/AdapterView.AdapterContextMenuInfo.html
AdapterView	A										<section class="prog__container">An AdapterView is a view whose children are determined by an <pre><code>Adapter</code></pre>.<pre><code>public abstract class AdapterView</code></pre></section>	https://developer.android.com/reference/android/widget/AdapterView.html
AdapterView.OnItemClickListener	A										<section class="prog__container">Interface definition for a callback to be invoked when an item in this AdapterView has been clicked.<pre><code>public static interface AdapterView.OnItemClickListener</code></pre></section>	https://developer.android.com/reference/android/widget/AdapterView.OnItemClickListener.html
AdapterView.OnItemLongClickListener	A										<section class="prog__container">Interface definition for a callback to be invoked when an item in this view has been clicked and held.<pre><code>public static interface AdapterView.OnItemLongClickListener</code></pre></section>	https://developer.android.com/reference/android/widget/AdapterView.OnItemLongClickListener.html
AdapterView.OnItemSelectedListener	A										<section class="prog__container">Interface definition for a callback to be invoked when an item in this view has been selected.<pre><code>public static interface AdapterView.OnItemSelectedListener</code></pre></section>	https://developer.android.com/reference/android/widget/AdapterView.OnItemSelectedListener.html
AdapterViewAnimator	A										<section class="prog__container">Base class for a <pre><code>AdapterView</code></pre> that will perform animations when switching between its views.<pre><code>public abstract class AdapterViewAnimator</code></pre></section>	https://developer.android.com/reference/android/widget/AdapterViewAnimator.html
AdapterViewFlipper	A										<section class="prog__container">Simple <pre><code>ViewAnimator</code></pre> that will animate between two or more views that have been added to it. Only one child is shown at a time. If requested, can automatically flip between each child at a regular interval.<pre><code>public class AdapterViewFlipper</code></pre></section>	https://developer.android.com/reference/android/widget/AdapterViewFlipper.html
Advanceable	A										<section class="prog__container">This interface can be implemented by any collection-type view which has a notion of progressing through its set of children. The interface exists to give AppWidgetHosts a way of taking responsibility for automatically advancing such collections.<pre><code>public interface Advanceable</code></pre></section>	https://developer.android.com/reference/android/widget/Advanceable.html
AlphabetIndexer	A										<section class="prog__container">A helper class for adapters that implement the SectionIndexer interface. If the items in the adapter are sorted by simple alphabet-based sorting, then this class provides a way to do fast indexing of large lists using binary search. It caches the indices that have been determined through the binary search and also invalidates the cache if changes occur in the cursor.<pre><code>public class AlphabetIndexer</code></pre></section>	https://developer.android.com/reference/android/widget/AlphabetIndexer.html
AnalogClock	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> This widget is no longer supported.<pre><code>public class AnalogClock</code></pre></section>	https://developer.android.com/reference/android/widget/AnalogClock.html
ArrayAdapter	A										<section class="prog__container">A concrete BaseAdapter that is backed by an array of arbitrary objects. By default this class expects that the provided resource id references a single TextView. If you want to use a more complex layout, use the constructors that also takes a field id. That field id should reference a TextView in the larger layout resource.<pre><code>public class ArrayAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/ArrayAdapter.html
AutoCompleteTextView	A										<section class="prog__container"><pre><code>public class AutoCompleteTextView</code></pre></section>	https://developer.android.com/reference/android/widget/AutoCompleteTextView.html
AutoCompleteTextView.OnDismissListener	A										<section class="prog__container">Listener to respond to the AutoCompleteTextView's completion list being dismissed.<pre><code>public static interface AutoCompleteTextView.OnDismissListener</code></pre></section>	https://developer.android.com/reference/android/widget/AutoCompleteTextView.OnDismissListener.html
AutoCompleteTextView.Validator	A										<section class="prog__container">This interface is used to make sure that the text entered in this TextView complies to a certain format. Since there is no foolproof way to prevent the user from leaving this View with an incorrect value in it, all we can do is try to fix it ourselves when this happens.<pre><code>public static interface AutoCompleteTextView.Validator</code></pre></section>	https://developer.android.com/reference/android/widget/AutoCompleteTextView.Validator.html
BaseAdapter	A										<section class="prog__container">Common base class of common implementation for an <pre><code>Adapter</code></pre> that can be used in both <pre><code>ListView</code></pre> (by implementing the specialized <pre><code>ListAdapter</code></pre> interface) and <pre><code>Spinner</code></pre> (by implementing the specialized <pre><code>SpinnerAdapter</code></pre> interface).<pre><code>public abstract class BaseAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/BaseAdapter.html
BaseExpandableListAdapter	A										<section class="prog__container">Base class for a <pre><code>ExpandableListAdapter</code></pre> used to provide data and Views from some data to an expandable list view.<pre><code>public abstract class BaseExpandableListAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html
Button	A										<section class="prog__container">Represents a push-button widget. Push-buttons can be pressed, or clicked, by the user to perform an action.<pre><code>public class Button</code></pre></section>	https://developer.android.com/reference/android/widget/Button.html
CalendarView	A										<section class="prog__container">This class is a calendar widget for displaying and selecting dates. The range of dates supported by this calendar is configurable.<pre><code>public class CalendarView</code></pre></section>	https://developer.android.com/reference/android/widget/CalendarView.html
CalendarView.OnDateChangeListener	A										<section class="prog__container">The callback used to indicate the user changes the date.<pre><code>public static interface CalendarView.OnDateChangeListener</code></pre></section>	https://developer.android.com/reference/android/widget/CalendarView.OnDateChangeListener.html
Checkable	A										<section class="prog__container">Defines an extension for views that make them checkable.<pre><code>public interface Checkable</code></pre></section>	https://developer.android.com/reference/android/widget/Checkable.html
CheckBox	A										<section class="prog__container"><pre><code>public class CheckBox</code></pre></section>	https://developer.android.com/reference/android/widget/CheckBox.html
CheckedTextView	A										<section class="prog__container">An extension to <pre><code>TextView</code></pre> that supports the <pre><code>Checkable</code></pre> interface and displays.<pre><code>public class CheckedTextView</code></pre></section>	https://developer.android.com/reference/android/widget/CheckedTextView.html
Chronometer	A										<section class="prog__container">Class that implements a simple timer.<pre><code>public class Chronometer</code></pre></section>	https://developer.android.com/reference/android/widget/Chronometer.html
Chronometer.OnChronometerTickListener	A										<section class="prog__container">A callback that notifies when the chronometer has incremented on its own.<pre><code>public static interface Chronometer.OnChronometerTickListener</code></pre></section>	https://developer.android.com/reference/android/widget/Chronometer.OnChronometerTickListener.html
CompoundButton	A										<section class="prog__container"><pre><code>public abstract class CompoundButton</code></pre></section>	https://developer.android.com/reference/android/widget/CompoundButton.html
CompoundButton.OnCheckedChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when the checked state of a compound button changed.<pre><code>public static interface CompoundButton.OnCheckedChangeListener</code></pre></section>	https://developer.android.com/reference/android/widget/CompoundButton.OnCheckedChangeListener.html
CursorAdapter	A										<section class="prog__container">Adapter that exposes data from a <pre><code>Cursor</code></pre> to a <pre><code>ListView</code></pre> widget.<pre><code>public abstract class CursorAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/CursorAdapter.html
CursorTreeAdapter	A										<section class="prog__container">An adapter that exposes data from a series of <pre><code>Cursor</code></pre>s to an <pre><code>ExpandableListView</code></pre> widget. The top-level <pre><code>Cursor</code></pre> (that is given in the constructor) exposes the groups, while subsequent <pre><code>Cursor</code></pre>s returned from <pre><code>getChildrenCursor(Cursor)</code></pre> expose children within a particular group. The Cursors must include a column named "_id" or this class will not work.<pre><code>public abstract class CursorTreeAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/CursorTreeAdapter.html
DatePicker	A										<section class="prog__container">Provides a widget for selecting a date.<pre><code>public class DatePicker</code></pre></section>	https://developer.android.com/reference/android/widget/DatePicker.html
DatePicker.OnDateChangedListener	A										<section class="prog__container">The callback used to indicate the user changed the date.<pre><code>public static interface DatePicker.OnDateChangedListener</code></pre></section>	https://developer.android.com/reference/android/widget/DatePicker.OnDateChangedListener.html
DialerFilter	A										<section class="prog__container"><pre><code>public class DialerFilter</code></pre></section>	https://developer.android.com/reference/android/widget/DialerFilter.html
DigitalClock	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 17.</strong><br/> It is recommended you use <pre><code>TextClock</code></pre> instead.<pre><code>public class DigitalClock</code></pre></section>	https://developer.android.com/reference/android/widget/DigitalClock.html
EdgeEffect	A										<section class="prog__container">This class performs the graphical effect used at the edges of scrollable widgets when the user scrolls beyond the content bounds in 2D space.<pre><code>public class EdgeEffect</code></pre></section>	https://developer.android.com/reference/android/widget/EdgeEffect.html
EditText	A										<section class="prog__container">EditText is a thin veneer over TextView that configures itself to be editable.<pre><code>public class EditText</code></pre></section>	https://developer.android.com/reference/android/widget/EditText.html
ExpandableListAdapter	A										<section class="prog__container">An adapter that links a <pre><code>ExpandableListView</code></pre> with the underlying data. The implementation of this interface will provide access to the data of the children (categorized by groups), and also instantiate <pre><code>View</code></pre>s for children and groups.<pre><code>public interface ExpandableListAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/ExpandableListAdapter.html
ExpandableListView.ExpandableListContextMenuInfo	A										<section class="prog__container">Extra menu information specific to an <pre><code>ExpandableListView</code></pre> provided to the <pre><code>onCreateContextMenu(ContextMenu, View, ContextMenuInfo)</code></pre> callback when a context menu is brought up for this AdapterView.<pre><code>public static class ExpandableListView.ExpandableListContextMenuInfo</code></pre></section>	https://developer.android.com/reference/android/widget/ExpandableListView.ExpandableListContextMenuInfo.html
ExpandableListView	A										<section class="prog__container">A view that shows items in a vertically scrolling two-level list. This differs from the <pre><code>ListView</code></pre> by allowing two levels: groups which can individually be expanded to show its children. The items come from the <pre><code>ExpandableListAdapter</code></pre> associated with this view.<pre><code>public class ExpandableListView</code></pre></section>	https://developer.android.com/reference/android/widget/ExpandableListView.html
ExpandableListView.OnChildClickListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a child in this expandable list has been clicked.<pre><code>public static interface ExpandableListView.OnChildClickListener</code></pre></section>	https://developer.android.com/reference/android/widget/ExpandableListView.OnChildClickListener.html
ExpandableListView.OnGroupClickListener	A										<section class="prog__container">Interface definition for a callback to be invoked when a group in this expandable list has been clicked.<pre><code>public static interface ExpandableListView.OnGroupClickListener</code></pre></section>	https://developer.android.com/reference/android/widget/ExpandableListView.OnGroupClickListener.html
ExpandableListView.OnGroupCollapseListener	A										<section class="prog__container">Used for being notified when a group is collapsed<pre><code>public static interface ExpandableListView.OnGroupCollapseListener</code></pre></section>	https://developer.android.com/reference/android/widget/ExpandableListView.OnGroupCollapseListener.html
ExpandableListView.OnGroupExpandListener	A										<section class="prog__container">Used for being notified when a group is expanded<pre><code>public static interface ExpandableListView.OnGroupExpandListener</code></pre></section>	https://developer.android.com/reference/android/widget/ExpandableListView.OnGroupExpandListener.html
Filter.FilterListener	A										<section class="prog__container"><pre><code>public static interface Filter.FilterListener</code></pre></section>	https://developer.android.com/reference/android/widget/Filter.FilterListener.html
Filter.FilterResults	A										<section class="prog__container"><pre><code>protected static class Filter.FilterResults</code></pre></section>	https://developer.android.com/reference/android/widget/Filter.FilterResults.html
Filter	A										<section class="prog__container"><pre><code>public abstract class Filter</code></pre></section>	https://developer.android.com/reference/android/widget/Filter.html
Filterable	A										<section class="prog__container"><pre><code>public interface Filterable</code></pre></section>	https://developer.android.com/reference/android/widget/Filterable.html
FilterQueryProvider	A										<section class="prog__container">This class can be used by external clients of CursorAdapter and CursorTreeAdapter to define how the content of the adapter should be filtered.<pre><code>public interface FilterQueryProvider</code></pre></section>	https://developer.android.com/reference/android/widget/FilterQueryProvider.html
FrameLayout	A										<section class="prog__container">FrameLayout is designed to block out an area on the screen to display a single item. Generally, FrameLayout should be used to hold a single child view, because it can be difficult to organize child views in a way that's scalable to different screen sizes without the children overlapping each other. You can, however, add multiple children to a FrameLayout and control their position within the FrameLayout by assigning gravity to each child, using the <pre><code>android:layout_gravity</code></pre> attribute.<pre><code>public class FrameLayout</code></pre></section>	https://developer.android.com/reference/android/widget/FrameLayout.html
FrameLayout.LayoutParams	A										<section class="prog__container">Per-child layout information for layouts that support margins. See <pre><code>FrameLayout Layout Attributes</code></pre> for a list of all child view attributes that this class supports.<pre><code>public static class FrameLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/FrameLayout.LayoutParams.html
Gallery	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 16.</strong><br/> This widget is no longer supported. Other horizontally scrolling widgets include <pre><code>HorizontalScrollView</code></pre> and <pre><code>ViewPager</code></pre> from the support library.<pre><code>public class Gallery</code></pre></section>	https://developer.android.com/reference/android/widget/Gallery.html
Gallery.LayoutParams	A										<section class="prog__container">Gallery extends LayoutParams to provide a place to hold current Transformation information along with previous position/transformation info.<pre><code>public static class Gallery.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/Gallery.LayoutParams.html
GridLayout.Alignment	A										<section class="prog__container">Alignments specify where a view should be placed within a cell group and what size it should be.<pre><code>public static abstract class GridLayout.Alignment</code></pre></section>	https://developer.android.com/reference/android/widget/GridLayout.Alignment.html
GridLayout	A										<section class="prog__container">A layout that places its children in a rectangular <em>grid</em>.<pre><code>public class GridLayout</code></pre></section>	https://developer.android.com/reference/android/widget/GridLayout.html
GridLayout.LayoutParams	A										<section class="prog__container">Layout information associated with each of the children of a GridLayout.<pre><code>public static class GridLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html
GridLayout.Spec	A										<section class="prog__container">A Spec defines the horizontal or vertical characteristics of a group of cells. Each spec. defines the <em>grid indices</em> and <em>alignment</em> along the appropriate axis.<pre><code>public static class GridLayout.Spec</code></pre></section>	https://developer.android.com/reference/android/widget/GridLayout.Spec.html
GridView	A										<section class="prog__container">A view that shows items in two-dimensional scrolling grid. The items in the grid come from the <pre><code>ListAdapter</code></pre> associated with this view.<pre><code>public class GridView</code></pre></section>	https://developer.android.com/reference/android/widget/GridView.html
HeaderViewListAdapter	A										<section class="prog__container">ListAdapter used when a ListView has header views. This ListAdapter wraps another one and also keeps track of the header views and their associated data objects.<pre><code>public class HeaderViewListAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/HeaderViewListAdapter.html
HeterogeneousExpandableList	A										<section class="prog__container">Additional methods that when implemented make an <pre><code>ExpandableListAdapter</code></pre> take advantage of the <pre><code>Adapter</code></pre> view type mechanism.<pre><code>public interface HeterogeneousExpandableList</code></pre></section>	https://developer.android.com/reference/android/widget/HeterogeneousExpandableList.html
HorizontalScrollView	A										<section class="prog__container">Layout container for a view hierarchy that can be scrolled by the user, allowing it to be larger than the physical display. A HorizontalScrollView is a <pre><code>FrameLayout</code></pre>, meaning you should place one child in it containing the entire contents to scroll; this child may itself be a layout manager with a complex hierarchy of objects. A child that is often used is a <pre><code>LinearLayout</code></pre> in a horizontal orientation, presenting a horizontal array of top-level items that the user can scroll through.<pre><code>public class HorizontalScrollView</code></pre></section>	https://developer.android.com/reference/android/widget/HorizontalScrollView.html
ImageButton	A										<section class="prog__container"><pre><code>public class ImageButton</code></pre></section>	https://developer.android.com/reference/android/widget/ImageButton.html
ImageSwitcher	A										<section class="prog__container"><pre><code>public class ImageSwitcher</code></pre></section>	https://developer.android.com/reference/android/widget/ImageSwitcher.html
ImageView	A										<section class="prog__container">Displays an arbitrary image, such as an icon. The ImageView class can load images from various sources (such as resources or content providers), takes care of computing its measurement from the image so that it can be used in any layout manager, and provides various display options such as scaling and tinting.<pre><code>public class ImageView</code></pre></section>	https://developer.android.com/reference/android/widget/ImageView.html
ImageView.ScaleType	A										<section class="prog__container">Options for scaling the bounds of an image to the bounds of this view.<pre><code>public static final enum ImageView.ScaleType</code></pre></section>	https://developer.android.com/reference/android/widget/ImageView.ScaleType.html
LinearLayout	A										<section class="prog__container">A Layout that arranges its children in a single column or a single row. The direction of the row can be set by calling <pre><code>setOrientation()</code></pre>. You can also specify gravity, which specifies the alignment of all the child elements by calling <pre><code>setGravity()</code></pre> or specify that specific children grow to fill up any remaining space in the layout by setting the <em>weight</em> member of <pre><code>LinearLayout.LayoutParams</code></pre>. The default orientation is horizontal.<pre><code>public class LinearLayout</code></pre></section>	https://developer.android.com/reference/android/widget/LinearLayout.html
LinearLayout.LayoutParams	A										<section class="prog__container">Per-child layout information associated with ViewLinearLayout.<pre><code>public static class LinearLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html
ListAdapter	A										<section class="prog__container">Extended <pre><code>Adapter</code></pre> that is the bridge between a <pre><code>ListView</code></pre> and the data that backs the list. Frequently that data comes from a Cursor, but that is not required. The ListView can display any data provided that it is wrapped in a ListAdapter.<pre><code>public interface ListAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/ListAdapter.html
ListPopupWindow	A										<section class="prog__container">A ListPopupWindow anchors itself to a host view and displays a list of choices.<pre><code>public class ListPopupWindow</code></pre></section>	https://developer.android.com/reference/android/widget/ListPopupWindow.html
ListView.FixedViewInfo	A										<section class="prog__container">A class that represents a fixed view in a list, for example a header at the top or a footer at the bottom.<pre><code>public class ListView.FixedViewInfo</code></pre></section>	https://developer.android.com/reference/android/widget/ListView.FixedViewInfo.html
ListView	A										<section class="prog__container">A view that shows items in a vertically scrolling list. The items come from the <pre><code>ListAdapter</code></pre> associated with this view.<pre><code>public class ListView</code></pre></section>	https://developer.android.com/reference/android/widget/ListView.html
MediaController	A										<section class="prog__container">A view containing controls for a MediaPlayer. Typically contains the buttons like "Play/Pause", "Rewind", "Fast Forward" and a progress slider. It takes care of synchronizing the controls with the state of the MediaPlayer.<pre><code>public class MediaController</code></pre></section>	https://developer.android.com/reference/android/widget/MediaController.html
MediaController.MediaPlayerControl	A										<section class="prog__container"><pre><code>public static interface MediaController.MediaPlayerControl</code></pre></section>	https://developer.android.com/reference/android/widget/MediaController.MediaPlayerControl.html
MultiAutoCompleteTextView.CommaTokenizer	A										<section class="prog__container">This simple Tokenizer can be used for lists where the items are separated by a comma and one or more spaces.<pre><code>public static class MultiAutoCompleteTextView.CommaTokenizer</code></pre></section>	https://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.CommaTokenizer.html
MultiAutoCompleteTextView	A										<section class="prog__container">An editable text view, extending <pre><code>AutoCompleteTextView</code></pre>, that can show completion suggestions for the substring of the text where the user is typing instead of necessarily for the entire thing.<pre><code>public class MultiAutoCompleteTextView</code></pre></section>	https://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.html
MultiAutoCompleteTextView.Tokenizer	A										<section class="prog__container"><pre><code>public static interface MultiAutoCompleteTextView.Tokenizer</code></pre></section>	https://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.Tokenizer.html
NumberPicker.Formatter	A										<section class="prog__container">Interface used to format current value into a string for presentation.<pre><code>public static interface NumberPicker.Formatter</code></pre></section>	https://developer.android.com/reference/android/widget/NumberPicker.Formatter.html
NumberPicker	A										<section class="prog__container">A widget that enables the user to select a number from a predefined range. There are two flavors of this widget and which one is presented to the user depends on the current theme. <ul> <li> If the current theme is derived from <pre><code>Theme</code></pre> the widget presents the current value as an editable input field with an increment button above and a decrement button below. Long pressing the buttons allows for a quick change of the current value. Tapping on the input field allows to type in a desired value. </li> <li> If the current theme is derived from <pre><code>Theme_Holo</code></pre> or <pre><code>Theme_Holo_Light</code></pre> the widget presents the current value as an editable input field with a lesser value above and a greater value below. Tapping on the lesser or greater value selects it by animating the number axis up or down to make the chosen value current. Flinging up or down allows for multiple increments or decrements of the current value. Long pressing on the lesser and greater values also allows for a quick change of the current value. Tapping on the current value allows to type in a desired value. </li> </ul><pre><code>public class NumberPicker</code></pre></section>	https://developer.android.com/reference/android/widget/NumberPicker.html
NumberPicker.OnScrollListener	A										<section class="prog__container">Interface to listen for the picker scroll state.<pre><code>public static interface NumberPicker.OnScrollListener</code></pre></section>	https://developer.android.com/reference/android/widget/NumberPicker.OnScrollListener.html
NumberPicker.OnValueChangeListener	A										<section class="prog__container">Interface to listen for changes of the current value.<pre><code>public static interface NumberPicker.OnValueChangeListener</code></pre></section>	https://developer.android.com/reference/android/widget/NumberPicker.OnValueChangeListener.html
OverScroller	A										<section class="prog__container">This class encapsulates scrolling with the ability to overshoot the bounds of a scrolling operation. This class is a drop-in replacement for <pre><code>Scroller</code></pre> in most cases.<pre><code>public class OverScroller</code></pre></section>	https://developer.android.com/reference/android/widget/OverScroller.html
android.widget	A										<section class="prog__container"> The widget package contains (mostly visual) UI elements to use on your Application screen. You can also design your own. </section>	https://developer.android.com/reference/android/widget/package-summary.html
PopupMenu	A										<section class="prog__container">A PopupMenu displays a <pre><code>Menu</code></pre> in a modal popup window anchored to a <pre><code>View</code></pre>. The popup will appear below the anchor view if there is room, or above it if there is not. If the IME is visible the popup will not overlap it until it is touched. Touching outside of the popup will dismiss it.<pre><code>public class PopupMenu</code></pre></section>	https://developer.android.com/reference/android/widget/PopupMenu.html
PopupMenu.OnDismissListener	A										<section class="prog__container">Callback interface used to notify the application that the menu has closed.<pre><code>public static interface PopupMenu.OnDismissListener</code></pre></section>	https://developer.android.com/reference/android/widget/PopupMenu.OnDismissListener.html
PopupMenu.OnMenuItemClickListener	A										<section class="prog__container">Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.<pre><code>public static interface PopupMenu.OnMenuItemClickListener</code></pre></section>	https://developer.android.com/reference/android/widget/PopupMenu.OnMenuItemClickListener.html
PopupWindow	A										<section class="prog__container"><pre><code>public class PopupWindow</code></pre></section>	https://developer.android.com/reference/android/widget/PopupWindow.html
PopupWindow.OnDismissListener	A										<section class="prog__container">Listener that is called when this popup window is dismissed.<pre><code>public static interface PopupWindow.OnDismissListener</code></pre></section>	https://developer.android.com/reference/android/widget/PopupWindow.OnDismissListener.html
ProgressBar	A										<section class="prog__container"><pre><code>public class ProgressBar</code></pre></section>	https://developer.android.com/reference/android/widget/ProgressBar.html
QuickContactBadge	A										<section class="prog__container">Widget used to show an image with the standard QuickContact badge and on-click behavior.<pre><code>public class QuickContactBadge</code></pre></section>	https://developer.android.com/reference/android/widget/QuickContactBadge.html
RadioButton	A										<section class="prog__container"><pre><code>public class RadioButton</code></pre></section>	https://developer.android.com/reference/android/widget/RadioButton.html
RadioGroup	A										<section class="prog__container"><pre><code>public class RadioGroup</code></pre></section>	https://developer.android.com/reference/android/widget/RadioGroup.html
RadioGroup.LayoutParams	A										<section class="prog__container"><pre><code>public static class RadioGroup.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/RadioGroup.LayoutParams.html
RadioGroup.OnCheckedChangeListener	A										<section class="prog__container"><pre><code>public static interface RadioGroup.OnCheckedChangeListener</code></pre></section>	https://developer.android.com/reference/android/widget/RadioGroup.OnCheckedChangeListener.html
RatingBar	A										<section class="prog__container">A RatingBar is an extension of SeekBar and ProgressBar that shows a rating in stars. The user can touch/drag or use arrow keys to set the rating when using the default size RatingBar. The smaller RatingBar style ( <pre><code>ratingBarStyleSmall</code></pre>) and the larger indicator-only style (<pre><code>ratingBarStyleIndicator</code></pre>) do not support user interaction and should only be used as indicators.<pre><code>public class RatingBar</code></pre></section>	https://developer.android.com/reference/android/widget/RatingBar.html
RatingBar.OnRatingBarChangeListener	A										<section class="prog__container">A callback that notifies clients when the rating has been changed. This includes changes that were initiated by the user through a touch gesture or arrow key/trackball as well as changes that were initiated programmatically.<pre><code>public static interface RatingBar.OnRatingBarChangeListener</code></pre></section>	https://developer.android.com/reference/android/widget/RatingBar.OnRatingBarChangeListener.html
RelativeLayout	A										<section class="prog__container">A Layout where the positions of the children can be described in relation to each other or to the parent.<pre><code>public class RelativeLayout</code></pre></section>	https://developer.android.com/reference/android/widget/RelativeLayout.html
RelativeLayout.LayoutParams	A										<section class="prog__container">Per-child layout information associated with RelativeLayout.<pre><code>public static class RelativeLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/RelativeLayout.LayoutParams.html
RemoteViews.ActionException	A										<section class="prog__container">Exception to send when something goes wrong executing an action<pre><code>public static class RemoteViews.ActionException</code></pre></section>	https://developer.android.com/reference/android/widget/RemoteViews.ActionException.html
RemoteViews	A										<section class="prog__container">A class that describes a view hierarchy that can be displayed in another process. The hierarchy is inflated from a layout resource file, and this class provides some basic operations for modifying the content of the inflated hierarchy.<pre><code>public class RemoteViews</code></pre></section>	https://developer.android.com/reference/android/widget/RemoteViews.html
RemoteViews.RemoteView	A										<section class="prog__container">This annotation indicates that a subclass of View is alllowed to be used with the <pre><code>RemoteViews</code></pre> mechanism.<pre><code>public static abstract @interface RemoteViews.RemoteView</code></pre></section>	https://developer.android.com/reference/android/widget/RemoteViews.RemoteView.html
RemoteViewsService	A										<section class="prog__container">The service to be connected to for a remote adapter to request RemoteViews. Users should extend the RemoteViewsService to provide the appropriate RemoteViewsFactory's used to populate the remote collection view (ListView, GridView, etc).<pre><code>public abstract class RemoteViewsService</code></pre></section>	https://developer.android.com/reference/android/widget/RemoteViewsService.html
RemoteViewsService.RemoteViewsFactory	A										<section class="prog__container">An interface for an adapter between a remote collection view (ListView, GridView, etc) and the underlying data for that view. The implementor is responsible for making a RemoteView for each item in the data set. This interface is a thin wrapper around <pre><code>Adapter</code></pre>.<pre><code>public static interface RemoteViewsService.RemoteViewsFactory</code></pre></section>	https://developer.android.com/reference/android/widget/RemoteViewsService.RemoteViewsFactory.html
ResourceCursorAdapter	A										<section class="prog__container">An easy adapter that creates views defined in an XML file. You can specify the XML file that defines the appearance of the views.<pre><code>public abstract class ResourceCursorAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/ResourceCursorAdapter.html
ResourceCursorTreeAdapter	A										<section class="prog__container">A fairly simple ExpandableListAdapter that creates views defined in an XML file. You can specify the XML file that defines the appearance of the views.<pre><code>public abstract class ResourceCursorTreeAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/ResourceCursorTreeAdapter.html
Scroller	A										<section class="prog__container"><pre><code>public class Scroller</code></pre></section>	https://developer.android.com/reference/android/widget/Scroller.html
ScrollView	A										<section class="prog__container">Layout container for a view hierarchy that can be scrolled by the user, allowing it to be larger than the physical display. A ScrollView is a <pre><code>FrameLayout</code></pre>, meaning you should place one child in it containing the entire contents to scroll; this child may itself be a layout manager with a complex hierarchy of objects. A child that is often used is a <pre><code>LinearLayout</code></pre> in a vertical orientation, presenting a vertical array of top-level items that the user can scroll through.<pre><code>public class ScrollView</code></pre></section>	https://developer.android.com/reference/android/widget/ScrollView.html
SearchView	A										<section class="prog__container">A widget that provides a user interface for the user to enter a search query and submit a request to a search provider. Shows a list of query suggestions or results, if available, and allows the user to pick a suggestion or result to launch into.<pre><code>public class SearchView</code></pre></section>	https://developer.android.com/reference/android/widget/SearchView.html
SearchView.OnCloseListener	A										<section class="prog__container"><pre><code>public static interface SearchView.OnCloseListener</code></pre></section>	https://developer.android.com/reference/android/widget/SearchView.OnCloseListener.html
SearchView.OnQueryTextListener	A										<section class="prog__container">Callbacks for changes to the query text.<pre><code>public static interface SearchView.OnQueryTextListener</code></pre></section>	https://developer.android.com/reference/android/widget/SearchView.OnQueryTextListener.html
SearchView.OnSuggestionListener	A										<section class="prog__container">Callback interface for selection events on suggestions. These callbacks are only relevant when a SearchableInfo has been specified by <pre><code>setSearchableInfo(SearchableInfo)</code></pre>.<pre><code>public static interface SearchView.OnSuggestionListener</code></pre></section>	https://developer.android.com/reference/android/widget/SearchView.OnSuggestionListener.html
SectionIndexer	A										<section class="prog__container">Interface that may implemented on <pre><code>Adapter</code></pre>s to enable fast scrolling between sections of an <pre><code>AbsListView</code></pre>.<pre><code>public interface SectionIndexer</code></pre></section>	https://developer.android.com/reference/android/widget/SectionIndexer.html
SeekBar	A										<section class="prog__container">A SeekBar is an extension of ProgressBar that adds a draggable thumb. The user can touch the thumb and drag left or right to set the current progress level or use the arrow keys. Placing focusable widgets to the left or right of a SeekBar is discouraged.<pre><code>public class SeekBar</code></pre></section>	https://developer.android.com/reference/android/widget/SeekBar.html
SeekBar.OnSeekBarChangeListener	A										<section class="prog__container">A callback that notifies clients when the progress level has been changed. This includes changes that were initiated by the user through a touch gesture or arrow key/trackball as well as changes that were initiated programmatically.<pre><code>public static interface SeekBar.OnSeekBarChangeListener</code></pre></section>	https://developer.android.com/reference/android/widget/SeekBar.OnSeekBarChangeListener.html
ShareActionProvider	A										<section class="prog__container">This is a provider for a share action. It is responsible for creating views that enable data sharing and also to show a sub menu with sharing activities if the hosting item is placed on the overflow menu.<pre><code>public class ShareActionProvider</code></pre></section>	https://developer.android.com/reference/android/widget/ShareActionProvider.html
ShareActionProvider.OnShareTargetSelectedListener	A										<section class="prog__container">Listener for the event of selecting a share target.<pre><code>public static interface ShareActionProvider.OnShareTargetSelectedListener</code></pre></section>	https://developer.android.com/reference/android/widget/ShareActionProvider.OnShareTargetSelectedListener.html
SimpleAdapter	A										<section class="prog__container">An easy adapter to map static data to views defined in an XML file. You can specify the data backing the list as an ArrayList of Maps. Each entry in the ArrayList corresponds to one row in the list. The Maps contain the data for each row. You also specify an XML file that defines the views used to display the row, and a mapping from keys in the Map to specific views. Binding data to views occurs in two phases. First, if a <pre><code>SimpleAdapter.ViewBinder</code></pre> is available, <pre><code>setViewValue(android.view.View, Object, String)</code></pre> is invoked. If the returned value is true, binding has occurred. If the returned value is false, the following views are then tried in order: <ul> <li> A view that implements Checkable (e.g. CheckBox). The expected bind value is a boolean. <li> TextView. The expected bind value is a string and <pre><code>setViewText(TextView, String)</code></pre> is invoked. <li> ImageView. The expected bind value is a resource id or a string and <pre><code>setViewImage(ImageView, int)</code></pre> or <pre><code>setViewImage(ImageView, String)</code></pre> is invoked. </li></li></li></ul> If no appropriate binding can be found, an <pre><code>IllegalStateException</code></pre> is thrown.<pre><code>public class SimpleAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/SimpleAdapter.html
SimpleAdapter.ViewBinder	A										<section class="prog__container">This class can be used by external clients of SimpleAdapter to bind values to views. You should use this class to bind values to views that are not directly supported by SimpleAdapter or to change the way binding occurs for views supported by SimpleAdapter.<pre><code>public static interface SimpleAdapter.ViewBinder</code></pre></section>	https://developer.android.com/reference/android/widget/SimpleAdapter.ViewBinder.html
SimpleCursorAdapter.CursorToStringConverter	A										<section class="prog__container">This class can be used by external clients of SimpleCursorAdapter to define how the Cursor should be converted to a String.<pre><code>public static interface SimpleCursorAdapter.CursorToStringConverter</code></pre></section>	https://developer.android.com/reference/android/widget/SimpleCursorAdapter.CursorToStringConverter.html
SimpleCursorAdapter	A										<section class="prog__container">An easy adapter to map columns from a cursor to TextViews or ImageViews defined in an XML file. You can specify which columns you want, which views you want to display the columns, and the XML file that defines the appearance of these views. Binding occurs in two phases. First, if a <pre><code>SimpleCursorAdapter.ViewBinder</code></pre> is available, <pre><code>setViewValue(android.view.View, android.database.Cursor, int)</code></pre> is invoked. If the returned value is true, binding has occured. If the returned value is false and the view to bind is a TextView, <pre><code>setViewText(TextView, String)</code></pre> is invoked. If the returned value is false and the view to bind is an ImageView, <pre><code>setViewImage(ImageView, String)</code></pre> is invoked. If no appropriate binding can be found, an <pre><code>IllegalStateException</code></pre> is thrown. If this adapter is used with filtering, for instance in an <pre><code>AutoCompleteTextView</code></pre>, you can use the <pre><code>SimpleCursorAdapter.CursorToStringConverter</code></pre> and the <pre><code>FilterQueryProvider</code></pre> interfaces to get control over the filtering process. You can refer to <pre><code>convertToString(android.database.Cursor)</code></pre> and <pre><code>runQueryOnBackgroundThread(CharSequence)</code></pre> for more information.<pre><code>public class SimpleCursorAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/SimpleCursorAdapter.html
SimpleCursorAdapter.ViewBinder	A										<section class="prog__container">This class can be used by external clients of SimpleCursorAdapter to bind values fom the Cursor to views. You should use this class to bind values from the Cursor to views that are not directly supported by SimpleCursorAdapter or to change the way binding occurs for views supported by SimpleCursorAdapter.<pre><code>public static interface SimpleCursorAdapter.ViewBinder</code></pre></section>	https://developer.android.com/reference/android/widget/SimpleCursorAdapter.ViewBinder.html
SimpleCursorTreeAdapter	A										<section class="prog__container">An easy adapter to map columns from a cursor to TextViews or ImageViews defined in an XML file. You can specify which columns you want, which views you want to display the columns, and the XML file that defines the appearance of these views. Separate XML files for child and groups are possible. Binding occurs in two phases. First, if a <pre><code>SimpleCursorTreeAdapter.ViewBinder</code></pre> is available, <pre><code>setViewValue(android.view.View, android.database.Cursor, int)</code></pre> is invoked. If the returned value is true, binding has occurred. If the returned value is false and the view to bind is a TextView, <pre><code>setViewText(TextView, String)</code></pre> is invoked. If the returned value is false and the view to bind is an ImageView, <pre><code>setViewImage(ImageView, String)</code></pre> is invoked. If no appropriate binding can be found, an <pre><code>IllegalStateException</code></pre> is thrown.<pre><code>public abstract class SimpleCursorTreeAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html
SimpleCursorTreeAdapter.ViewBinder	A										<section class="prog__container">This class can be used by external clients of SimpleCursorTreeAdapter to bind values from the Cursor to views. You should use this class to bind values from the Cursor to views that are not directly supported by SimpleCursorTreeAdapter or to change the way binding occurs for views supported by SimpleCursorTreeAdapter.<pre><code>public static interface SimpleCursorTreeAdapter.ViewBinder</code></pre></section>	https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.ViewBinder.html
SimpleExpandableListAdapter	A										<section class="prog__container">An easy adapter to map static data to group and child views defined in an XML file. You can separately specify the data backing the group as a List of Maps. Each entry in the ArrayList corresponds to one group in the expandable list. The Maps contain the data for each row. You also specify an XML file that defines the views used to display a group, and a mapping from keys in the Map to specific views. This process is similar for a child, except it is one-level deeper so the data backing is specified as a List<list<map>&gt;, where the first List corresponds to the group of the child, the second List corresponds to the position of the child within the group, and finally the Map holds the data for that particular child. </list<map><pre><code>public class SimpleExpandableListAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/SimpleExpandableListAdapter.html
SlidingDrawer	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 17.</strong><br/> This class is not supported anymore. It is recommended you base your own implementation on the source code for the Android Open Source Project if you must use it in your application.<pre><code>public class SlidingDrawer</code></pre></section>	https://developer.android.com/reference/android/widget/SlidingDrawer.html
SlidingDrawer.OnDrawerCloseListener	A										<section class="prog__container">Callback invoked when the drawer is closed.<pre><code>public static interface SlidingDrawer.OnDrawerCloseListener</code></pre></section>	https://developer.android.com/reference/android/widget/SlidingDrawer.OnDrawerCloseListener.html
SlidingDrawer.OnDrawerOpenListener	A										<section class="prog__container">Callback invoked when the drawer is opened.<pre><code>public static interface SlidingDrawer.OnDrawerOpenListener</code></pre></section>	https://developer.android.com/reference/android/widget/SlidingDrawer.OnDrawerOpenListener.html
SlidingDrawer.OnDrawerScrollListener	A										<section class="prog__container">Callback invoked when the drawer is scrolled.<pre><code>public static interface SlidingDrawer.OnDrawerScrollListener</code></pre></section>	https://developer.android.com/reference/android/widget/SlidingDrawer.OnDrawerScrollListener.html
Space	A										<section class="prog__container">Space is a lightweight View subclass that may be used to create gaps between components in general purpose layouts.<pre><code>public final class Space</code></pre></section>	https://developer.android.com/reference/android/widget/Space.html
Spinner	A										<section class="prog__container">A view that displays one child at a time and lets the user pick among them. The items in the Spinner come from the <pre><code>Adapter</code></pre> associated with this view.<pre><code>public class Spinner</code></pre></section>	https://developer.android.com/reference/android/widget/Spinner.html
SpinnerAdapter	A										<section class="prog__container">Extended <pre><code>Adapter</code></pre> that is the bridge between a <pre><code>Spinner</code></pre> and its data. A spinner adapter allows to define two different views: one that shows the data in the spinner itself and one that shows the data in the drop down list when the spinner is pressed.<pre><code>public interface SpinnerAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/SpinnerAdapter.html
StackView	A										<section class="prog__container"><pre><code>public class StackView</code></pre></section>	https://developer.android.com/reference/android/widget/StackView.html
Switch	A										<section class="prog__container">A Switch is a two-state toggle switch widget that can select between two options. The user may drag the "thumb" back and forth to choose the selected option, or simply tap to toggle as if it were a checkbox. The <pre><code>text</code></pre> property controls the text displayed in the label for the switch, whereas the <pre><code>off</code></pre> and <pre><code>on</code></pre> text controls the text on the thumb. Similarly, the <pre><code>textAppearance</code></pre> and the related setTypeface() methods control the typeface and style of label text, whereas the <pre><code>switchTextAppearance</code></pre> and the related setSwitchTypeface() methods control that of the thumb.<pre><code>public class Switch</code></pre></section>	https://developer.android.com/reference/android/widget/Switch.html
TabHost	A										<section class="prog__container">Container for a tabbed window view. This object holds two children: a set of tab labels that the user clicks to select a specific tab, and a FrameLayout object that displays the contents of that page. The individual elements are typically controlled using this container object, rather than setting values on the child elements themselves.<pre><code>public class TabHost</code></pre></section>	https://developer.android.com/reference/android/widget/TabHost.html
TabHost.OnTabChangeListener	A										<section class="prog__container">Interface definition for a callback to be invoked when tab changed<pre><code>public static interface TabHost.OnTabChangeListener</code></pre></section>	https://developer.android.com/reference/android/widget/TabHost.OnTabChangeListener.html
TabHost.TabContentFactory	A										<section class="prog__container">Makes the content of a tab when it is selected. Use this if your tab content needs to be created on demand, i.e. you are not showing an existing view or starting an activity.<pre><code>public static interface TabHost.TabContentFactory</code></pre></section>	https://developer.android.com/reference/android/widget/TabHost.TabContentFactory.html
TabHost.TabSpec	A										<section class="prog__container">A tab has a tab indicator, content, and a tag that is used to keep track of it. This builder helps choose among these options. For the tab indicator, your choices are: 1) set a label 2) set a label and an icon For the tab content, your choices are: 1) the id of a <pre><code>View</code></pre> 2) a <pre><code>TabHost.TabContentFactory</code></pre> that creates the <pre><code>View</code></pre> content. 3) an <pre><code>Intent</code></pre> that launches an <pre><code>Activity</code></pre>.<pre><code>public class TabHost.TabSpec</code></pre></section>	https://developer.android.com/reference/android/widget/TabHost.TabSpec.html
TableLayout	A										<section class="prog__container"><pre><code>public class TableLayout</code></pre></section>	https://developer.android.com/reference/android/widget/TableLayout.html
TableLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class TableLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/TableLayout.LayoutParams.html
TableRow	A										<section class="prog__container"><pre><code>public class TableRow</code></pre></section>	https://developer.android.com/reference/android/widget/TableRow.html
TableRow.LayoutParams	A										<section class="prog__container"><pre><code>public static class TableRow.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/TableRow.LayoutParams.html
TabWidget	A										<section class="prog__container">Displays a list of tab labels representing each page in the parent's tab collection.<pre><code>public class TabWidget</code></pre></section>	https://developer.android.com/reference/android/widget/TabWidget.html
TextClock	A										<section class="prog__container"><pre><code>public class TextClock</code></pre></section>	https://developer.android.com/reference/android/widget/TextClock.html
TextSwitcher	A										<section class="prog__container">Specialized <pre><code>ViewSwitcher</code></pre> that contains only children of type <pre><code>TextView</code></pre>. A TextSwitcher is useful to animate a label on screen. Whenever <pre><code>setText(CharSequence)</code></pre> is called, TextSwitcher animates the current text out and animates the new text in.<pre><code>public class TextSwitcher</code></pre></section>	https://developer.android.com/reference/android/widget/TextSwitcher.html
TextView.BufferType	A										<section class="prog__container"><pre><code>public static final enum TextView.BufferType</code></pre></section>	https://developer.android.com/reference/android/widget/TextView.BufferType.html
TextView	A										<section class="prog__container">Displays text to the user and optionally allows them to edit it. A TextView is a complete text editor, however the basic class is configured to not allow editing; see <pre><code>EditText</code></pre> for a subclass that configures the text view for editing.<pre><code>public class TextView</code></pre></section>	https://developer.android.com/reference/android/widget/TextView.html
TextView.OnEditorActionListener	A										<section class="prog__container">Interface definition for a callback to be invoked when an action is performed on the editor.<pre><code>public static interface TextView.OnEditorActionListener</code></pre></section>	https://developer.android.com/reference/android/widget/TextView.OnEditorActionListener.html
TextView.SavedState	A										<section class="prog__container">User interface state that is stored by TextView for implementing <pre><code>onSaveInstanceState()</code></pre>.<pre><code>public static class TextView.SavedState</code></pre></section>	https://developer.android.com/reference/android/widget/TextView.SavedState.html
ThemedSpinnerAdapter	A										<section class="prog__container">An extension of SpinnerAdapter that is capable of inflating drop-down views against a different theme than normal views.<pre><code>public interface ThemedSpinnerAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/ThemedSpinnerAdapter.html
TimePicker	A										<section class="prog__container">A widget for selecting the time of day, in either 24-hour or AM/PM mode.<pre><code>public class TimePicker</code></pre></section>	https://developer.android.com/reference/android/widget/TimePicker.html
TimePicker.OnTimeChangedListener	A										<section class="prog__container">The callback interface used to indicate the time has been adjusted.<pre><code>public static interface TimePicker.OnTimeChangedListener</code></pre></section>	https://developer.android.com/reference/android/widget/TimePicker.OnTimeChangedListener.html
Toast	A										<section class="prog__container">A toast is a view containing a quick little message for the user. The toast class helps you create and show those.<pre><code>public class Toast</code></pre></section>	https://developer.android.com/reference/android/widget/Toast.html
ToggleButton	A										<section class="prog__container">Displays checked/unchecked states as a button with a "light" indicator and by default accompanied with the text "ON" or "OFF".<pre><code>public class ToggleButton</code></pre></section>	https://developer.android.com/reference/android/widget/ToggleButton.html
Toolbar	A										<section class="prog__container">A standard toolbar for use within application content.<pre><code>public class Toolbar</code></pre></section>	https://developer.android.com/reference/android/widget/Toolbar.html
Toolbar.LayoutParams	A										<section class="prog__container">Layout information for child views of Toolbars.<pre><code>public static class Toolbar.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html
Toolbar.OnMenuItemClickListener	A										<section class="prog__container">Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.<pre><code>public static interface Toolbar.OnMenuItemClickListener</code></pre></section>	https://developer.android.com/reference/android/widget/Toolbar.OnMenuItemClickListener.html
TwoLineListItem	A										<section class="prog__container"><p class="caution"><strong> This class was deprecated in API level 17.</strong><br/> This class can be implemented easily by apps using a <pre><code>RelativeLayout</code></pre> or a <pre><code>LinearLayout</code></pre>.<pre><code>public class TwoLineListItem</code></pre></section>	https://developer.android.com/reference/android/widget/TwoLineListItem.html
VideoView	A										<section class="prog__container">Displays a video file. The VideoView class can load images from various sources (such as resources or content providers), takes care of computing its measurement from the video so that it can be used in any layout manager, and provides various display options such as scaling and tinting.<pre><code>public class VideoView</code></pre></section>	https://developer.android.com/reference/android/widget/VideoView.html
ViewAnimator	A										<section class="prog__container">Base class for a <pre><code>FrameLayout</code></pre> container that will perform animations when switching between its views.<pre><code>public class ViewAnimator</code></pre></section>	https://developer.android.com/reference/android/widget/ViewAnimator.html
ViewFlipper	A										<section class="prog__container">Simple <pre><code>ViewAnimator</code></pre> that will animate between two or more views that have been added to it. Only one child is shown at a time. If requested, can automatically flip between each child at a regular interval.<pre><code>public class ViewFlipper</code></pre></section>	https://developer.android.com/reference/android/widget/ViewFlipper.html
ViewSwitcher	A										<section class="prog__container"><pre><code>ViewAnimator</code></pre> that switches between two views, and has a factory from which these views are created. You can either use the factory to create the views, or add them yourself. A ViewSwitcher can only have two child views, of which only one is shown at a time.<pre><code>public class ViewSwitcher</code></pre></section>	https://developer.android.com/reference/android/widget/ViewSwitcher.html
ViewSwitcher.ViewFactory	A										<section class="prog__container">Creates views in a ViewSwitcher.<pre><code>public static interface ViewSwitcher.ViewFactory</code></pre></section>	https://developer.android.com/reference/android/widget/ViewSwitcher.ViewFactory.html
WrapperListAdapter	A										<section class="prog__container">List adapter that wraps another list adapter. The wrapped adapter can be retrieved by calling <pre><code>getWrappedAdapter()</code></pre>.<pre><code>public interface WrapperListAdapter</code></pre></section>	https://developer.android.com/reference/android/widget/WrapperListAdapter.html
ZoomButton	A										<section class="prog__container"><pre><code>public class ZoomButton</code></pre></section>	https://developer.android.com/reference/android/widget/ZoomButton.html
ZoomButtonsController	A										<section class="prog__container">The <pre><code>ZoomButtonsController</code></pre> handles showing and hiding the zoom controls and positioning it relative to an owner view. It also gives the client access to the zoom controls container, allowing for additional accessory buttons to be shown in the zoom controls window.<pre><code>public class ZoomButtonsController</code></pre></section>	https://developer.android.com/reference/android/widget/ZoomButtonsController.html
ZoomButtonsController.OnZoomListener	A										<section class="prog__container">Interface that will be called when the user performs an interaction that triggers some action, for example zooming.<pre><code>public static interface ZoomButtonsController.OnZoomListener</code></pre></section>	https://developer.android.com/reference/android/widget/ZoomButtonsController.OnZoomListener.html
ZoomControls	A										<section class="prog__container">The <pre><code>ZoomControls</code></pre> class displays a simple set of controls used for zooming and provides callbacks to register for events.<pre><code>public class ZoomControls</code></pre></section>	https://developer.android.com/reference/android/widget/ZoomControls.html
